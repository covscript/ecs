###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement_ 4 stmts_@0_rep_1@0_rep_2 5 if 294 basic_expr_ 295 ENDL 296 stmts_ 297 else_stmt_ 301 stmts_ 302 if_stmt_@0_rep_5 303 
Input: 
	EOF %END%,ENDL \n,ID end,
state: 303,  type: ID ,data:  end
predict_table[303].exist(ID)
predict_table[303].exist(end)
exist data  end
push datA: end
res is : [cs::structure_LR_type]
res iss:
reduce part
if2
reduce part1
now_state is : 297
res.root: if_stmt_@0_rep_5
predict_table[now_state].at(res.root): 298
root_node: [cs::structure_tree_type]
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement_ 4 stmts_@0_rep_1@0_rep_2 5 if 294 basic_expr_ 295 ENDL 296 stmts_ 297 if_stmt_@0_rep_5 298 
Input: 
	EOF %END%,ENDL \n,ID end,
state: 298,  type: ID ,data:  end
predict_table[298].exist(ID)
predict_table[298].exist(end)
exist data  end
push datA: end
res is : 299
res iss:
push 1
push 2
push 3
push 4
###################
SHOW PARSING STACKS
###################
Parsing stack: 
	0 statement_ 4 stmts_@0_rep_1@0_rep_2 5 if 294 basic_expr_ 295 ENDL 296 stmts_ 297 if_stmt_@0_rep_5 298 end 299 
Input: 
	EOF %END%,ENDL \n,
state: 299,  type: ENDL ,data:  


predict_table[299].exist(ENDL)
exist type  ENDL
predict_table[299].exist(

)
push datA: ENDL
res is : 300
res iss:
push 1
push 2
push 3
push 4


