start ./ebnf/ecs.ebnf
#########################
Begin Lexical Analysis...
#########################
############
Lexer Output
############
CP = 0    Type = id	Data = begin	Pos = (0, 0)
CP = 1    Type = sig	Data = ::=	Pos = (5, 0)
CP = 2    Type = id	Data = stmts	Pos = (9, 0)
CP = 3    Type = sig	Data = ;	Pos = (15, 0)
CP = 4    Type = id	Data = ignore	Pos = (0, 2)
CP = 5    Type = sig	Data = ::=	Pos = (7, 2)
CP = 6    Type = brac	Data = {	Pos = (11, 2)
CP = 7    Type = token	Data = ENDL	Pos = (13, 2)
CP = 8    Type = brac	Data = }	Pos = (18, 2)
CP = 9    Type = sig	Data = ;	Pos = (20, 2)
CP = 10   Type = id	Data = endline	Pos = (0, 4)
CP = 11   Type = sig	Data = ::=	Pos = (8, 4)
CP = 12   Type = token	Data = ENDL	Pos = (12, 4)
CP = 13   Type = sig	Data = |	Pos = (17, 4)
CP = 14   Type = slit	Data = ';'	Pos = (19, 4)
CP = 15   Type = sig	Data = ;	Pos = (23, 4)
CP = 16   Type = id	Data = stmts	Pos = (0, 6)
CP = 17   Type = sig	Data = ::=	Pos = (6, 6)
CP = 18   Type = brac	Data = {	Pos = (10, 6)
CP = 19   Type = id	Data = statement	Pos = (11, 6)
CP = 20   Type = brac	Data = {	Pos = (21, 6)
CP = 21   Type = token	Data = ENDL	Pos = (22, 6)
CP = 22   Type = brac	Data = }	Pos = (26, 6)
CP = 23   Type = brac	Data = }	Pos = (27, 6)
CP = 24   Type = sig	Data = ;	Pos = (29, 6)
CP = 25   Type = id	Data = decl-stmts	Pos = (0, 8)
CP = 26   Type = sig	Data = ::=	Pos = (11, 8)
CP = 27   Type = brac	Data = {	Pos = (15, 8)
CP = 28   Type = id	Data = declaration	Pos = (16, 8)
CP = 29   Type = brac	Data = {	Pos = (28, 8)
CP = 30   Type = token	Data = ENDL	Pos = (29, 8)
CP = 31   Type = brac	Data = }	Pos = (33, 8)
CP = 32   Type = brac	Data = }	Pos = (34, 8)
CP = 33   Type = sig	Data = ;	Pos = (36, 8)
CP = 34   Type = id	Data = endblock	Pos = (0, 10)
CP = 35   Type = sig	Data = ::=	Pos = (9, 10)
CP = 36   Type = id	Data = end-stmt	Pos = (13, 10)
CP = 37   Type = sig	Data = |	Pos = (22, 10)
CP = 38   Type = id	Data = else-stmt	Pos = (24, 10)
CP = 39   Type = sig	Data = |	Pos = (34, 10)
CP = 40   Type = id	Data = until-stmt	Pos = (36, 10)
CP = 41   Type = sig	Data = |	Pos = (47, 10)
CP = 42   Type = id	Data = catch-stmt	Pos = (49, 10)
CP = 43   Type = sig	Data = ;	Pos = (60, 10)
CP = 44   Type = id	Data = statement	Pos = (0, 12)
CP = 45   Type = sig	Data = ::=	Pos = (10, 12)
CP = 46   Type = id	Data = prep-stmt	Pos = (14, 12)
CP = 47   Type = sig	Data = |	Pos = (24, 12)
CP = 48   Type = id	Data = package-stmt	Pos = (26, 12)
CP = 49   Type = sig	Data = |	Pos = (39, 12)
CP = 50   Type = id	Data = import-stmt	Pos = (41, 12)
CP = 51   Type = sig	Data = |	Pos = (53, 12)
CP = 52   Type = id	Data = var-stmt	Pos = (55, 12)
CP = 53   Type = sig	Data = |	Pos = (64, 12)
CP = 54   Type = id	Data = block-stmt	Pos = (66, 12)
CP = 55   Type = sig	Data = |	Pos = (77, 12)
CP = 56   Type = id	Data = namespace-stmt	Pos = (79, 12)
CP = 57   Type = sig	Data = |	Pos = (94, 12)
CP = 58   Type = id	Data = using-stmt	Pos = (96, 12)
CP = 59   Type = sig	Data = |	Pos = (107, 12)
CP = 60   Type = id	Data = if-stmt	Pos = (109, 12)
CP = 61   Type = sig	Data = |	Pos = (117, 12)
CP = 62   Type = id	Data = switch-stmt	Pos = (119, 12)
CP = 63   Type = sig	Data = |	Pos = (131, 12)
CP = 64   Type = id	Data = while-stmt	Pos = (133, 12)
CP = 65   Type = sig	Data = |	Pos = (144, 12)
CP = 66   Type = id	Data = loop-stmt	Pos = (146, 12)
CP = 67   Type = sig	Data = |	Pos = (156, 12)
CP = 68   Type = id	Data = for-stmt	Pos = (158, 12)
CP = 69   Type = sig	Data = |	Pos = (167, 12)
CP = 70   Type = id	Data = foreach-stmt	Pos = (169, 12)
CP = 71   Type = sig	Data = |	Pos = (182, 12)
CP = 72   Type = id	Data = control-stmt	Pos = (184, 12)
CP = 73   Type = sig	Data = |	Pos = (197, 12)
CP = 74   Type = id	Data = function-stmt	Pos = (199, 12)
CP = 75   Type = sig	Data = |	Pos = (213, 12)
CP = 76   Type = id	Data = return-stmt	Pos = (215, 12)
CP = 77   Type = sig	Data = |	Pos = (227, 12)
CP = 78   Type = id	Data = try-stmt	Pos = (229, 12)
CP = 79   Type = sig	Data = |	Pos = (238, 12)
CP = 80   Type = id	Data = throw-stmt	Pos = (240, 12)
CP = 81   Type = sig	Data = |	Pos = (251, 12)
CP = 82   Type = id	Data = class-stmt	Pos = (253, 12)
CP = 83   Type = sig	Data = |	Pos = (264, 12)
CP = 84   Type = id	Data = expr-stmt	Pos = (266, 12)
CP = 85   Type = sig	Data = ;	Pos = (276, 12)
CP = 86   Type = id	Data = declaration	Pos = (0, 14)
CP = 87   Type = sig	Data = ::=	Pos = (12, 14)
CP = 88   Type = id	Data = prep-stmt	Pos = (16, 14)
CP = 89   Type = sig	Data = |	Pos = (26, 14)
CP = 90   Type = id	Data = namespace-stmt	Pos = (28, 14)
CP = 91   Type = sig	Data = |	Pos = (43, 14)
CP = 92   Type = id	Data = var-stmt	Pos = (45, 14)
CP = 93   Type = sig	Data = |	Pos = (54, 14)
CP = 94   Type = id	Data = using-stmt	Pos = (56, 14)
CP = 95   Type = sig	Data = |	Pos = (67, 14)
CP = 96   Type = id	Data = function-stmt	Pos = (69, 14)
CP = 97   Type = sig	Data = |	Pos = (83, 14)
CP = 98   Type = id	Data = class-stmt	Pos = (85, 14)
CP = 99   Type = sig	Data = ;	Pos = (96, 14)
CP = 100  Type = id	Data = prep-stmt	Pos = (0, 16)
CP = 101  Type = sig	Data = ::=	Pos = (10, 16)
CP = 102  Type = token	Data = PREP	Pos = (14, 16)
CP = 103  Type = token	Data = ENDL	Pos = (19, 16)
CP = 104  Type = sig	Data = ;	Pos = (24, 16)
CP = 105  Type = id	Data = package-stmt	Pos = (0, 18)
CP = 106  Type = sig	Data = ::=	Pos = (13, 18)
CP = 107  Type = slit	Data = 'package'	Pos = (17, 18)
CP = 108  Type = token	Data = ID	Pos = (27, 18)
CP = 109  Type = id	Data = endline	Pos = (30, 18)
CP = 110  Type = sig	Data = ;	Pos = (38, 18)
CP = 111  Type = id	Data = import-stmt	Pos = (0, 20)
CP = 112  Type = sig	Data = ::=	Pos = (12, 20)
CP = 113  Type = slit	Data = 'import'	Pos = (16, 20)
CP = 114  Type = id	Data = import-list	Pos = (25, 20)
CP = 115  Type = id	Data = endline	Pos = (37, 20)
CP = 116  Type = sig	Data = ;	Pos = (45, 20)
CP = 117  Type = id	Data = module-list	Pos = (0, 22)
CP = 118  Type = sig	Data = ::=	Pos = (12, 22)
CP = 119  Type = token	Data = ID	Pos = (16, 22)
CP = 120  Type = brac	Data = [	Pos = (19, 22)
CP = 121  Type = slit	Data = '.'	Pos = (20, 22)
CP = 122  Type = brac	Data = (	Pos = (24, 22)
CP = 123  Type = slit	Data = '*'	Pos = (25, 22)
CP = 124  Type = sig	Data = |	Pos = (29, 22)
CP = 125  Type = id	Data = module-list	Pos = (31, 22)
CP = 126  Type = brac	Data = )	Pos = (43, 22)
CP = 127  Type = brac	Data = ]	Pos = (44, 22)
CP = 128  Type = sig	Data = ;	Pos = (46, 22)
CP = 129  Type = id	Data = import-list	Pos = (0, 24)
CP = 130  Type = sig	Data = ::=	Pos = (12, 24)
CP = 131  Type = id	Data = module-list	Pos = (16, 24)
CP = 132  Type = brac	Data = [	Pos = (28, 24)
CP = 133  Type = slit	Data = 'as'	Pos = (29, 24)
CP = 134  Type = token	Data = ID	Pos = (34, 24)
CP = 135  Type = brac	Data = ]	Pos = (37, 24)
CP = 136  Type = brac	Data = [	Pos = (39, 24)
CP = 137  Type = slit	Data = ','	Pos = (40, 24)
CP = 138  Type = id	Data = import-list	Pos = (44, 24)
CP = 139  Type = brac	Data = ]	Pos = (56, 24)
CP = 140  Type = sig	Data = ;	Pos = (58, 24)
CP = 141  Type = id	Data = var-def	Pos = (0, 26)
CP = 142  Type = sig	Data = ::=	Pos = (8, 26)
CP = 143  Type = id	Data = var-bind	Pos = (12, 26)
CP = 144  Type = slit	Data = '='	Pos = (21, 26)
CP = 145  Type = id	Data = basic-expr	Pos = (25, 26)
CP = 146  Type = sig	Data = |	Pos = (36, 26)
CP = 147  Type = id	Data = var-list	Pos = (38, 26)
CP = 148  Type = sig	Data = ;	Pos = (46, 26)
CP = 149  Type = id	Data = var-stmt	Pos = (0, 28)
CP = 150  Type = sig	Data = ::=	Pos = (9, 28)
CP = 151  Type = brac	Data = (	Pos = (13, 28)
CP = 152  Type = slit	Data = 'var'	Pos = (14, 28)
CP = 153  Type = sig	Data = |	Pos = (20, 28)
CP = 154  Type = slit	Data = 'link'	Pos = (22, 28)
CP = 155  Type = sig	Data = |	Pos = (29, 28)
CP = 156  Type = slit	Data = 'constant'	Pos = (31, 28)
CP = 157  Type = brac	Data = )	Pos = (41, 28)
CP = 158  Type = id	Data = var-def	Pos = (43, 28)
CP = 159  Type = id	Data = endline	Pos = (51, 28)
CP = 160  Type = sig	Data = ;	Pos = (59, 28)
CP = 161  Type = id	Data = var-bind	Pos = (0, 30)
CP = 162  Type = sig	Data = ::=	Pos = (9, 30)
CP = 163  Type = slit	Data = '('	Pos = (13, 30)
CP = 164  Type = id	Data = var-bind-list	Pos = (17, 30)
CP = 165  Type = brac	Data = {	Pos = (31, 30)
CP = 166  Type = slit	Data = ','	Pos = (32, 30)
CP = 167  Type = id	Data = var-bind-list	Pos = (36, 30)
CP = 168  Type = brac	Data = }	Pos = (49, 30)
CP = 169  Type = slit	Data = ')'	Pos = (51, 30)
CP = 170  Type = sig	Data = ;	Pos = (55, 30)
CP = 171  Type = id	Data = var-bind-list	Pos = (0, 32)
CP = 172  Type = sig	Data = ::=	Pos = (14, 32)
CP = 173  Type = token	Data = ID	Pos = (18, 32)
CP = 174  Type = sig	Data = |	Pos = (21, 32)
CP = 175  Type = slit	Data = '...'	Pos = (23, 32)
CP = 176  Type = sig	Data = |	Pos = (29, 32)
CP = 177  Type = id	Data = var-bind	Pos = (31, 32)
CP = 178  Type = sig	Data = ;	Pos = (40, 32)
CP = 179  Type = id	Data = var-list	Pos = (0, 34)
CP = 180  Type = sig	Data = ::=	Pos = (9, 34)
CP = 181  Type = token	Data = ID	Pos = (13, 34)
CP = 182  Type = slit	Data = '='	Pos = (16, 34)
CP = 183  Type = id	Data = single-expr	Pos = (20, 34)
CP = 184  Type = brac	Data = [	Pos = (32, 34)
CP = 185  Type = slit	Data = ','	Pos = (33, 34)
CP = 186  Type = id	Data = var-list	Pos = (37, 34)
CP = 187  Type = brac	Data = ]	Pos = (45, 34)
CP = 188  Type = sig	Data = ;	Pos = (46, 34)
CP = 189  Type = id	Data = block-stmt	Pos = (0, 36)
CP = 190  Type = sig	Data = ::=	Pos = (11, 36)
CP = 191  Type = slit	Data = 'block'	Pos = (15, 36)
CP = 192  Type = token	Data = ENDL	Pos = (23, 36)
CP = 193  Type = id	Data = stmts	Pos = (28, 36)
CP = 194  Type = slit	Data = 'end'	Pos = (34, 36)
CP = 195  Type = token	Data = ENDL	Pos = (40, 36)
CP = 196  Type = sig	Data = ;	Pos = (44, 36)
CP = 197  Type = id	Data = namespace-stmt	Pos = (0, 38)
CP = 198  Type = sig	Data = ::=	Pos = (15, 38)
CP = 199  Type = slit	Data = 'namespace'	Pos = (19, 38)
CP = 200  Type = token	Data = ID	Pos = (31, 38)
CP = 201  Type = token	Data = ENDL	Pos = (34, 38)
CP = 202  Type = id	Data = decl-stmts	Pos = (39, 38)
CP = 203  Type = slit	Data = 'end'	Pos = (50, 38)
CP = 204  Type = token	Data = ENDL	Pos = (56, 38)
CP = 205  Type = sig	Data = ;	Pos = (60, 38)
CP = 206  Type = id	Data = using-stmt	Pos = (0, 40)
CP = 207  Type = sig	Data = ::=	Pos = (11, 40)
CP = 208  Type = slit	Data = 'using'	Pos = (15, 40)
CP = 209  Type = id	Data = using-list	Pos = (23, 40)
CP = 210  Type = id	Data = endline	Pos = (34, 40)
CP = 211  Type = sig	Data = ;	Pos = (41, 40)
CP = 212  Type = id	Data = using-list	Pos = (0, 42)
CP = 213  Type = sig	Data = ::=	Pos = (11, 42)
CP = 214  Type = id	Data = module-list	Pos = (15, 42)
CP = 215  Type = brac	Data = [	Pos = (27, 42)
CP = 216  Type = slit	Data = ','	Pos = (28, 42)
CP = 217  Type = id	Data = using-list	Pos = (32, 42)
CP = 218  Type = brac	Data = ]	Pos = (42, 42)
CP = 219  Type = sig	Data = ;	Pos = (43, 42)
CP = 220  Type = id	Data = if-stmt	Pos = (0, 44)
CP = 221  Type = sig	Data = ::=	Pos = (8, 44)
CP = 222  Type = slit	Data = 'if'	Pos = (12, 44)
CP = 223  Type = id	Data = basic-expr	Pos = (17, 44)
CP = 224  Type = token	Data = ENDL	Pos = (28, 44)
CP = 225  Type = id	Data = stmts	Pos = (33, 44)
CP = 226  Type = brac	Data = {	Pos = (39, 44)
CP = 227  Type = id	Data = else-stmt	Pos = (40, 44)
CP = 228  Type = id	Data = stmts	Pos = (50, 44)
CP = 229  Type = brac	Data = }	Pos = (55, 44)
CP = 230  Type = slit	Data = 'end'	Pos = (57, 44)
CP = 231  Type = token	Data = ENDL	Pos = (63, 44)
CP = 232  Type = sig	Data = ;	Pos = (67, 44)
CP = 233  Type = id	Data = else-stmt	Pos = (0, 46)
CP = 234  Type = sig	Data = ::=	Pos = (10, 46)
CP = 235  Type = slit	Data = 'else'	Pos = (14, 46)
CP = 236  Type = brac	Data = [	Pos = (21, 46)
CP = 237  Type = slit	Data = 'if'	Pos = (22, 46)
CP = 238  Type = id	Data = basic-expr	Pos = (27, 46)
CP = 239  Type = brac	Data = ]	Pos = (37, 46)
CP = 240  Type = token	Data = ENDL	Pos = (39, 46)
CP = 241  Type = sig	Data = ;	Pos = (44, 46)
CP = 242  Type = id	Data = switch-stmt	Pos = (0, 48)
CP = 243  Type = sig	Data = ::=	Pos = (12, 48)
CP = 244  Type = slit	Data = 'switch'	Pos = (16, 48)
CP = 245  Type = id	Data = basic-expr	Pos = (25, 48)
CP = 246  Type = token	Data = ENDL	Pos = (36, 48)
CP = 247  Type = id	Data = switch-stmts	Pos = (41, 48)
CP = 248  Type = slit	Data = 'end'	Pos = (54, 48)
CP = 249  Type = token	Data = ENDL	Pos = (60, 48)
CP = 250  Type = sig	Data = ;	Pos = (64, 48)
CP = 251  Type = id	Data = switch-stmts	Pos = (0, 50)
CP = 252  Type = sig	Data = ::=	Pos = (13, 50)
CP = 253  Type = brac	Data = {	Pos = (17, 50)
CP = 254  Type = id	Data = switch-case	Pos = (18, 50)
CP = 255  Type = sig	Data = |	Pos = (30, 50)
CP = 256  Type = id	Data = switch-default	Pos = (32, 50)
CP = 257  Type = brac	Data = }	Pos = (46, 50)
CP = 258  Type = brac	Data = {	Pos = (48, 50)
CP = 259  Type = token	Data = ENDL	Pos = (49, 50)
CP = 260  Type = brac	Data = }	Pos = (53, 50)
CP = 261  Type = sig	Data = ;	Pos = (54, 50)
CP = 262  Type = id	Data = switch-case	Pos = (0, 52)
CP = 263  Type = sig	Data = ::=	Pos = (12, 52)
CP = 264  Type = slit	Data = 'case'	Pos = (16, 52)
CP = 265  Type = id	Data = logic-or-expr	Pos = (23, 52)
CP = 266  Type = token	Data = ENDL	Pos = (37, 52)
CP = 267  Type = id	Data = stmts	Pos = (42, 52)
CP = 268  Type = slit	Data = 'end'	Pos = (48, 52)
CP = 269  Type = token	Data = ENDL	Pos = (54, 52)
CP = 270  Type = sig	Data = ;	Pos = (58, 52)
CP = 271  Type = id	Data = switch-default	Pos = (0, 54)
CP = 272  Type = sig	Data = ::=	Pos = (15, 54)
CP = 273  Type = slit	Data = 'default'	Pos = (19, 54)
CP = 274  Type = token	Data = ENDL	Pos = (29, 54)
CP = 275  Type = id	Data = stmts	Pos = (34, 54)
CP = 276  Type = slit	Data = 'end'	Pos = (40, 54)
CP = 277  Type = token	Data = ENDL	Pos = (46, 54)
CP = 278  Type = sig	Data = ;	Pos = (50, 54)
CP = 279  Type = id	Data = while-stmt	Pos = (0, 56)
CP = 280  Type = sig	Data = ::=	Pos = (11, 56)
CP = 281  Type = slit	Data = 'while'	Pos = (15, 56)
CP = 282  Type = id	Data = basic-expr	Pos = (23, 56)
CP = 283  Type = token	Data = ENDL	Pos = (34, 56)
CP = 284  Type = id	Data = stmts	Pos = (39, 56)
CP = 285  Type = slit	Data = 'end'	Pos = (45, 56)
CP = 286  Type = token	Data = ENDL	Pos = (51, 56)
CP = 287  Type = sig	Data = ;	Pos = (55, 56)
CP = 288  Type = id	Data = loop-stmt	Pos = (0, 58)
CP = 289  Type = sig	Data = ::=	Pos = (10, 58)
CP = 290  Type = slit	Data = 'loop'	Pos = (14, 58)
CP = 291  Type = token	Data = ENDL	Pos = (21, 58)
CP = 292  Type = id	Data = stmts	Pos = (26, 58)
CP = 293  Type = brac	Data = (	Pos = (32, 58)
CP = 294  Type = id	Data = until-stmt	Pos = (33, 58)
CP = 295  Type = sig	Data = |	Pos = (44, 58)
CP = 296  Type = slit	Data = 'end'	Pos = (46, 58)
CP = 297  Type = sig	Data = |	Pos = (52, 58)
CP = 298  Type = token	Data = ENDL	Pos = (54, 58)
CP = 299  Type = brac	Data = )	Pos = (58, 58)
CP = 300  Type = sig	Data = ;	Pos = (59, 58)
CP = 301  Type = id	Data = until-stmt	Pos = (0, 60)
CP = 302  Type = sig	Data = ::=	Pos = (11, 60)
CP = 303  Type = slit	Data = 'until'	Pos = (15, 60)
CP = 304  Type = id	Data = basic-expr	Pos = (23, 60)
CP = 305  Type = token	Data = ENDL	Pos = (34, 60)
CP = 306  Type = sig	Data = ;	Pos = (38, 60)
CP = 307  Type = id	Data = for-stmt	Pos = (0, 62)
CP = 308  Type = sig	Data = ::=	Pos = (9, 62)
CP = 309  Type = slit	Data = 'for'	Pos = (13, 62)
CP = 310  Type = brac	Data = [	Pos = (19, 62)
CP = 311  Type = id	Data = var-def	Pos = (20, 62)
CP = 312  Type = brac	Data = ]	Pos = (27, 62)
CP = 313  Type = brac	Data = (	Pos = (29, 62)
CP = 314  Type = slit	Data = ';'	Pos = (30, 62)
CP = 315  Type = sig	Data = |	Pos = (34, 62)
CP = 316  Type = slit	Data = ','	Pos = (36, 62)
CP = 317  Type = brac	Data = )	Pos = (39, 62)
CP = 318  Type = brac	Data = [	Pos = (41, 62)
CP = 319  Type = id	Data = basic-expr	Pos = (42, 62)
CP = 320  Type = brac	Data = ]	Pos = (52, 62)
CP = 321  Type = brac	Data = (	Pos = (54, 62)
CP = 322  Type = slit	Data = ';'	Pos = (55, 62)
CP = 323  Type = sig	Data = |	Pos = (59, 62)
CP = 324  Type = slit	Data = ','	Pos = (61, 62)
CP = 325  Type = brac	Data = )	Pos = (64, 62)
CP = 326  Type = brac	Data = [	Pos = (66, 62)
CP = 327  Type = id	Data = basic-expr	Pos = (67, 62)
CP = 328  Type = brac	Data = ]	Pos = (77, 62)
CP = 329  Type = id	Data = for-body	Pos = (79, 62)
CP = 330  Type = sig	Data = ;	Pos = (87, 62)
CP = 331  Type = id	Data = foreach-stmt	Pos = (0, 64)
CP = 332  Type = sig	Data = ::=	Pos = (13, 64)
CP = 333  Type = slit	Data = 'foreach'	Pos = (17, 64)
CP = 334  Type = token	Data = ID	Pos = (27, 64)
CP = 335  Type = slit	Data = 'in'	Pos = (30, 64)
CP = 336  Type = id	Data = basic-expr	Pos = (35, 64)
CP = 337  Type = id	Data = for-body	Pos = (46, 64)
CP = 338  Type = sig	Data = ;	Pos = (54, 64)
CP = 339  Type = id	Data = for-body	Pos = (0, 66)
CP = 340  Type = sig	Data = ::=	Pos = (9, 66)
CP = 341  Type = brac	Data = (	Pos = (13, 66)
CP = 342  Type = slit	Data = 'do'	Pos = (14, 66)
CP = 343  Type = id	Data = basic-expr	Pos = (19, 66)
CP = 344  Type = id	Data = endline	Pos = (30, 66)
CP = 345  Type = sig	Data = |	Pos = (38, 66)
CP = 346  Type = token	Data = ENDL	Pos = (40, 66)
CP = 347  Type = id	Data = stmts	Pos = (45, 66)
CP = 348  Type = slit	Data = 'end'	Pos = (51, 66)
CP = 349  Type = token	Data = ENDL	Pos = (57, 66)
CP = 350  Type = brac	Data = )	Pos = (61, 66)
CP = 351  Type = sig	Data = ;	Pos = (62, 66)
CP = 352  Type = id	Data = function-stmt	Pos = (0, 68)
CP = 353  Type = sig	Data = ::=	Pos = (14, 68)
CP = 354  Type = slit	Data = 'function'	Pos = (18, 68)
CP = 355  Type = token	Data = ID	Pos = (29, 68)
CP = 356  Type = slit	Data = '('	Pos = (32, 68)
CP = 357  Type = brac	Data = [	Pos = (36, 68)
CP = 358  Type = id	Data = argument-list	Pos = (37, 68)
CP = 359  Type = brac	Data = ]	Pos = (50, 68)
CP = 360  Type = slit	Data = ')'	Pos = (52, 68)
CP = 361  Type = brac	Data = [	Pos = (56, 68)
CP = 362  Type = slit	Data = 'override'	Pos = (57, 68)
CP = 363  Type = brac	Data = ]	Pos = (67, 68)
CP = 364  Type = id	Data = function-body	Pos = (69, 68)
CP = 365  Type = sig	Data = ;	Pos = (82, 68)
CP = 366  Type = id	Data = function-body	Pos = (0, 70)
CP = 367  Type = sig	Data = ::=	Pos = (14, 70)
CP = 368  Type = brac	Data = (	Pos = (18, 70)
CP = 369  Type = brac	Data = [	Pos = (20, 70)
CP = 370  Type = token	Data = ENDL	Pos = (21, 70)
CP = 371  Type = brac	Data = ]	Pos = (25, 70)
CP = 372  Type = slit	Data = '{'	Pos = (27, 70)
CP = 373  Type = brac	Data = [	Pos = (30, 70)
CP = 374  Type = token	Data = ENDL	Pos = (31, 70)
CP = 375  Type = brac	Data = ]	Pos = (35, 70)
CP = 376  Type = id	Data = stmts	Pos = (37, 70)
CP = 377  Type = slit	Data = '}'	Pos = (43, 70)
CP = 378  Type = sig	Data = |	Pos = (47, 70)
CP = 379  Type = token	Data = ENDL	Pos = (49, 70)
CP = 380  Type = id	Data = stmts	Pos = (54, 70)
CP = 381  Type = slit	Data = 'end'	Pos = (60, 70)
CP = 382  Type = token	Data = ENDL	Pos = (66, 70)
CP = 383  Type = brac	Data = )	Pos = (70, 70)
CP = 384  Type = sig	Data = ;	Pos = (71, 70)
CP = 385  Type = id	Data = return-stmt	Pos = (0, 72)
CP = 386  Type = sig	Data = ::=	Pos = (12, 72)
CP = 387  Type = slit	Data = 'return'	Pos = (16, 72)
CP = 388  Type = brac	Data = [	Pos = (25, 72)
CP = 389  Type = id	Data = expr	Pos = (26, 72)
CP = 390  Type = brac	Data = ]	Pos = (30, 72)
CP = 391  Type = id	Data = endline	Pos = (32, 72)
CP = 392  Type = sig	Data = ;	Pos = (39, 72)
CP = 393  Type = id	Data = try-stmt	Pos = (0, 74)
CP = 394  Type = sig	Data = ::=	Pos = (9, 74)
CP = 395  Type = slit	Data = 'try'	Pos = (13, 74)
CP = 396  Type = token	Data = ENDL	Pos = (19, 74)
CP = 397  Type = id	Data = stmts	Pos = (24, 74)
CP = 398  Type = brac	Data = {	Pos = (30, 74)
CP = 399  Type = id	Data = catch-stmt	Pos = (31, 74)
CP = 400  Type = id	Data = stmts	Pos = (42, 74)
CP = 401  Type = brac	Data = }	Pos = (47, 74)
CP = 402  Type = slit	Data = 'end'	Pos = (49, 74)
CP = 403  Type = token	Data = ENDL	Pos = (55, 74)
CP = 404  Type = sig	Data = ;	Pos = (59, 74)
CP = 405  Type = id	Data = catch-stmt	Pos = (0, 76)
CP = 406  Type = sig	Data = ::=	Pos = (11, 76)
CP = 407  Type = slit	Data = 'catch'	Pos = (15, 76)
CP = 408  Type = token	Data = ID	Pos = (23, 76)
CP = 409  Type = brac	Data = [	Pos = (26, 76)
CP = 410  Type = slit	Data = ':'	Pos = (27, 76)
CP = 411  Type = id	Data = visit-expr	Pos = (31, 76)
CP = 412  Type = brac	Data = ]	Pos = (41, 76)
CP = 413  Type = token	Data = ENDL	Pos = (44, 76)
CP = 414  Type = sig	Data = ;	Pos = (48, 76)
CP = 415  Type = id	Data = throw-stmt	Pos = (0, 78)
CP = 416  Type = sig	Data = ::=	Pos = (11, 78)
CP = 417  Type = slit	Data = 'throw'	Pos = (15, 78)
CP = 418  Type = brac	Data = [	Pos = (23, 78)
CP = 419  Type = id	Data = expr	Pos = (24, 78)
CP = 420  Type = brac	Data = ]	Pos = (28, 78)
CP = 421  Type = id	Data = endline	Pos = (30, 78)
CP = 422  Type = sig	Data = ;	Pos = (37, 78)
CP = 423  Type = id	Data = class-stmt	Pos = (0, 80)
CP = 424  Type = sig	Data = ::=	Pos = (11, 80)
CP = 425  Type = brac	Data = (	Pos = (15, 80)
CP = 426  Type = slit	Data = 'class'	Pos = (16, 80)
CP = 427  Type = sig	Data = |	Pos = (24, 80)
CP = 428  Type = slit	Data = 'struct'	Pos = (26, 80)
CP = 429  Type = brac	Data = )	Pos = (34, 80)
CP = 430  Type = token	Data = ID	Pos = (36, 80)
CP = 431  Type = brac	Data = [	Pos = (39, 80)
CP = 432  Type = slit	Data = 'extends'	Pos = (40, 80)
CP = 433  Type = id	Data = visit-expr	Pos = (50, 80)
CP = 434  Type = brac	Data = ]	Pos = (60, 80)
CP = 435  Type = token	Data = ENDL	Pos = (62, 80)
CP = 436  Type = id	Data = decl-stmts	Pos = (67, 80)
CP = 437  Type = slit	Data = 'end'	Pos = (78, 80)
CP = 438  Type = token	Data = ENDL	Pos = (84, 80)
CP = 439  Type = sig	Data = ;	Pos = (88, 80)
CP = 440  Type = id	Data = control-stmt	Pos = (0, 82)
CP = 441  Type = sig	Data = ::=	Pos = (13, 82)
CP = 442  Type = brac	Data = (	Pos = (17, 82)
CP = 443  Type = slit	Data = 'break'	Pos = (18, 82)
CP = 444  Type = sig	Data = |	Pos = (26, 82)
CP = 445  Type = slit	Data = 'continue'	Pos = (28, 82)
CP = 446  Type = brac	Data = )	Pos = (38, 82)
CP = 447  Type = id	Data = endline	Pos = (40, 82)
CP = 448  Type = sig	Data = ;	Pos = (47, 82)
CP = 449  Type = id	Data = expr-stmt	Pos = (0, 84)
CP = 450  Type = sig	Data = ::=	Pos = (10, 84)
CP = 451  Type = id	Data = expr	Pos = (14, 84)
CP = 452  Type = id	Data = endline	Pos = (19, 84)
CP = 453  Type = sig	Data = ;	Pos = (26, 84)
CP = 454  Type = id	Data = end-stmt	Pos = (0, 86)
CP = 455  Type = sig	Data = ::=	Pos = (9, 86)
CP = 456  Type = slit	Data = 'end'	Pos = (13, 86)
CP = 457  Type = token	Data = ENDL	Pos = (19, 86)
CP = 458  Type = sig	Data = ;	Pos = (23, 86)
CP = 459  Type = id	Data = expr	Pos = (0, 88)
CP = 460  Type = sig	Data = ::=	Pos = (5, 88)
CP = 461  Type = id	Data = single-expr	Pos = (9, 88)
CP = 462  Type = brac	Data = [	Pos = (21, 88)
CP = 463  Type = slit	Data = ','	Pos = (22, 88)
CP = 464  Type = id	Data = expr	Pos = (26, 88)
CP = 465  Type = brac	Data = ]	Pos = (30, 88)
CP = 466  Type = sig	Data = ;	Pos = (31, 88)
CP = 467  Type = id	Data = single-expr	Pos = (0, 90)
CP = 468  Type = sig	Data = ::=	Pos = (12, 90)
CP = 469  Type = id	Data = lambda-expr	Pos = (16, 90)
CP = 470  Type = sig	Data = |	Pos = (28, 90)
CP = 471  Type = id	Data = basic-expr	Pos = (30, 90)
CP = 472  Type = sig	Data = ;	Pos = (40, 90)
CP = 473  Type = id	Data = basic-expr	Pos = (0, 92)
CP = 474  Type = sig	Data = ::=	Pos = (11, 92)
CP = 475  Type = id	Data = var-bind	Pos = (15, 92)
CP = 476  Type = slit	Data = '='	Pos = (24, 92)
CP = 477  Type = id	Data = cond-expr	Pos = (28, 92)
CP = 478  Type = sig	Data = |	Pos = (38, 92)
CP = 479  Type = id	Data = cond-expr	Pos = (40, 92)
CP = 480  Type = brac	Data = [	Pos = (50, 92)
CP = 481  Type = id	Data = asi-op	Pos = (51, 92)
CP = 482  Type = id	Data = single-expr	Pos = (58, 92)
CP = 483  Type = brac	Data = ]	Pos = (69, 92)
CP = 484  Type = sig	Data = ;	Pos = (70, 92)
CP = 485  Type = id	Data = asi-op	Pos = (0, 94)
CP = 486  Type = sig	Data = ::=	Pos = (7, 94)
CP = 487  Type = slit	Data = '='	Pos = (11, 94)
CP = 488  Type = sig	Data = |	Pos = (15, 94)
CP = 489  Type = slit	Data = ':='	Pos = (17, 94)
CP = 490  Type = sig	Data = |	Pos = (22, 94)
CP = 491  Type = slit	Data = '+='	Pos = (24, 94)
CP = 492  Type = sig	Data = |	Pos = (29, 94)
CP = 493  Type = slit	Data = '-='	Pos = (31, 94)
CP = 494  Type = sig	Data = |	Pos = (36, 94)
CP = 495  Type = slit	Data = '*='	Pos = (38, 94)
CP = 496  Type = sig	Data = |	Pos = (43, 94)
CP = 497  Type = slit	Data = '/='	Pos = (45, 94)
CP = 498  Type = sig	Data = |	Pos = (50, 94)
CP = 499  Type = slit	Data = '%='	Pos = (52, 94)
CP = 500  Type = sig	Data = |	Pos = (57, 94)
CP = 501  Type = slit	Data = '^='	Pos = (59, 94)
CP = 502  Type = sig	Data = ;	Pos = (64, 94)
CP = 503  Type = id	Data = lambda-expr	Pos = (0, 96)
CP = 504  Type = sig	Data = ::=	Pos = (12, 96)
CP = 505  Type = slit	Data = '['	Pos = (16, 96)
CP = 506  Type = brac	Data = [	Pos = (20, 96)
CP = 507  Type = id	Data = capture-list	Pos = (21, 96)
CP = 508  Type = brac	Data = ]	Pos = (33, 96)
CP = 509  Type = slit	Data = ']'	Pos = (35, 96)
CP = 510  Type = slit	Data = '('	Pos = (39, 96)
CP = 511  Type = brac	Data = [	Pos = (43, 96)
CP = 512  Type = id	Data = argument-list	Pos = (44, 96)
CP = 513  Type = brac	Data = ]	Pos = (57, 96)
CP = 514  Type = slit	Data = ')'	Pos = (59, 96)
CP = 515  Type = id	Data = lambda-body	Pos = (63, 96)
CP = 516  Type = sig	Data = ;	Pos = (74, 96)
CP = 517  Type = id	Data = capture-list	Pos = (0, 98)
CP = 518  Type = sig	Data = ::=	Pos = (13, 98)
CP = 519  Type = brac	Data = [	Pos = (17, 98)
CP = 520  Type = slit	Data = '='	Pos = (18, 98)
CP = 521  Type = brac	Data = ]	Pos = (21, 98)
CP = 522  Type = token	Data = ID	Pos = (23, 98)
CP = 523  Type = brac	Data = {	Pos = (26, 98)
CP = 524  Type = slit	Data = ','	Pos = (27, 98)
CP = 525  Type = id	Data = capture-list	Pos = (31, 98)
CP = 526  Type = brac	Data = }	Pos = (43, 98)
CP = 527  Type = sig	Data = ;	Pos = (45, 98)
CP = 528  Type = id	Data = argument-list	Pos = (0, 100)
CP = 529  Type = sig	Data = ::=	Pos = (14, 100)
CP = 530  Type = slit	Data = '...'	Pos = (18, 100)
CP = 531  Type = token	Data = ID	Pos = (24, 100)
CP = 532  Type = sig	Data = |	Pos = (27, 100)
CP = 533  Type = brac	Data = [	Pos = (29, 100)
CP = 534  Type = slit	Data = '='	Pos = (30, 100)
CP = 535  Type = brac	Data = ]	Pos = (33, 100)
CP = 536  Type = token	Data = ID	Pos = (35, 100)
CP = 537  Type = brac	Data = [	Pos = (38, 100)
CP = 538  Type = slit	Data = ':'	Pos = (39, 100)
CP = 539  Type = id	Data = visit-expr	Pos = (43, 100)
CP = 540  Type = brac	Data = ]	Pos = (53, 100)
CP = 541  Type = brac	Data = {	Pos = (55, 100)
CP = 542  Type = slit	Data = ','	Pos = (56, 100)
CP = 543  Type = id	Data = argument-list	Pos = (60, 100)
CP = 544  Type = brac	Data = }	Pos = (73, 100)
CP = 545  Type = sig	Data = ;	Pos = (74, 100)
CP = 546  Type = id	Data = lambda-body	Pos = (0, 102)
CP = 547  Type = sig	Data = ::=	Pos = (12, 102)
CP = 548  Type = slit	Data = '{'	Pos = (16, 102)
CP = 549  Type = brac	Data = {	Pos = (20, 102)
CP = 550  Type = id	Data = statement	Pos = (21, 102)
CP = 551  Type = brac	Data = {	Pos = (31, 102)
CP = 552  Type = token	Data = ENDL	Pos = (32, 102)
CP = 553  Type = brac	Data = }	Pos = (36, 102)
CP = 554  Type = brac	Data = }	Pos = (37, 102)
CP = 555  Type = slit	Data = '}'	Pos = (39, 102)
CP = 556  Type = sig	Data = |	Pos = (43, 102)
CP = 557  Type = slit	Data = '->'	Pos = (45, 102)
CP = 558  Type = id	Data = cond-expr	Pos = (50, 102)
CP = 559  Type = sig	Data = ;	Pos = (59, 102)
CP = 560  Type = id	Data = cond-expr	Pos = (0, 104)
CP = 561  Type = sig	Data = ::=	Pos = (10, 104)
CP = 562  Type = id	Data = logic-or-expr	Pos = (14, 104)
CP = 563  Type = brac	Data = [	Pos = (28, 104)
CP = 564  Type = id	Data = cond-postfix	Pos = (29, 104)
CP = 565  Type = brac	Data = ]	Pos = (41, 104)
CP = 566  Type = sig	Data = ;	Pos = (42, 104)
CP = 567  Type = id	Data = cond-postfix	Pos = (0, 106)
CP = 568  Type = sig	Data = ::=	Pos = (13, 106)
CP = 569  Type = slit	Data = '?'	Pos = (17, 106)
CP = 570  Type = id	Data = logic-or-expr	Pos = (21, 106)
CP = 571  Type = slit	Data = ':'	Pos = (35, 106)
CP = 572  Type = id	Data = cond-expr	Pos = (39, 106)
CP = 573  Type = sig	Data = |	Pos = (49, 106)
CP = 574  Type = slit	Data = ':'	Pos = (51, 106)
CP = 575  Type = id	Data = logic-or-expr	Pos = (55, 106)
CP = 576  Type = sig	Data = ;	Pos = (68, 106)
CP = 577  Type = id	Data = logic-or-expr	Pos = (0, 108)
CP = 578  Type = sig	Data = ::=	Pos = (14, 108)
CP = 579  Type = id	Data = logic-and-expr	Pos = (18, 108)
CP = 580  Type = brac	Data = [	Pos = (33, 108)
CP = 581  Type = brac	Data = (	Pos = (34, 108)
CP = 582  Type = slit	Data = '||'	Pos = (35, 108)
CP = 583  Type = sig	Data = |	Pos = (40, 108)
CP = 584  Type = slit	Data = 'or'	Pos = (42, 108)
CP = 585  Type = brac	Data = )	Pos = (47, 108)
CP = 586  Type = id	Data = logic-or-expr	Pos = (49, 108)
CP = 587  Type = brac	Data = ]	Pos = (62, 108)
CP = 588  Type = sig	Data = ;	Pos = (63, 108)
CP = 589  Type = id	Data = logic-and-expr	Pos = (0, 110)
CP = 590  Type = sig	Data = ::=	Pos = (15, 110)
CP = 591  Type = id	Data = equal-expr	Pos = (19, 110)
CP = 592  Type = brac	Data = [	Pos = (30, 110)
CP = 593  Type = brac	Data = (	Pos = (31, 110)
CP = 594  Type = slit	Data = '&&'	Pos = (32, 110)
CP = 595  Type = sig	Data = |	Pos = (37, 110)
CP = 596  Type = slit	Data = 'and'	Pos = (39, 110)
CP = 597  Type = brac	Data = )	Pos = (44, 110)
CP = 598  Type = id	Data = logic-and-expr	Pos = (46, 110)
CP = 599  Type = brac	Data = ]	Pos = (60, 110)
CP = 600  Type = sig	Data = ;	Pos = (61, 110)
CP = 601  Type = id	Data = equal-expr	Pos = (0, 112)
CP = 602  Type = sig	Data = ::=	Pos = (11, 112)
CP = 603  Type = id	Data = relat-expr	Pos = (15, 112)
CP = 604  Type = brac	Data = [	Pos = (26, 112)
CP = 605  Type = brac	Data = (	Pos = (27, 112)
CP = 606  Type = slit	Data = '=='	Pos = (28, 112)
CP = 607  Type = sig	Data = |	Pos = (33, 112)
CP = 608  Type = slit	Data = '!='	Pos = (35, 112)
CP = 609  Type = sig	Data = |	Pos = (40, 112)
CP = 610  Type = slit	Data = 'is'	Pos = (42, 112)
CP = 611  Type = sig	Data = |	Pos = (47, 112)
CP = 612  Type = slit	Data = 'not'	Pos = (49, 112)
CP = 613  Type = brac	Data = )	Pos = (54, 112)
CP = 614  Type = id	Data = equal-expr	Pos = (56, 112)
CP = 615  Type = brac	Data = ]	Pos = (66, 112)
CP = 616  Type = sig	Data = ;	Pos = (67, 112)
CP = 617  Type = id	Data = relat-expr	Pos = (0, 114)
CP = 618  Type = sig	Data = ::=	Pos = (11, 114)
CP = 619  Type = id	Data = add-expr	Pos = (15, 114)
CP = 620  Type = brac	Data = [	Pos = (24, 114)
CP = 621  Type = brac	Data = (	Pos = (25, 114)
CP = 622  Type = slit	Data = '>'	Pos = (26, 114)
CP = 623  Type = sig	Data = |	Pos = (30, 114)
CP = 624  Type = slit	Data = '<'	Pos = (32, 114)
CP = 625  Type = sig	Data = |	Pos = (36, 114)
CP = 626  Type = slit	Data = '>='	Pos = (38, 114)
CP = 627  Type = sig	Data = |	Pos = (43, 114)
CP = 628  Type = slit	Data = '<='	Pos = (45, 114)
CP = 629  Type = brac	Data = )	Pos = (49, 114)
CP = 630  Type = id	Data = relat-expr	Pos = (51, 114)
CP = 631  Type = brac	Data = ]	Pos = (61, 114)
CP = 632  Type = sig	Data = ;	Pos = (62, 114)
CP = 633  Type = id	Data = add-expr	Pos = (0, 116)
CP = 634  Type = sig	Data = ::=	Pos = (9, 116)
CP = 635  Type = id	Data = mul-expr	Pos = (13, 116)
CP = 636  Type = brac	Data = [	Pos = (22, 116)
CP = 637  Type = brac	Data = (	Pos = (23, 116)
CP = 638  Type = slit	Data = '+'	Pos = (24, 116)
CP = 639  Type = sig	Data = |	Pos = (28, 116)
CP = 640  Type = slit	Data = '-'	Pos = (30, 116)
CP = 641  Type = brac	Data = )	Pos = (33, 116)
CP = 642  Type = id	Data = add-expr	Pos = (35, 116)
CP = 643  Type = brac	Data = ]	Pos = (43, 116)
CP = 644  Type = sig	Data = ;	Pos = (44, 116)
CP = 645  Type = id	Data = mul-expr	Pos = (0, 118)
CP = 646  Type = sig	Data = ::=	Pos = (9, 118)
CP = 647  Type = id	Data = unary-expr	Pos = (13, 118)
CP = 648  Type = brac	Data = [	Pos = (24, 118)
CP = 649  Type = brac	Data = (	Pos = (25, 118)
CP = 650  Type = slit	Data = '*'	Pos = (26, 118)
CP = 651  Type = sig	Data = |	Pos = (30, 118)
CP = 652  Type = slit	Data = '/'	Pos = (32, 118)
CP = 653  Type = sig	Data = |	Pos = (36, 118)
CP = 654  Type = slit	Data = '%'	Pos = (38, 118)
CP = 655  Type = sig	Data = |	Pos = (42, 118)
CP = 656  Type = slit	Data = '^'	Pos = (44, 118)
CP = 657  Type = brac	Data = )	Pos = (47, 118)
CP = 658  Type = id	Data = mul-expr	Pos = (49, 118)
CP = 659  Type = brac	Data = ]	Pos = (57, 118)
CP = 660  Type = sig	Data = ;	Pos = (58, 118)
CP = 661  Type = id	Data = unary-expr	Pos = (0, 120)
CP = 662  Type = sig	Data = ::=	Pos = (11, 120)
CP = 663  Type = id	Data = unary-op	Pos = (15, 120)
CP = 664  Type = id	Data = unary-expr	Pos = (24, 120)
CP = 665  Type = sig	Data = |	Pos = (35, 120)
CP = 666  Type = brac	Data = (	Pos = (37, 120)
CP = 667  Type = slit	Data = 'new'	Pos = (38, 120)
CP = 668  Type = sig	Data = |	Pos = (44, 120)
CP = 669  Type = slit	Data = 'gcnew'	Pos = (46, 120)
CP = 670  Type = brac	Data = )	Pos = (53, 120)
CP = 671  Type = id	Data = unary-expr	Pos = (55, 120)
CP = 672  Type = brac	Data = [	Pos = (66, 120)
CP = 673  Type = id	Data = array	Pos = (67, 120)
CP = 674  Type = brac	Data = ]	Pos = (72, 120)
CP = 675  Type = sig	Data = |	Pos = (74, 120)
CP = 676  Type = id	Data = prim-expr	Pos = (76, 120)
CP = 677  Type = brac	Data = [	Pos = (86, 120)
CP = 678  Type = id	Data = postfix-expr	Pos = (87, 120)
CP = 679  Type = brac	Data = ]	Pos = (99, 120)
CP = 680  Type = sig	Data = ;	Pos = (100, 120)
CP = 681  Type = id	Data = unary-op	Pos = (0, 122)
CP = 682  Type = sig	Data = ::=	Pos = (9, 122)
CP = 683  Type = slit	Data = 'typeid'	Pos = (13, 122)
CP = 684  Type = sig	Data = |	Pos = (22, 122)
CP = 685  Type = slit	Data = '++'	Pos = (24, 122)
CP = 686  Type = sig	Data = |	Pos = (29, 122)
CP = 687  Type = slit	Data = '--'	Pos = (31, 122)
CP = 688  Type = sig	Data = |	Pos = (36, 122)
CP = 689  Type = slit	Data = '*'	Pos = (38, 122)
CP = 690  Type = sig	Data = |	Pos = (42, 122)
CP = 691  Type = slit	Data = '&'	Pos = (44, 122)
CP = 692  Type = sig	Data = |	Pos = (48, 122)
CP = 693  Type = slit	Data = '-'	Pos = (50, 122)
CP = 694  Type = sig	Data = |	Pos = (54, 122)
CP = 695  Type = slit	Data = '!'	Pos = (56, 122)
CP = 696  Type = sig	Data = |	Pos = (60, 122)
CP = 697  Type = slit	Data = 'not'	Pos = (62, 122)
CP = 698  Type = sig	Data = ;	Pos = (67, 122)
CP = 699  Type = id	Data = postfix-expr	Pos = (0, 124)
CP = 700  Type = sig	Data = ::=	Pos = (13, 124)
CP = 701  Type = brac	Data = (	Pos = (17, 124)
CP = 702  Type = slit	Data = '++'	Pos = (18, 124)
CP = 703  Type = sig	Data = |	Pos = (23, 124)
CP = 704  Type = slit	Data = '--'	Pos = (25, 124)
CP = 705  Type = sig	Data = |	Pos = (30, 124)
CP = 706  Type = slit	Data = '...'	Pos = (32, 124)
CP = 707  Type = brac	Data = )	Pos = (37, 124)
CP = 708  Type = brac	Data = [	Pos = (40, 124)
CP = 709  Type = id	Data = postfix-expr	Pos = (41, 124)
CP = 710  Type = brac	Data = ]	Pos = (53, 124)
CP = 711  Type = sig	Data = ;	Pos = (54, 124)
CP = 712  Type = id	Data = prim-expr	Pos = (0, 126)
CP = 713  Type = sig	Data = ::=	Pos = (10, 126)
CP = 714  Type = id	Data = visit-expr	Pos = (14, 126)
CP = 715  Type = sig	Data = |	Pos = (25, 126)
CP = 716  Type = id	Data = constant	Pos = (27, 126)
CP = 717  Type = sig	Data = ;	Pos = (36, 126)
CP = 718  Type = id	Data = visit-expr	Pos = (0, 128)
CP = 719  Type = sig	Data = ::=	Pos = (11, 128)
CP = 720  Type = id	Data = object	Pos = (15, 128)
CP = 721  Type = brac	Data = [	Pos = (22, 128)
CP = 722  Type = brac	Data = (	Pos = (24, 128)
CP = 723  Type = slit	Data = '->'	Pos = (25, 128)
CP = 724  Type = sig	Data = |	Pos = (30, 128)
CP = 725  Type = slit	Data = '.'	Pos = (32, 128)
CP = 726  Type = brac	Data = )	Pos = (35, 128)
CP = 727  Type = id	Data = visit-expr	Pos = (37, 128)
CP = 728  Type = brac	Data = ]	Pos = (48, 128)
CP = 729  Type = sig	Data = ;	Pos = (49, 128)
CP = 730  Type = id	Data = object	Pos = (0, 130)
CP = 731  Type = sig	Data = ::=	Pos = (7, 130)
CP = 732  Type = id	Data = array	Pos = (11, 130)
CP = 733  Type = brac	Data = [	Pos = (17, 130)
CP = 734  Type = id	Data = index	Pos = (18, 130)
CP = 735  Type = brac	Data = ]	Pos = (23, 130)
CP = 736  Type = sig	Data = |	Pos = (25, 130)
CP = 737  Type = token	Data = STR	Pos = (27, 130)
CP = 738  Type = brac	Data = [	Pos = (31, 130)
CP = 739  Type = id	Data = index	Pos = (32, 130)
CP = 740  Type = brac	Data = ]	Pos = (37, 130)
CP = 741  Type = sig	Data = |	Pos = (39, 130)
CP = 742  Type = slit	Data = 'local'	Pos = (41, 130)
CP = 743  Type = sig	Data = |	Pos = (49, 130)
CP = 744  Type = slit	Data = 'global'	Pos = (51, 130)
CP = 745  Type = sig	Data = |	Pos = (60, 130)
CP = 746  Type = id	Data = element	Pos = (62, 130)
CP = 747  Type = sig	Data = |	Pos = (70, 130)
CP = 748  Type = token	Data = CHAR	Pos = (72, 130)
CP = 749  Type = sig	Data = ;	Pos = (76, 130)
CP = 750  Type = id	Data = element	Pos = (0, 132)
CP = 751  Type = sig	Data = ::=	Pos = (8, 132)
CP = 752  Type = brac	Data = (	Pos = (12, 132)
CP = 753  Type = token	Data = ID	Pos = (13, 132)
CP = 754  Type = sig	Data = |	Pos = (16, 132)
CP = 755  Type = slit	Data = '('	Pos = (18, 132)
CP = 756  Type = id	Data = single-expr	Pos = (22, 132)
CP = 757  Type = slit	Data = ')'	Pos = (34, 132)
CP = 758  Type = brac	Data = )	Pos = (37, 132)
CP = 759  Type = brac	Data = {	Pos = (39, 132)
CP = 760  Type = id	Data = fcall	Pos = (40, 132)
CP = 761  Type = sig	Data = |	Pos = (46, 132)
CP = 762  Type = id	Data = index	Pos = (48, 132)
CP = 763  Type = brac	Data = }	Pos = (53, 132)
CP = 764  Type = sig	Data = ;	Pos = (54, 132)
CP = 765  Type = id	Data = constant	Pos = (0, 134)
CP = 766  Type = sig	Data = ::=	Pos = (9, 134)
CP = 767  Type = token	Data = NUM	Pos = (13, 134)
CP = 768  Type = sig	Data = |	Pos = (17, 134)
CP = 769  Type = slit	Data = 'null'	Pos = (19, 134)
CP = 770  Type = sig	Data = |	Pos = (26, 134)
CP = 771  Type = slit	Data = 'true'	Pos = (28, 134)
CP = 772  Type = sig	Data = |	Pos = (35, 134)
CP = 773  Type = slit	Data = 'false'	Pos = (37, 134)
CP = 774  Type = sig	Data = ;	Pos = (44, 134)
CP = 775  Type = id	Data = array	Pos = (0, 136)
CP = 776  Type = sig	Data = ::=	Pos = (6, 136)
CP = 777  Type = slit	Data = '{'	Pos = (10, 136)
CP = 778  Type = brac	Data = [	Pos = (14, 136)
CP = 779  Type = id	Data = expr	Pos = (15, 136)
CP = 780  Type = brac	Data = ]	Pos = (19, 136)
CP = 781  Type = slit	Data = '}'	Pos = (21, 136)
CP = 782  Type = sig	Data = ;	Pos = (24, 136)
CP = 783  Type = id	Data = fcall	Pos = (0, 138)
CP = 784  Type = sig	Data = ::=	Pos = (6, 138)
CP = 785  Type = slit	Data = '('	Pos = (10, 138)
CP = 786  Type = brac	Data = [	Pos = (14, 138)
CP = 787  Type = id	Data = expr	Pos = (15, 138)
CP = 788  Type = brac	Data = ]	Pos = (19, 138)
CP = 789  Type = slit	Data = ')'	Pos = (21, 138)
CP = 790  Type = sig	Data = ;	Pos = (24, 138)
CP = 791  Type = id	Data = index	Pos = (0, 140)
CP = 792  Type = sig	Data = ::=	Pos = (6, 140)
CP = 793  Type = slit	Data = '['	Pos = (10, 140)
CP = 794  Type = id	Data = basic-expr	Pos = (14, 140)
CP = 795  Type = slit	Data = ']'	Pos = (25, 140)
CP = 796  Type = sig	Data = ;	Pos = (28, 140)
###########################
Begin Syntactic Analysis...
###########################
SS = 3	CP = 0	Deduce statement
SS = 4	CP = 0	  Deduce non_terminal_symbol
SS = 4	CP = 0	    Match  id
SS = 4	CP = 0	    Accept id
SS = 4	CP = 1	  Accept non_terminal_symbol
SS = 4	CP = 1	  Deduce assign_op
SS = 5	CP = 1	    Match  ::=
SS = 5	CP = 1	    Accept ::=
SS = 4	CP = 2	  Accept assign_op
SS = 4	CP = 2	  Deduce declaration
SS = 5	CP = 2	    Deduce term
SS = 6	CP = 2	      Deduce part
SS = 6	CP = 2	        Predict Failed in CONDITION
SS = 6	CP = 2	        Predict Failed in CONDITION
SS = 6	CP = 2	        Predict Failed in CONDITION
SS = 8	CP = 2	        Deduce simple_part
SS = 10	CP = 2	          Deduce right_non_terminal_symbol
SS = 11	CP = 2	            Deduce non_terminal_symbol
SS = 11	CP = 2	              Match  id
SS = 11	CP = 2	              Accept id
SS = 11	CP = 3	            Accept non_terminal_symbol
SS = 10	CP = 3	          Accept right_non_terminal_symbol
SS = 8	CP = 3	        Accept simple_part
SS = 6	CP = 3	      Accept part
SS = 7	CP = 3	      Match  ,
SS = 7	CP = 3	      Reject ,
SS = 6	CP = 3	      Predict Failed: part
SS = 5	CP = 3	    Accept term
SS = 5	CP = 3	    Match  |
SS = 5	CP = 3	    Reject |
SS = 4	CP = 3	  Accept declaration
SS = 4	CP = 3	  Deduce end_op
SS = 5	CP = 3	    Match  ;
SS = 5	CP = 3	    Accept ;
SS = 4	CP = 4	  Accept end_op
SS = 3	CP = 4	Accept statement
SS = 3	CP = 4	Deduce statement
SS = 4	CP = 4	  Deduce non_terminal_symbol
SS = 4	CP = 4	    Match  id
SS = 4	CP = 4	    Accept id
SS = 4	CP = 5	  Accept non_terminal_symbol
SS = 4	CP = 5	  Deduce assign_op
SS = 5	CP = 5	    Match  ::=
SS = 5	CP = 5	    Accept ::=
SS = 4	CP = 6	  Accept assign_op
SS = 4	CP = 6	  Deduce declaration
SS = 5	CP = 6	    Deduce term
SS = 6	CP = 6	      Deduce part
SS = 8	CP = 6	        Deduce repeat_part
SS = 8	CP = 6	          Match  {
SS = 8	CP = 6	          Accept {
SS = 9	CP = 7	          Deduce declaration
SS = 10	CP = 7	            Deduce term
SS = 11	CP = 7	              Deduce part
SS = 11	CP = 7	                Predict Failed in CONDITION
SS = 11	CP = 7	                Predict Failed in CONDITION
SS = 11	CP = 7	                Predict Failed in CONDITION
SS = 13	CP = 7	                Deduce simple_part
SS = 13	CP = 7	                  Predict Failed in CONDITION
SS = 15	CP = 7	                  Deduce terminal_symbol
SS = 15	CP = 7	                    Predict Failed in CONDITION
SS = 15	CP = 7	                    Predict Failed in CONDITION
SS = 16	CP = 7	                    Match  token
SS = 16	CP = 7	                    Accept token
SS = 15	CP = 8	                  Accept terminal_symbol
SS = 13	CP = 8	                Accept simple_part
SS = 11	CP = 8	              Accept part
SS = 12	CP = 8	              Match  ,
SS = 12	CP = 8	              Reject ,
SS = 11	CP = 8	              Predict Failed: part
SS = 10	CP = 8	            Accept term
SS = 10	CP = 8	            Match  |
SS = 10	CP = 8	            Reject |
SS = 9	CP = 8	          Accept declaration
SS = 8	CP = 8	          Match  }
SS = 8	CP = 8	          Accept }
SS = 8	CP = 9	        Accept repeat_part
SS = 6	CP = 9	      Accept part
SS = 7	CP = 9	      Match  ,
SS = 7	CP = 9	      Reject ,
SS = 6	CP = 9	      Predict Failed: part
SS = 5	CP = 9	    Accept term
SS = 5	CP = 9	    Match  |
SS = 5	CP = 9	    Reject |
SS = 4	CP = 9	  Accept declaration
SS = 4	CP = 9	  Deduce end_op
SS = 5	CP = 9	    Match  ;
SS = 5	CP = 9	    Accept ;
SS = 4	CP = 10	  Accept end_op
SS = 3	CP = 10	Accept statement
SS = 3	CP = 10	Deduce statement
SS = 4	CP = 10	  Deduce non_terminal_symbol
SS = 4	CP = 10	    Match  id
SS = 4	CP = 10	    Accept id
SS = 4	CP = 11	  Accept non_terminal_symbol
SS = 4	CP = 11	  Deduce assign_op
SS = 5	CP = 11	    Match  ::=
SS = 5	CP = 11	    Accept ::=
SS = 4	CP = 12	  Accept assign_op
SS = 4	CP = 12	  Deduce declaration
SS = 5	CP = 12	    Deduce term
SS = 6	CP = 12	      Deduce part
SS = 6	CP = 12	        Predict Failed in CONDITION
SS = 6	CP = 12	        Predict Failed in CONDITION
SS = 6	CP = 12	        Predict Failed in CONDITION
SS = 8	CP = 12	        Deduce simple_part
SS = 8	CP = 12	          Predict Failed in CONDITION
SS = 10	CP = 12	          Deduce terminal_symbol
SS = 10	CP = 12	            Predict Failed in CONDITION
SS = 10	CP = 12	            Predict Failed in CONDITION
SS = 11	CP = 12	            Match  token
SS = 11	CP = 12	            Accept token
SS = 10	CP = 13	          Accept terminal_symbol
SS = 8	CP = 13	        Accept simple_part
SS = 6	CP = 13	      Accept part
SS = 7	CP = 13	      Match  ,
SS = 7	CP = 13	      Reject ,
SS = 6	CP = 13	      Predict Failed: part
SS = 5	CP = 13	    Accept term
SS = 5	CP = 13	    Match  |
SS = 5	CP = 13	    Accept |
SS = 6	CP = 14	    Deduce term
SS = 7	CP = 14	      Deduce part
SS = 7	CP = 14	        Predict Failed in CONDITION
SS = 7	CP = 14	        Predict Failed in CONDITION
SS = 7	CP = 14	        Predict Failed in CONDITION
SS = 9	CP = 14	        Deduce simple_part
SS = 9	CP = 14	          Predict Failed in CONDITION
SS = 11	CP = 14	          Deduce terminal_symbol
SS = 12	CP = 14	            Match  slit
SS = 12	CP = 14	            Accept slit
SS = 11	CP = 15	          Accept terminal_symbol
SS = 9	CP = 15	        Accept simple_part
SS = 7	CP = 15	      Accept part
SS = 8	CP = 15	      Match  ,
SS = 8	CP = 15	      Reject ,
SS = 7	CP = 15	      Predict Failed: part
SS = 6	CP = 15	    Accept term
SS = 5	CP = 15	    Match  |
SS = 5	CP = 15	    Reject |
SS = 4	CP = 15	  Accept declaration
SS = 4	CP = 15	  Deduce end_op
SS = 5	CP = 15	    Match  ;
SS = 5	CP = 15	    Accept ;
SS = 4	CP = 16	  Accept end_op
SS = 3	CP = 16	Accept statement
SS = 3	CP = 16	Deduce statement
SS = 4	CP = 16	  Deduce non_terminal_symbol
SS = 4	CP = 16	    Match  id
SS = 4	CP = 16	    Accept id
SS = 4	CP = 17	  Accept non_terminal_symbol
SS = 4	CP = 17	  Deduce assign_op
SS = 5	CP = 17	    Match  ::=
SS = 5	CP = 17	    Accept ::=
SS = 4	CP = 18	  Accept assign_op
SS = 4	CP = 18	  Deduce declaration
SS = 5	CP = 18	    Deduce term
SS = 6	CP = 18	      Deduce part
SS = 8	CP = 18	        Deduce repeat_part
SS = 8	CP = 18	          Match  {
SS = 8	CP = 18	          Accept {
SS = 9	CP = 19	          Deduce declaration
SS = 10	CP = 19	            Deduce term
SS = 11	CP = 19	              Deduce part
SS = 11	CP = 19	                Predict Failed in CONDITION
SS = 11	CP = 19	                Predict Failed in CONDITION
SS = 11	CP = 19	                Predict Failed in CONDITION
SS = 13	CP = 19	                Deduce simple_part
SS = 15	CP = 19	                  Deduce right_non_terminal_symbol
SS = 16	CP = 19	                    Deduce non_terminal_symbol
SS = 16	CP = 19	                      Match  id
SS = 16	CP = 19	                      Accept id
SS = 16	CP = 20	                    Accept non_terminal_symbol
SS = 15	CP = 20	                  Accept right_non_terminal_symbol
SS = 13	CP = 20	                Accept simple_part
SS = 11	CP = 20	              Accept part
SS = 12	CP = 20	              Match  ,
SS = 12	CP = 20	              Reject ,
SS = 12	CP = 20	              Deduce part
SS = 14	CP = 20	                Deduce repeat_part
SS = 14	CP = 20	                  Match  {
SS = 14	CP = 20	                  Accept {
SS = 15	CP = 21	                  Deduce declaration
SS = 16	CP = 21	                    Deduce term
SS = 17	CP = 21	                      Deduce part
SS = 17	CP = 21	                        Predict Failed in CONDITION
SS = 17	CP = 21	                        Predict Failed in CONDITION
SS = 17	CP = 21	                        Predict Failed in CONDITION
SS = 19	CP = 21	                        Deduce simple_part
SS = 19	CP = 21	                          Predict Failed in CONDITION
SS = 21	CP = 21	                          Deduce terminal_symbol
SS = 21	CP = 21	                            Predict Failed in CONDITION
SS = 21	CP = 21	                            Predict Failed in CONDITION
SS = 22	CP = 21	                            Match  token
SS = 22	CP = 21	                            Accept token
SS = 21	CP = 22	                          Accept terminal_symbol
SS = 19	CP = 22	                        Accept simple_part
SS = 17	CP = 22	                      Accept part
SS = 18	CP = 22	                      Match  ,
SS = 18	CP = 22	                      Reject ,
SS = 17	CP = 22	                      Predict Failed: part
SS = 16	CP = 22	                    Accept term
SS = 16	CP = 22	                    Match  |
SS = 16	CP = 22	                    Reject |
SS = 15	CP = 22	                  Accept declaration
SS = 14	CP = 22	                  Match  }
SS = 14	CP = 22	                  Accept }
SS = 14	CP = 23	                Accept repeat_part
SS = 12	CP = 23	              Accept part
SS = 12	CP = 23	              Match  ,
SS = 12	CP = 23	              Reject ,
SS = 11	CP = 23	              Predict Failed: part
SS = 10	CP = 23	            Accept term
SS = 10	CP = 23	            Match  |
SS = 10	CP = 23	            Reject |
SS = 9	CP = 23	          Accept declaration
SS = 8	CP = 23	          Match  }
SS = 8	CP = 23	          Accept }
SS = 8	CP = 24	        Accept repeat_part
SS = 6	CP = 24	      Accept part
SS = 7	CP = 24	      Match  ,
SS = 7	CP = 24	      Reject ,
SS = 6	CP = 24	      Predict Failed: part
SS = 5	CP = 24	    Accept term
SS = 5	CP = 24	    Match  |
SS = 5	CP = 24	    Reject |
SS = 4	CP = 24	  Accept declaration
SS = 4	CP = 24	  Deduce end_op
SS = 5	CP = 24	    Match  ;
SS = 5	CP = 24	    Accept ;
SS = 4	CP = 25	  Accept end_op
SS = 3	CP = 25	Accept statement
SS = 3	CP = 25	Deduce statement
SS = 4	CP = 25	  Deduce non_terminal_symbol
SS = 4	CP = 25	    Match  id
SS = 4	CP = 25	    Accept id
SS = 4	CP = 26	  Accept non_terminal_symbol
SS = 4	CP = 26	  Deduce assign_op
SS = 5	CP = 26	    Match  ::=
SS = 5	CP = 26	    Accept ::=
SS = 4	CP = 27	  Accept assign_op
SS = 4	CP = 27	  Deduce declaration
SS = 5	CP = 27	    Deduce term
SS = 6	CP = 27	      Deduce part
SS = 8	CP = 27	        Deduce repeat_part
SS = 8	CP = 27	          Match  {
SS = 8	CP = 27	          Accept {
SS = 9	CP = 28	          Deduce declaration
SS = 10	CP = 28	            Deduce term
SS = 11	CP = 28	              Deduce part
SS = 11	CP = 28	                Predict Failed in CONDITION
SS = 11	CP = 28	                Predict Failed in CONDITION
SS = 11	CP = 28	                Predict Failed in CONDITION
SS = 13	CP = 28	                Deduce simple_part
SS = 15	CP = 28	                  Deduce right_non_terminal_symbol
SS = 16	CP = 28	                    Deduce non_terminal_symbol
SS = 16	CP = 28	                      Match  id
SS = 16	CP = 28	                      Accept id
SS = 16	CP = 29	                    Accept non_terminal_symbol
SS = 15	CP = 29	                  Accept right_non_terminal_symbol
SS = 13	CP = 29	                Accept simple_part
SS = 11	CP = 29	              Accept part
SS = 12	CP = 29	              Match  ,
SS = 12	CP = 29	              Reject ,
SS = 12	CP = 29	              Deduce part
SS = 14	CP = 29	                Deduce repeat_part
SS = 14	CP = 29	                  Match  {
SS = 14	CP = 29	                  Accept {
SS = 15	CP = 30	                  Deduce declaration
SS = 16	CP = 30	                    Deduce term
SS = 17	CP = 30	                      Deduce part
SS = 17	CP = 30	                        Predict Failed in CONDITION
SS = 17	CP = 30	                        Predict Failed in CONDITION
SS = 17	CP = 30	                        Predict Failed in CONDITION
SS = 19	CP = 30	                        Deduce simple_part
SS = 19	CP = 30	                          Predict Failed in CONDITION
SS = 21	CP = 30	                          Deduce terminal_symbol
SS = 21	CP = 30	                            Predict Failed in CONDITION
SS = 21	CP = 30	                            Predict Failed in CONDITION
SS = 22	CP = 30	                            Match  token
SS = 22	CP = 30	                            Accept token
SS = 21	CP = 31	                          Accept terminal_symbol
SS = 19	CP = 31	                        Accept simple_part
SS = 17	CP = 31	                      Accept part
SS = 18	CP = 31	                      Match  ,
SS = 18	CP = 31	                      Reject ,
SS = 17	CP = 31	                      Predict Failed: part
SS = 16	CP = 31	                    Accept term
SS = 16	CP = 31	                    Match  |
SS = 16	CP = 31	                    Reject |
SS = 15	CP = 31	                  Accept declaration
SS = 14	CP = 31	                  Match  }
SS = 14	CP = 31	                  Accept }
SS = 14	CP = 32	                Accept repeat_part
SS = 12	CP = 32	              Accept part
SS = 12	CP = 32	              Match  ,
SS = 12	CP = 32	              Reject ,
SS = 11	CP = 32	              Predict Failed: part
SS = 10	CP = 32	            Accept term
SS = 10	CP = 32	            Match  |
SS = 10	CP = 32	            Reject |
SS = 9	CP = 32	          Accept declaration
SS = 8	CP = 32	          Match  }
SS = 8	CP = 32	          Accept }
SS = 8	CP = 33	        Accept repeat_part
SS = 6	CP = 33	      Accept part
SS = 7	CP = 33	      Match  ,
SS = 7	CP = 33	      Reject ,
SS = 6	CP = 33	      Predict Failed: part
SS = 5	CP = 33	    Accept term
SS = 5	CP = 33	    Match  |
SS = 5	CP = 33	    Reject |
SS = 4	CP = 33	  Accept declaration
SS = 4	CP = 33	  Deduce end_op
SS = 5	CP = 33	    Match  ;
SS = 5	CP = 33	    Accept ;
SS = 4	CP = 34	  Accept end_op
SS = 3	CP = 34	Accept statement
SS = 3	CP = 34	Deduce statement
SS = 4	CP = 34	  Deduce non_terminal_symbol
SS = 4	CP = 34	    Match  id
SS = 4	CP = 34	    Accept id
SS = 4	CP = 35	  Accept non_terminal_symbol
SS = 4	CP = 35	  Deduce assign_op
SS = 5	CP = 35	    Match  ::=
SS = 5	CP = 35	    Accept ::=
SS = 4	CP = 36	  Accept assign_op
SS = 4	CP = 36	  Deduce declaration
SS = 5	CP = 36	    Deduce term
SS = 6	CP = 36	      Deduce part
SS = 6	CP = 36	        Predict Failed in CONDITION
SS = 6	CP = 36	        Predict Failed in CONDITION
SS = 6	CP = 36	        Predict Failed in CONDITION
SS = 8	CP = 36	        Deduce simple_part
SS = 10	CP = 36	          Deduce right_non_terminal_symbol
SS = 11	CP = 36	            Deduce non_terminal_symbol
SS = 11	CP = 36	              Match  id
SS = 11	CP = 36	              Accept id
SS = 11	CP = 37	            Accept non_terminal_symbol
SS = 10	CP = 37	          Accept right_non_terminal_symbol
SS = 8	CP = 37	        Accept simple_part
SS = 6	CP = 37	      Accept part
SS = 7	CP = 37	      Match  ,
SS = 7	CP = 37	      Reject ,
SS = 6	CP = 37	      Predict Failed: part
SS = 5	CP = 37	    Accept term
SS = 5	CP = 37	    Match  |
SS = 5	CP = 37	    Accept |
SS = 6	CP = 38	    Deduce term
SS = 7	CP = 38	      Deduce part
SS = 7	CP = 38	        Predict Failed in CONDITION
SS = 7	CP = 38	        Predict Failed in CONDITION
SS = 7	CP = 38	        Predict Failed in CONDITION
SS = 9	CP = 38	        Deduce simple_part
SS = 11	CP = 38	          Deduce right_non_terminal_symbol
SS = 12	CP = 38	            Deduce non_terminal_symbol
SS = 12	CP = 38	              Match  id
SS = 12	CP = 38	              Accept id
SS = 12	CP = 39	            Accept non_terminal_symbol
SS = 11	CP = 39	          Accept right_non_terminal_symbol
SS = 9	CP = 39	        Accept simple_part
SS = 7	CP = 39	      Accept part
SS = 8	CP = 39	      Match  ,
SS = 8	CP = 39	      Reject ,
SS = 7	CP = 39	      Predict Failed: part
SS = 6	CP = 39	    Accept term
SS = 5	CP = 39	    Match  |
SS = 5	CP = 39	    Accept |
SS = 6	CP = 40	    Deduce term
SS = 7	CP = 40	      Deduce part
SS = 7	CP = 40	        Predict Failed in CONDITION
SS = 7	CP = 40	        Predict Failed in CONDITION
SS = 7	CP = 40	        Predict Failed in CONDITION
SS = 9	CP = 40	        Deduce simple_part
SS = 11	CP = 40	          Deduce right_non_terminal_symbol
SS = 12	CP = 40	            Deduce non_terminal_symbol
SS = 12	CP = 40	              Match  id
SS = 12	CP = 40	              Accept id
SS = 12	CP = 41	            Accept non_terminal_symbol
SS = 11	CP = 41	          Accept right_non_terminal_symbol
SS = 9	CP = 41	        Accept simple_part
SS = 7	CP = 41	      Accept part
SS = 8	CP = 41	      Match  ,
SS = 8	CP = 41	      Reject ,
SS = 7	CP = 41	      Predict Failed: part
SS = 6	CP = 41	    Accept term
SS = 5	CP = 41	    Match  |
SS = 5	CP = 41	    Accept |
SS = 6	CP = 42	    Deduce term
SS = 7	CP = 42	      Deduce part
SS = 7	CP = 42	        Predict Failed in CONDITION
SS = 7	CP = 42	        Predict Failed in CONDITION
SS = 7	CP = 42	        Predict Failed in CONDITION
SS = 9	CP = 42	        Deduce simple_part
SS = 11	CP = 42	          Deduce right_non_terminal_symbol
SS = 12	CP = 42	            Deduce non_terminal_symbol
SS = 12	CP = 42	              Match  id
SS = 12	CP = 42	              Accept id
SS = 12	CP = 43	            Accept non_terminal_symbol
SS = 11	CP = 43	          Accept right_non_terminal_symbol
SS = 9	CP = 43	        Accept simple_part
SS = 7	CP = 43	      Accept part
SS = 8	CP = 43	      Match  ,
SS = 8	CP = 43	      Reject ,
SS = 7	CP = 43	      Predict Failed: part
SS = 6	CP = 43	    Accept term
SS = 5	CP = 43	    Match  |
SS = 5	CP = 43	    Reject |
SS = 4	CP = 43	  Accept declaration
SS = 4	CP = 43	  Deduce end_op
SS = 5	CP = 43	    Match  ;
SS = 5	CP = 43	    Accept ;
SS = 4	CP = 44	  Accept end_op
SS = 3	CP = 44	Accept statement
SS = 3	CP = 44	Deduce statement
SS = 4	CP = 44	  Deduce non_terminal_symbol
SS = 4	CP = 44	    Match  id
SS = 4	CP = 44	    Accept id
SS = 4	CP = 45	  Accept non_terminal_symbol
SS = 4	CP = 45	  Deduce assign_op
SS = 5	CP = 45	    Match  ::=
SS = 5	CP = 45	    Accept ::=
SS = 4	CP = 46	  Accept assign_op
SS = 4	CP = 46	  Deduce declaration
SS = 5	CP = 46	    Deduce term
SS = 6	CP = 46	      Deduce part
SS = 6	CP = 46	        Predict Failed in CONDITION
SS = 6	CP = 46	        Predict Failed in CONDITION
SS = 6	CP = 46	        Predict Failed in CONDITION
SS = 8	CP = 46	        Deduce simple_part
SS = 10	CP = 46	          Deduce right_non_terminal_symbol
SS = 11	CP = 46	            Deduce non_terminal_symbol
SS = 11	CP = 46	              Match  id
SS = 11	CP = 46	              Accept id
SS = 11	CP = 47	            Accept non_terminal_symbol
SS = 10	CP = 47	          Accept right_non_terminal_symbol
SS = 8	CP = 47	        Accept simple_part
SS = 6	CP = 47	      Accept part
SS = 7	CP = 47	      Match  ,
SS = 7	CP = 47	      Reject ,
SS = 6	CP = 47	      Predict Failed: part
SS = 5	CP = 47	    Accept term
SS = 5	CP = 47	    Match  |
SS = 5	CP = 47	    Accept |
SS = 6	CP = 48	    Deduce term
SS = 7	CP = 48	      Deduce part
SS = 7	CP = 48	        Predict Failed in CONDITION
SS = 7	CP = 48	        Predict Failed in CONDITION
SS = 7	CP = 48	        Predict Failed in CONDITION
SS = 9	CP = 48	        Deduce simple_part
SS = 11	CP = 48	          Deduce right_non_terminal_symbol
SS = 12	CP = 48	            Deduce non_terminal_symbol
SS = 12	CP = 48	              Match  id
SS = 12	CP = 48	              Accept id
SS = 12	CP = 49	            Accept non_terminal_symbol
SS = 11	CP = 49	          Accept right_non_terminal_symbol
SS = 9	CP = 49	        Accept simple_part
SS = 7	CP = 49	      Accept part
SS = 8	CP = 49	      Match  ,
SS = 8	CP = 49	      Reject ,
SS = 7	CP = 49	      Predict Failed: part
SS = 6	CP = 49	    Accept term
SS = 5	CP = 49	    Match  |
SS = 5	CP = 49	    Accept |
SS = 6	CP = 50	    Deduce term
SS = 7	CP = 50	      Deduce part
SS = 7	CP = 50	        Predict Failed in CONDITION
SS = 7	CP = 50	        Predict Failed in CONDITION
SS = 7	CP = 50	        Predict Failed in CONDITION
SS = 9	CP = 50	        Deduce simple_part
SS = 11	CP = 50	          Deduce right_non_terminal_symbol
SS = 12	CP = 50	            Deduce non_terminal_symbol
SS = 12	CP = 50	              Match  id
SS = 12	CP = 50	              Accept id
SS = 12	CP = 51	            Accept non_terminal_symbol
SS = 11	CP = 51	          Accept right_non_terminal_symbol
SS = 9	CP = 51	        Accept simple_part
SS = 7	CP = 51	      Accept part
SS = 8	CP = 51	      Match  ,
SS = 8	CP = 51	      Reject ,
SS = 7	CP = 51	      Predict Failed: part
SS = 6	CP = 51	    Accept term
SS = 5	CP = 51	    Match  |
SS = 5	CP = 51	    Accept |
SS = 6	CP = 52	    Deduce term
SS = 7	CP = 52	      Deduce part
SS = 7	CP = 52	        Predict Failed in CONDITION
SS = 7	CP = 52	        Predict Failed in CONDITION
SS = 7	CP = 52	        Predict Failed in CONDITION
SS = 9	CP = 52	        Deduce simple_part
SS = 11	CP = 52	          Deduce right_non_terminal_symbol
SS = 12	CP = 52	            Deduce non_terminal_symbol
SS = 12	CP = 52	              Match  id
SS = 12	CP = 52	              Accept id
SS = 12	CP = 53	            Accept non_terminal_symbol
SS = 11	CP = 53	          Accept right_non_terminal_symbol
SS = 9	CP = 53	        Accept simple_part
SS = 7	CP = 53	      Accept part
SS = 8	CP = 53	      Match  ,
SS = 8	CP = 53	      Reject ,
SS = 7	CP = 53	      Predict Failed: part
SS = 6	CP = 53	    Accept term
SS = 5	CP = 53	    Match  |
SS = 5	CP = 53	    Accept |
SS = 6	CP = 54	    Deduce term
SS = 7	CP = 54	      Deduce part
SS = 7	CP = 54	        Predict Failed in CONDITION
SS = 7	CP = 54	        Predict Failed in CONDITION
SS = 7	CP = 54	        Predict Failed in CONDITION
SS = 9	CP = 54	        Deduce simple_part
SS = 11	CP = 54	          Deduce right_non_terminal_symbol
SS = 12	CP = 54	            Deduce non_terminal_symbol
SS = 12	CP = 54	              Match  id
SS = 12	CP = 54	              Accept id
SS = 12	CP = 55	            Accept non_terminal_symbol
SS = 11	CP = 55	          Accept right_non_terminal_symbol
SS = 9	CP = 55	        Accept simple_part
SS = 7	CP = 55	      Accept part
SS = 8	CP = 55	      Match  ,
SS = 8	CP = 55	      Reject ,
SS = 7	CP = 55	      Predict Failed: part
SS = 6	CP = 55	    Accept term
SS = 5	CP = 55	    Match  |
SS = 5	CP = 55	    Accept |
SS = 6	CP = 56	    Deduce term
SS = 7	CP = 56	      Deduce part
SS = 7	CP = 56	        Predict Failed in CONDITION
SS = 7	CP = 56	        Predict Failed in CONDITION
SS = 7	CP = 56	        Predict Failed in CONDITION
SS = 9	CP = 56	        Deduce simple_part
SS = 11	CP = 56	          Deduce right_non_terminal_symbol
SS = 12	CP = 56	            Deduce non_terminal_symbol
SS = 12	CP = 56	              Match  id
SS = 12	CP = 56	              Accept id
SS = 12	CP = 57	            Accept non_terminal_symbol
SS = 11	CP = 57	          Accept right_non_terminal_symbol
SS = 9	CP = 57	        Accept simple_part
SS = 7	CP = 57	      Accept part
SS = 8	CP = 57	      Match  ,
SS = 8	CP = 57	      Reject ,
SS = 7	CP = 57	      Predict Failed: part
SS = 6	CP = 57	    Accept term
SS = 5	CP = 57	    Match  |
SS = 5	CP = 57	    Accept |
SS = 6	CP = 58	    Deduce term
SS = 7	CP = 58	      Deduce part
SS = 7	CP = 58	        Predict Failed in CONDITION
SS = 7	CP = 58	        Predict Failed in CONDITION
SS = 7	CP = 58	        Predict Failed in CONDITION
SS = 9	CP = 58	        Deduce simple_part
SS = 11	CP = 58	          Deduce right_non_terminal_symbol
SS = 12	CP = 58	            Deduce non_terminal_symbol
SS = 12	CP = 58	              Match  id
SS = 12	CP = 58	              Accept id
SS = 12	CP = 59	            Accept non_terminal_symbol
SS = 11	CP = 59	          Accept right_non_terminal_symbol
SS = 9	CP = 59	        Accept simple_part
SS = 7	CP = 59	      Accept part
SS = 8	CP = 59	      Match  ,
SS = 8	CP = 59	      Reject ,
SS = 7	CP = 59	      Predict Failed: part
SS = 6	CP = 59	    Accept term
SS = 5	CP = 59	    Match  |
SS = 5	CP = 59	    Accept |
SS = 6	CP = 60	    Deduce term
SS = 7	CP = 60	      Deduce part
SS = 7	CP = 60	        Predict Failed in CONDITION
SS = 7	CP = 60	        Predict Failed in CONDITION
SS = 7	CP = 60	        Predict Failed in CONDITION
SS = 9	CP = 60	        Deduce simple_part
SS = 11	CP = 60	          Deduce right_non_terminal_symbol
SS = 12	CP = 60	            Deduce non_terminal_symbol
SS = 12	CP = 60	              Match  id
SS = 12	CP = 60	              Accept id
SS = 12	CP = 61	            Accept non_terminal_symbol
SS = 11	CP = 61	          Accept right_non_terminal_symbol
SS = 9	CP = 61	        Accept simple_part
SS = 7	CP = 61	      Accept part
SS = 8	CP = 61	      Match  ,
SS = 8	CP = 61	      Reject ,
SS = 7	CP = 61	      Predict Failed: part
SS = 6	CP = 61	    Accept term
SS = 5	CP = 61	    Match  |
SS = 5	CP = 61	    Accept |
SS = 6	CP = 62	    Deduce term
SS = 7	CP = 62	      Deduce part
SS = 7	CP = 62	        Predict Failed in CONDITION
SS = 7	CP = 62	        Predict Failed in CONDITION
SS = 7	CP = 62	        Predict Failed in CONDITION
SS = 9	CP = 62	        Deduce simple_part
SS = 11	CP = 62	          Deduce right_non_terminal_symbol
SS = 12	CP = 62	            Deduce non_terminal_symbol
SS = 12	CP = 62	              Match  id
SS = 12	CP = 62	              Accept id
SS = 12	CP = 63	            Accept non_terminal_symbol
SS = 11	CP = 63	          Accept right_non_terminal_symbol
SS = 9	CP = 63	        Accept simple_part
SS = 7	CP = 63	      Accept part
SS = 8	CP = 63	      Match  ,
SS = 8	CP = 63	      Reject ,
SS = 7	CP = 63	      Predict Failed: part
SS = 6	CP = 63	    Accept term
SS = 5	CP = 63	    Match  |
SS = 5	CP = 63	    Accept |
SS = 6	CP = 64	    Deduce term
SS = 7	CP = 64	      Deduce part
SS = 7	CP = 64	        Predict Failed in CONDITION
SS = 7	CP = 64	        Predict Failed in CONDITION
SS = 7	CP = 64	        Predict Failed in CONDITION
SS = 9	CP = 64	        Deduce simple_part
SS = 11	CP = 64	          Deduce right_non_terminal_symbol
SS = 12	CP = 64	            Deduce non_terminal_symbol
SS = 12	CP = 64	              Match  id
SS = 12	CP = 64	              Accept id
SS = 12	CP = 65	            Accept non_terminal_symbol
SS = 11	CP = 65	          Accept right_non_terminal_symbol
SS = 9	CP = 65	        Accept simple_part
SS = 7	CP = 65	      Accept part
SS = 8	CP = 65	      Match  ,
SS = 8	CP = 65	      Reject ,
SS = 7	CP = 65	      Predict Failed: part
SS = 6	CP = 65	    Accept term
SS = 5	CP = 65	    Match  |
SS = 5	CP = 65	    Accept |
SS = 6	CP = 66	    Deduce term
SS = 7	CP = 66	      Deduce part
SS = 7	CP = 66	        Predict Failed in CONDITION
SS = 7	CP = 66	        Predict Failed in CONDITION
SS = 7	CP = 66	        Predict Failed in CONDITION
SS = 9	CP = 66	        Deduce simple_part
SS = 11	CP = 66	          Deduce right_non_terminal_symbol
SS = 12	CP = 66	            Deduce non_terminal_symbol
SS = 12	CP = 66	              Match  id
SS = 12	CP = 66	              Accept id
SS = 12	CP = 67	            Accept non_terminal_symbol
SS = 11	CP = 67	          Accept right_non_terminal_symbol
SS = 9	CP = 67	        Accept simple_part
SS = 7	CP = 67	      Accept part
SS = 8	CP = 67	      Match  ,
SS = 8	CP = 67	      Reject ,
SS = 7	CP = 67	      Predict Failed: part
SS = 6	CP = 67	    Accept term
SS = 5	CP = 67	    Match  |
SS = 5	CP = 67	    Accept |
SS = 6	CP = 68	    Deduce term
SS = 7	CP = 68	      Deduce part
SS = 7	CP = 68	        Predict Failed in CONDITION
SS = 7	CP = 68	        Predict Failed in CONDITION
SS = 7	CP = 68	        Predict Failed in CONDITION
SS = 9	CP = 68	        Deduce simple_part
SS = 11	CP = 68	          Deduce right_non_terminal_symbol
SS = 12	CP = 68	            Deduce non_terminal_symbol
SS = 12	CP = 68	              Match  id
SS = 12	CP = 68	              Accept id
SS = 12	CP = 69	            Accept non_terminal_symbol
SS = 11	CP = 69	          Accept right_non_terminal_symbol
SS = 9	CP = 69	        Accept simple_part
SS = 7	CP = 69	      Accept part
SS = 8	CP = 69	      Match  ,
SS = 8	CP = 69	      Reject ,
SS = 7	CP = 69	      Predict Failed: part
SS = 6	CP = 69	    Accept term
SS = 5	CP = 69	    Match  |
SS = 5	CP = 69	    Accept |
SS = 6	CP = 70	    Deduce term
SS = 7	CP = 70	      Deduce part
SS = 7	CP = 70	        Predict Failed in CONDITION
SS = 7	CP = 70	        Predict Failed in CONDITION
SS = 7	CP = 70	        Predict Failed in CONDITION
SS = 9	CP = 70	        Deduce simple_part
SS = 11	CP = 70	          Deduce right_non_terminal_symbol
SS = 12	CP = 70	            Deduce non_terminal_symbol
SS = 12	CP = 70	              Match  id
SS = 12	CP = 70	              Accept id
SS = 12	CP = 71	            Accept non_terminal_symbol
SS = 11	CP = 71	          Accept right_non_terminal_symbol
SS = 9	CP = 71	        Accept simple_part
SS = 7	CP = 71	      Accept part
SS = 8	CP = 71	      Match  ,
SS = 8	CP = 71	      Reject ,
SS = 7	CP = 71	      Predict Failed: part
SS = 6	CP = 71	    Accept term
SS = 5	CP = 71	    Match  |
SS = 5	CP = 71	    Accept |
SS = 6	CP = 72	    Deduce term
SS = 7	CP = 72	      Deduce part
SS = 7	CP = 72	        Predict Failed in CONDITION
SS = 7	CP = 72	        Predict Failed in CONDITION
SS = 7	CP = 72	        Predict Failed in CONDITION
SS = 9	CP = 72	        Deduce simple_part
SS = 11	CP = 72	          Deduce right_non_terminal_symbol
SS = 12	CP = 72	            Deduce non_terminal_symbol
SS = 12	CP = 72	              Match  id
SS = 12	CP = 72	              Accept id
SS = 12	CP = 73	            Accept non_terminal_symbol
SS = 11	CP = 73	          Accept right_non_terminal_symbol
SS = 9	CP = 73	        Accept simple_part
SS = 7	CP = 73	      Accept part
SS = 8	CP = 73	      Match  ,
SS = 8	CP = 73	      Reject ,
SS = 7	CP = 73	      Predict Failed: part
SS = 6	CP = 73	    Accept term
SS = 5	CP = 73	    Match  |
SS = 5	CP = 73	    Accept |
SS = 6	CP = 74	    Deduce term
SS = 7	CP = 74	      Deduce part
SS = 7	CP = 74	        Predict Failed in CONDITION
SS = 7	CP = 74	        Predict Failed in CONDITION
SS = 7	CP = 74	        Predict Failed in CONDITION
SS = 9	CP = 74	        Deduce simple_part
SS = 11	CP = 74	          Deduce right_non_terminal_symbol
SS = 12	CP = 74	            Deduce non_terminal_symbol
SS = 12	CP = 74	              Match  id
SS = 12	CP = 74	              Accept id
SS = 12	CP = 75	            Accept non_terminal_symbol
SS = 11	CP = 75	          Accept right_non_terminal_symbol
SS = 9	CP = 75	        Accept simple_part
SS = 7	CP = 75	      Accept part
SS = 8	CP = 75	      Match  ,
SS = 8	CP = 75	      Reject ,
SS = 7	CP = 75	      Predict Failed: part
SS = 6	CP = 75	    Accept term
SS = 5	CP = 75	    Match  |
SS = 5	CP = 75	    Accept |
SS = 6	CP = 76	    Deduce term
SS = 7	CP = 76	      Deduce part
SS = 7	CP = 76	        Predict Failed in CONDITION
SS = 7	CP = 76	        Predict Failed in CONDITION
SS = 7	CP = 76	        Predict Failed in CONDITION
SS = 9	CP = 76	        Deduce simple_part
SS = 11	CP = 76	          Deduce right_non_terminal_symbol
SS = 12	CP = 76	            Deduce non_terminal_symbol
SS = 12	CP = 76	              Match  id
SS = 12	CP = 76	              Accept id
SS = 12	CP = 77	            Accept non_terminal_symbol
SS = 11	CP = 77	          Accept right_non_terminal_symbol
SS = 9	CP = 77	        Accept simple_part
SS = 7	CP = 77	      Accept part
SS = 8	CP = 77	      Match  ,
SS = 8	CP = 77	      Reject ,
SS = 7	CP = 77	      Predict Failed: part
SS = 6	CP = 77	    Accept term
SS = 5	CP = 77	    Match  |
SS = 5	CP = 77	    Accept |
SS = 6	CP = 78	    Deduce term
SS = 7	CP = 78	      Deduce part
SS = 7	CP = 78	        Predict Failed in CONDITION
SS = 7	CP = 78	        Predict Failed in CONDITION
SS = 7	CP = 78	        Predict Failed in CONDITION
SS = 9	CP = 78	        Deduce simple_part
SS = 11	CP = 78	          Deduce right_non_terminal_symbol
SS = 12	CP = 78	            Deduce non_terminal_symbol
SS = 12	CP = 78	              Match  id
SS = 12	CP = 78	              Accept id
SS = 12	CP = 79	            Accept non_terminal_symbol
SS = 11	CP = 79	          Accept right_non_terminal_symbol
SS = 9	CP = 79	        Accept simple_part
SS = 7	CP = 79	      Accept part
SS = 8	CP = 79	      Match  ,
SS = 8	CP = 79	      Reject ,
SS = 7	CP = 79	      Predict Failed: part
SS = 6	CP = 79	    Accept term
SS = 5	CP = 79	    Match  |
SS = 5	CP = 79	    Accept |
SS = 6	CP = 80	    Deduce term
SS = 7	CP = 80	      Deduce part
SS = 7	CP = 80	        Predict Failed in CONDITION
SS = 7	CP = 80	        Predict Failed in CONDITION
SS = 7	CP = 80	        Predict Failed in CONDITION
SS = 9	CP = 80	        Deduce simple_part
SS = 11	CP = 80	          Deduce right_non_terminal_symbol
SS = 12	CP = 80	            Deduce non_terminal_symbol
SS = 12	CP = 80	              Match  id
SS = 12	CP = 80	              Accept id
SS = 12	CP = 81	            Accept non_terminal_symbol
SS = 11	CP = 81	          Accept right_non_terminal_symbol
SS = 9	CP = 81	        Accept simple_part
SS = 7	CP = 81	      Accept part
SS = 8	CP = 81	      Match  ,
SS = 8	CP = 81	      Reject ,
SS = 7	CP = 81	      Predict Failed: part
SS = 6	CP = 81	    Accept term
SS = 5	CP = 81	    Match  |
SS = 5	CP = 81	    Accept |
SS = 6	CP = 82	    Deduce term
SS = 7	CP = 82	      Deduce part
SS = 7	CP = 82	        Predict Failed in CONDITION
SS = 7	CP = 82	        Predict Failed in CONDITION
SS = 7	CP = 82	        Predict Failed in CONDITION
SS = 9	CP = 82	        Deduce simple_part
SS = 11	CP = 82	          Deduce right_non_terminal_symbol
SS = 12	CP = 82	            Deduce non_terminal_symbol
SS = 12	CP = 82	              Match  id
SS = 12	CP = 82	              Accept id
SS = 12	CP = 83	            Accept non_terminal_symbol
SS = 11	CP = 83	          Accept right_non_terminal_symbol
SS = 9	CP = 83	        Accept simple_part
SS = 7	CP = 83	      Accept part
SS = 8	CP = 83	      Match  ,
SS = 8	CP = 83	      Reject ,
SS = 7	CP = 83	      Predict Failed: part
SS = 6	CP = 83	    Accept term
SS = 5	CP = 83	    Match  |
SS = 5	CP = 83	    Accept |
SS = 6	CP = 84	    Deduce term
SS = 7	CP = 84	      Deduce part
SS = 7	CP = 84	        Predict Failed in CONDITION
SS = 7	CP = 84	        Predict Failed in CONDITION
SS = 7	CP = 84	        Predict Failed in CONDITION
SS = 9	CP = 84	        Deduce simple_part
SS = 11	CP = 84	          Deduce right_non_terminal_symbol
SS = 12	CP = 84	            Deduce non_terminal_symbol
SS = 12	CP = 84	              Match  id
SS = 12	CP = 84	              Accept id
SS = 12	CP = 85	            Accept non_terminal_symbol
SS = 11	CP = 85	          Accept right_non_terminal_symbol
SS = 9	CP = 85	        Accept simple_part
SS = 7	CP = 85	      Accept part
SS = 8	CP = 85	      Match  ,
SS = 8	CP = 85	      Reject ,
SS = 7	CP = 85	      Predict Failed: part
SS = 6	CP = 85	    Accept term
SS = 5	CP = 85	    Match  |
SS = 5	CP = 85	    Reject |
SS = 4	CP = 85	  Accept declaration
SS = 4	CP = 85	  Deduce end_op
SS = 5	CP = 85	    Match  ;
SS = 5	CP = 85	    Accept ;
SS = 4	CP = 86	  Accept end_op
SS = 3	CP = 86	Accept statement
SS = 3	CP = 86	Deduce statement
SS = 4	CP = 86	  Deduce non_terminal_symbol
SS = 4	CP = 86	    Match  id
SS = 4	CP = 86	    Accept id
SS = 4	CP = 87	  Accept non_terminal_symbol
SS = 4	CP = 87	  Deduce assign_op
SS = 5	CP = 87	    Match  ::=
SS = 5	CP = 87	    Accept ::=
SS = 4	CP = 88	  Accept assign_op
SS = 4	CP = 88	  Deduce declaration
SS = 5	CP = 88	    Deduce term
SS = 6	CP = 88	      Deduce part
SS = 6	CP = 88	        Predict Failed in CONDITION
SS = 6	CP = 88	        Predict Failed in CONDITION
SS = 6	CP = 88	        Predict Failed in CONDITION
SS = 8	CP = 88	        Deduce simple_part
SS = 10	CP = 88	          Deduce right_non_terminal_symbol
SS = 11	CP = 88	            Deduce non_terminal_symbol
SS = 11	CP = 88	              Match  id
SS = 11	CP = 88	              Accept id
SS = 11	CP = 89	            Accept non_terminal_symbol
SS = 10	CP = 89	          Accept right_non_terminal_symbol
SS = 8	CP = 89	        Accept simple_part
SS = 6	CP = 89	      Accept part
SS = 7	CP = 89	      Match  ,
SS = 7	CP = 89	      Reject ,
SS = 6	CP = 89	      Predict Failed: part
SS = 5	CP = 89	    Accept term
SS = 5	CP = 89	    Match  |
SS = 5	CP = 89	    Accept |
SS = 6	CP = 90	    Deduce term
SS = 7	CP = 90	      Deduce part
SS = 7	CP = 90	        Predict Failed in CONDITION
SS = 7	CP = 90	        Predict Failed in CONDITION
SS = 7	CP = 90	        Predict Failed in CONDITION
SS = 9	CP = 90	        Deduce simple_part
SS = 11	CP = 90	          Deduce right_non_terminal_symbol
SS = 12	CP = 90	            Deduce non_terminal_symbol
SS = 12	CP = 90	              Match  id
SS = 12	CP = 90	              Accept id
SS = 12	CP = 91	            Accept non_terminal_symbol
SS = 11	CP = 91	          Accept right_non_terminal_symbol
SS = 9	CP = 91	        Accept simple_part
SS = 7	CP = 91	      Accept part
SS = 8	CP = 91	      Match  ,
SS = 8	CP = 91	      Reject ,
SS = 7	CP = 91	      Predict Failed: part
SS = 6	CP = 91	    Accept term
SS = 5	CP = 91	    Match  |
SS = 5	CP = 91	    Accept |
SS = 6	CP = 92	    Deduce term
SS = 7	CP = 92	      Deduce part
SS = 7	CP = 92	        Predict Failed in CONDITION
SS = 7	CP = 92	        Predict Failed in CONDITION
SS = 7	CP = 92	        Predict Failed in CONDITION
SS = 9	CP = 92	        Deduce simple_part
SS = 11	CP = 92	          Deduce right_non_terminal_symbol
SS = 12	CP = 92	            Deduce non_terminal_symbol
SS = 12	CP = 92	              Match  id
SS = 12	CP = 92	              Accept id
SS = 12	CP = 93	            Accept non_terminal_symbol
SS = 11	CP = 93	          Accept right_non_terminal_symbol
SS = 9	CP = 93	        Accept simple_part
SS = 7	CP = 93	      Accept part
SS = 8	CP = 93	      Match  ,
SS = 8	CP = 93	      Reject ,
SS = 7	CP = 93	      Predict Failed: part
SS = 6	CP = 93	    Accept term
SS = 5	CP = 93	    Match  |
SS = 5	CP = 93	    Accept |
SS = 6	CP = 94	    Deduce term
SS = 7	CP = 94	      Deduce part
SS = 7	CP = 94	        Predict Failed in CONDITION
SS = 7	CP = 94	        Predict Failed in CONDITION
SS = 7	CP = 94	        Predict Failed in CONDITION
SS = 9	CP = 94	        Deduce simple_part
SS = 11	CP = 94	          Deduce right_non_terminal_symbol
SS = 12	CP = 94	            Deduce non_terminal_symbol
SS = 12	CP = 94	              Match  id
SS = 12	CP = 94	              Accept id
SS = 12	CP = 95	            Accept non_terminal_symbol
SS = 11	CP = 95	          Accept right_non_terminal_symbol
SS = 9	CP = 95	        Accept simple_part
SS = 7	CP = 95	      Accept part
SS = 8	CP = 95	      Match  ,
SS = 8	CP = 95	      Reject ,
SS = 7	CP = 95	      Predict Failed: part
SS = 6	CP = 95	    Accept term
SS = 5	CP = 95	    Match  |
SS = 5	CP = 95	    Accept |
SS = 6	CP = 96	    Deduce term
SS = 7	CP = 96	      Deduce part
SS = 7	CP = 96	        Predict Failed in CONDITION
SS = 7	CP = 96	        Predict Failed in CONDITION
SS = 7	CP = 96	        Predict Failed in CONDITION
SS = 9	CP = 96	        Deduce simple_part
SS = 11	CP = 96	          Deduce right_non_terminal_symbol
SS = 12	CP = 96	            Deduce non_terminal_symbol
SS = 12	CP = 96	              Match  id
SS = 12	CP = 96	              Accept id
SS = 12	CP = 97	            Accept non_terminal_symbol
SS = 11	CP = 97	          Accept right_non_terminal_symbol
SS = 9	CP = 97	        Accept simple_part
SS = 7	CP = 97	      Accept part
SS = 8	CP = 97	      Match  ,
SS = 8	CP = 97	      Reject ,
SS = 7	CP = 97	      Predict Failed: part
SS = 6	CP = 97	    Accept term
SS = 5	CP = 97	    Match  |
SS = 5	CP = 97	    Accept |
SS = 6	CP = 98	    Deduce term
SS = 7	CP = 98	      Deduce part
SS = 7	CP = 98	        Predict Failed in CONDITION
SS = 7	CP = 98	        Predict Failed in CONDITION
SS = 7	CP = 98	        Predict Failed in CONDITION
SS = 9	CP = 98	        Deduce simple_part
SS = 11	CP = 98	          Deduce right_non_terminal_symbol
SS = 12	CP = 98	            Deduce non_terminal_symbol
SS = 12	CP = 98	              Match  id
SS = 12	CP = 98	              Accept id
SS = 12	CP = 99	            Accept non_terminal_symbol
SS = 11	CP = 99	          Accept right_non_terminal_symbol
SS = 9	CP = 99	        Accept simple_part
SS = 7	CP = 99	      Accept part
SS = 8	CP = 99	      Match  ,
SS = 8	CP = 99	      Reject ,
SS = 7	CP = 99	      Predict Failed: part
SS = 6	CP = 99	    Accept term
SS = 5	CP = 99	    Match  |
SS = 5	CP = 99	    Reject |
SS = 4	CP = 99	  Accept declaration
SS = 4	CP = 99	  Deduce end_op
SS = 5	CP = 99	    Match  ;
SS = 5	CP = 99	    Accept ;
SS = 4	CP = 100	  Accept end_op
SS = 3	CP = 100	Accept statement
SS = 3	CP = 100	Deduce statement
SS = 4	CP = 100	  Deduce non_terminal_symbol
SS = 4	CP = 100	    Match  id
SS = 4	CP = 100	    Accept id
SS = 4	CP = 101	  Accept non_terminal_symbol
SS = 4	CP = 101	  Deduce assign_op
SS = 5	CP = 101	    Match  ::=
SS = 5	CP = 101	    Accept ::=
SS = 4	CP = 102	  Accept assign_op
SS = 4	CP = 102	  Deduce declaration
SS = 5	CP = 102	    Deduce term
SS = 6	CP = 102	      Deduce part
SS = 6	CP = 102	        Predict Failed in CONDITION
SS = 6	CP = 102	        Predict Failed in CONDITION
SS = 6	CP = 102	        Predict Failed in CONDITION
SS = 8	CP = 102	        Deduce simple_part
SS = 8	CP = 102	          Predict Failed in CONDITION
SS = 10	CP = 102	          Deduce terminal_symbol
SS = 10	CP = 102	            Predict Failed in CONDITION
SS = 10	CP = 102	            Predict Failed in CONDITION
SS = 11	CP = 102	            Match  token
SS = 11	CP = 102	            Accept token
SS = 10	CP = 103	          Accept terminal_symbol
SS = 8	CP = 103	        Accept simple_part
SS = 6	CP = 103	      Accept part
SS = 7	CP = 103	      Match  ,
SS = 7	CP = 103	      Reject ,
SS = 7	CP = 103	      Deduce part
SS = 7	CP = 103	        Predict Failed in CONDITION
SS = 7	CP = 103	        Predict Failed in CONDITION
SS = 7	CP = 103	        Predict Failed in CONDITION
SS = 9	CP = 103	        Deduce simple_part
SS = 9	CP = 103	          Predict Failed in CONDITION
SS = 11	CP = 103	          Deduce terminal_symbol
SS = 11	CP = 103	            Predict Failed in CONDITION
SS = 11	CP = 103	            Predict Failed in CONDITION
SS = 12	CP = 103	            Match  token
SS = 12	CP = 103	            Accept token
SS = 11	CP = 104	          Accept terminal_symbol
SS = 9	CP = 104	        Accept simple_part
SS = 7	CP = 104	      Accept part
SS = 7	CP = 104	      Match  ,
SS = 7	CP = 104	      Reject ,
SS = 6	CP = 104	      Predict Failed: part
SS = 5	CP = 104	    Accept term
SS = 5	CP = 104	    Match  |
SS = 5	CP = 104	    Reject |
SS = 4	CP = 104	  Accept declaration
SS = 4	CP = 104	  Deduce end_op
SS = 5	CP = 104	    Match  ;
SS = 5	CP = 104	    Accept ;
SS = 4	CP = 105	  Accept end_op
SS = 3	CP = 105	Accept statement
SS = 3	CP = 105	Deduce statement
SS = 4	CP = 105	  Deduce non_terminal_symbol
SS = 4	CP = 105	    Match  id
SS = 4	CP = 105	    Accept id
SS = 4	CP = 106	  Accept non_terminal_symbol
SS = 4	CP = 106	  Deduce assign_op
SS = 5	CP = 106	    Match  ::=
SS = 5	CP = 106	    Accept ::=
SS = 4	CP = 107	  Accept assign_op
SS = 4	CP = 107	  Deduce declaration
SS = 5	CP = 107	    Deduce term
SS = 6	CP = 107	      Deduce part
SS = 6	CP = 107	        Predict Failed in CONDITION
SS = 6	CP = 107	        Predict Failed in CONDITION
SS = 6	CP = 107	        Predict Failed in CONDITION
SS = 8	CP = 107	        Deduce simple_part
SS = 8	CP = 107	          Predict Failed in CONDITION
SS = 10	CP = 107	          Deduce terminal_symbol
SS = 11	CP = 107	            Match  slit
SS = 11	CP = 107	            Accept slit
SS = 10	CP = 108	          Accept terminal_symbol
SS = 8	CP = 108	        Accept simple_part
SS = 6	CP = 108	      Accept part
SS = 7	CP = 108	      Match  ,
SS = 7	CP = 108	      Reject ,
SS = 7	CP = 108	      Deduce part
SS = 7	CP = 108	        Predict Failed in CONDITION
SS = 7	CP = 108	        Predict Failed in CONDITION
SS = 7	CP = 108	        Predict Failed in CONDITION
SS = 9	CP = 108	        Deduce simple_part
SS = 9	CP = 108	          Predict Failed in CONDITION
SS = 11	CP = 108	          Deduce terminal_symbol
SS = 11	CP = 108	            Predict Failed in CONDITION
SS = 11	CP = 108	            Predict Failed in CONDITION
SS = 12	CP = 108	            Match  token
SS = 12	CP = 108	            Accept token
SS = 11	CP = 109	          Accept terminal_symbol
SS = 9	CP = 109	        Accept simple_part
SS = 7	CP = 109	      Accept part
SS = 7	CP = 109	      Match  ,
SS = 7	CP = 109	      Reject ,
SS = 7	CP = 109	      Deduce part
SS = 7	CP = 109	        Predict Failed in CONDITION
SS = 7	CP = 109	        Predict Failed in CONDITION
SS = 7	CP = 109	        Predict Failed in CONDITION
SS = 9	CP = 109	        Deduce simple_part
SS = 11	CP = 109	          Deduce right_non_terminal_symbol
SS = 12	CP = 109	            Deduce non_terminal_symbol
SS = 12	CP = 109	              Match  id
SS = 12	CP = 109	              Accept id
SS = 12	CP = 110	            Accept non_terminal_symbol
SS = 11	CP = 110	          Accept right_non_terminal_symbol
SS = 9	CP = 110	        Accept simple_part
SS = 7	CP = 110	      Accept part
SS = 7	CP = 110	      Match  ,
SS = 7	CP = 110	      Reject ,
SS = 6	CP = 110	      Predict Failed: part
SS = 5	CP = 110	    Accept term
SS = 5	CP = 110	    Match  |
SS = 5	CP = 110	    Reject |
SS = 4	CP = 110	  Accept declaration
SS = 4	CP = 110	  Deduce end_op
SS = 5	CP = 110	    Match  ;
SS = 5	CP = 110	    Accept ;
SS = 4	CP = 111	  Accept end_op
SS = 3	CP = 111	Accept statement
SS = 3	CP = 111	Deduce statement
SS = 4	CP = 111	  Deduce non_terminal_symbol
SS = 4	CP = 111	    Match  id
SS = 4	CP = 111	    Accept id
SS = 4	CP = 112	  Accept non_terminal_symbol
SS = 4	CP = 112	  Deduce assign_op
SS = 5	CP = 112	    Match  ::=
SS = 5	CP = 112	    Accept ::=
SS = 4	CP = 113	  Accept assign_op
SS = 4	CP = 113	  Deduce declaration
SS = 5	CP = 113	    Deduce term
SS = 6	CP = 113	      Deduce part
SS = 6	CP = 113	        Predict Failed in CONDITION
SS = 6	CP = 113	        Predict Failed in CONDITION
SS = 6	CP = 113	        Predict Failed in CONDITION
SS = 8	CP = 113	        Deduce simple_part
SS = 8	CP = 113	          Predict Failed in CONDITION
SS = 10	CP = 113	          Deduce terminal_symbol
SS = 11	CP = 113	            Match  slit
SS = 11	CP = 113	            Accept slit
SS = 10	CP = 114	          Accept terminal_symbol
SS = 8	CP = 114	        Accept simple_part
SS = 6	CP = 114	      Accept part
SS = 7	CP = 114	      Match  ,
SS = 7	CP = 114	      Reject ,
SS = 7	CP = 114	      Deduce part
SS = 7	CP = 114	        Predict Failed in CONDITION
SS = 7	CP = 114	        Predict Failed in CONDITION
SS = 7	CP = 114	        Predict Failed in CONDITION
SS = 9	CP = 114	        Deduce simple_part
SS = 11	CP = 114	          Deduce right_non_terminal_symbol
SS = 12	CP = 114	            Deduce non_terminal_symbol
SS = 12	CP = 114	              Match  id
SS = 12	CP = 114	              Accept id
SS = 12	CP = 115	            Accept non_terminal_symbol
SS = 11	CP = 115	          Accept right_non_terminal_symbol
SS = 9	CP = 115	        Accept simple_part
SS = 7	CP = 115	      Accept part
SS = 7	CP = 115	      Match  ,
SS = 7	CP = 115	      Reject ,
SS = 7	CP = 115	      Deduce part
SS = 7	CP = 115	        Predict Failed in CONDITION
SS = 7	CP = 115	        Predict Failed in CONDITION
SS = 7	CP = 115	        Predict Failed in CONDITION
SS = 9	CP = 115	        Deduce simple_part
SS = 11	CP = 115	          Deduce right_non_terminal_symbol
SS = 12	CP = 115	            Deduce non_terminal_symbol
SS = 12	CP = 115	              Match  id
SS = 12	CP = 115	              Accept id
SS = 12	CP = 116	            Accept non_terminal_symbol
SS = 11	CP = 116	          Accept right_non_terminal_symbol
SS = 9	CP = 116	        Accept simple_part
SS = 7	CP = 116	      Accept part
SS = 7	CP = 116	      Match  ,
SS = 7	CP = 116	      Reject ,
SS = 6	CP = 116	      Predict Failed: part
SS = 5	CP = 116	    Accept term
SS = 5	CP = 116	    Match  |
SS = 5	CP = 116	    Reject |
SS = 4	CP = 116	  Accept declaration
SS = 4	CP = 116	  Deduce end_op
SS = 5	CP = 116	    Match  ;
SS = 5	CP = 116	    Accept ;
SS = 4	CP = 117	  Accept end_op
SS = 3	CP = 117	Accept statement
SS = 3	CP = 117	Deduce statement
SS = 4	CP = 117	  Deduce non_terminal_symbol
SS = 4	CP = 117	    Match  id
SS = 4	CP = 117	    Accept id
SS = 4	CP = 118	  Accept non_terminal_symbol
SS = 4	CP = 118	  Deduce assign_op
SS = 5	CP = 118	    Match  ::=
SS = 5	CP = 118	    Accept ::=
SS = 4	CP = 119	  Accept assign_op
SS = 4	CP = 119	  Deduce declaration
SS = 5	CP = 119	    Deduce term
SS = 6	CP = 119	      Deduce part
SS = 6	CP = 119	        Predict Failed in CONDITION
SS = 6	CP = 119	        Predict Failed in CONDITION
SS = 6	CP = 119	        Predict Failed in CONDITION
SS = 8	CP = 119	        Deduce simple_part
SS = 8	CP = 119	          Predict Failed in CONDITION
SS = 10	CP = 119	          Deduce terminal_symbol
SS = 10	CP = 119	            Predict Failed in CONDITION
SS = 10	CP = 119	            Predict Failed in CONDITION
SS = 11	CP = 119	            Match  token
SS = 11	CP = 119	            Accept token
SS = 10	CP = 120	          Accept terminal_symbol
SS = 8	CP = 120	        Accept simple_part
SS = 6	CP = 120	      Accept part
SS = 7	CP = 120	      Match  ,
SS = 7	CP = 120	      Reject ,
SS = 7	CP = 120	      Deduce part
SS = 7	CP = 120	        Predict Failed in CONDITION
SS = 7	CP = 120	        Predict Failed in CONDITION
SS = 9	CP = 120	        Deduce alternative_part
SS = 9	CP = 120	          Match  [
SS = 9	CP = 120	          Accept [
SS = 10	CP = 121	          Deduce declaration
SS = 11	CP = 121	            Deduce term
SS = 12	CP = 121	              Deduce part
SS = 12	CP = 121	                Predict Failed in CONDITION
SS = 12	CP = 121	                Predict Failed in CONDITION
SS = 12	CP = 121	                Predict Failed in CONDITION
SS = 14	CP = 121	                Deduce simple_part
SS = 14	CP = 121	                  Predict Failed in CONDITION
SS = 16	CP = 121	                  Deduce terminal_symbol
SS = 17	CP = 121	                    Match  slit
SS = 17	CP = 121	                    Accept slit
SS = 16	CP = 122	                  Accept terminal_symbol
SS = 14	CP = 122	                Accept simple_part
SS = 12	CP = 122	              Accept part
SS = 13	CP = 122	              Match  ,
SS = 13	CP = 122	              Reject ,
SS = 13	CP = 122	              Deduce part
SS = 13	CP = 122	                Predict Failed in CONDITION
SS = 15	CP = 122	                Deduce declaration_part
SS = 15	CP = 122	                  Match  (
SS = 15	CP = 122	                  Accept (
SS = 16	CP = 123	                  Deduce declaration
SS = 17	CP = 123	                    Deduce term
SS = 18	CP = 123	                      Deduce part
SS = 18	CP = 123	                        Predict Failed in CONDITION
SS = 18	CP = 123	                        Predict Failed in CONDITION
SS = 18	CP = 123	                        Predict Failed in CONDITION
SS = 20	CP = 123	                        Deduce simple_part
SS = 20	CP = 123	                          Predict Failed in CONDITION
SS = 22	CP = 123	                          Deduce terminal_symbol
SS = 23	CP = 123	                            Match  slit
SS = 23	CP = 123	                            Accept slit
SS = 22	CP = 124	                          Accept terminal_symbol
SS = 20	CP = 124	                        Accept simple_part
SS = 18	CP = 124	                      Accept part
SS = 19	CP = 124	                      Match  ,
SS = 19	CP = 124	                      Reject ,
SS = 18	CP = 124	                      Predict Failed: part
SS = 17	CP = 124	                    Accept term
SS = 17	CP = 124	                    Match  |
SS = 17	CP = 124	                    Accept |
SS = 18	CP = 125	                    Deduce term
SS = 19	CP = 125	                      Deduce part
SS = 19	CP = 125	                        Predict Failed in CONDITION
SS = 19	CP = 125	                        Predict Failed in CONDITION
SS = 19	CP = 125	                        Predict Failed in CONDITION
SS = 21	CP = 125	                        Deduce simple_part
SS = 23	CP = 125	                          Deduce right_non_terminal_symbol
SS = 24	CP = 125	                            Deduce non_terminal_symbol
SS = 24	CP = 125	                              Match  id
SS = 24	CP = 125	                              Accept id
SS = 24	CP = 126	                            Accept non_terminal_symbol
SS = 23	CP = 126	                          Accept right_non_terminal_symbol
SS = 21	CP = 126	                        Accept simple_part
SS = 19	CP = 126	                      Accept part
SS = 20	CP = 126	                      Match  ,
SS = 20	CP = 126	                      Reject ,
SS = 19	CP = 126	                      Predict Failed: part
SS = 18	CP = 126	                    Accept term
SS = 17	CP = 126	                    Match  |
SS = 17	CP = 126	                    Reject |
SS = 16	CP = 126	                  Accept declaration
SS = 15	CP = 126	                  Match  )
SS = 15	CP = 126	                  Accept )
SS = 15	CP = 127	                Accept declaration_part
SS = 13	CP = 127	              Accept part
SS = 13	CP = 127	              Match  ,
SS = 13	CP = 127	              Reject ,
SS = 12	CP = 127	              Predict Failed: part
SS = 11	CP = 127	            Accept term
SS = 11	CP = 127	            Match  |
SS = 11	CP = 127	            Reject |
SS = 10	CP = 127	          Accept declaration
SS = 9	CP = 127	          Match  ]
SS = 9	CP = 127	          Accept ]
SS = 9	CP = 128	        Accept alternative_part
SS = 7	CP = 128	      Accept part
SS = 7	CP = 128	      Match  ,
SS = 7	CP = 128	      Reject ,
SS = 6	CP = 128	      Predict Failed: part
SS = 5	CP = 128	    Accept term
SS = 5	CP = 128	    Match  |
SS = 5	CP = 128	    Reject |
SS = 4	CP = 128	  Accept declaration
SS = 4	CP = 128	  Deduce end_op
SS = 5	CP = 128	    Match  ;
SS = 5	CP = 128	    Accept ;
SS = 4	CP = 129	  Accept end_op
SS = 3	CP = 129	Accept statement
SS = 3	CP = 129	Deduce statement
SS = 4	CP = 129	  Deduce non_terminal_symbol
SS = 4	CP = 129	    Match  id
SS = 4	CP = 129	    Accept id
SS = 4	CP = 130	  Accept non_terminal_symbol
SS = 4	CP = 130	  Deduce assign_op
SS = 5	CP = 130	    Match  ::=
SS = 5	CP = 130	    Accept ::=
SS = 4	CP = 131	  Accept assign_op
SS = 4	CP = 131	  Deduce declaration
SS = 5	CP = 131	    Deduce term
SS = 6	CP = 131	      Deduce part
SS = 6	CP = 131	        Predict Failed in CONDITION
SS = 6	CP = 131	        Predict Failed in CONDITION
SS = 6	CP = 131	        Predict Failed in CONDITION
SS = 8	CP = 131	        Deduce simple_part
SS = 10	CP = 131	          Deduce right_non_terminal_symbol
SS = 11	CP = 131	            Deduce non_terminal_symbol
SS = 11	CP = 131	              Match  id
SS = 11	CP = 131	              Accept id
SS = 11	CP = 132	            Accept non_terminal_symbol
SS = 10	CP = 132	          Accept right_non_terminal_symbol
SS = 8	CP = 132	        Accept simple_part
SS = 6	CP = 132	      Accept part
SS = 7	CP = 132	      Match  ,
SS = 7	CP = 132	      Reject ,
SS = 7	CP = 132	      Deduce part
SS = 7	CP = 132	        Predict Failed in CONDITION
SS = 7	CP = 132	        Predict Failed in CONDITION
SS = 9	CP = 132	        Deduce alternative_part
SS = 9	CP = 132	          Match  [
SS = 9	CP = 132	          Accept [
SS = 10	CP = 133	          Deduce declaration
SS = 11	CP = 133	            Deduce term
SS = 12	CP = 133	              Deduce part
SS = 12	CP = 133	                Predict Failed in CONDITION
SS = 12	CP = 133	                Predict Failed in CONDITION
SS = 12	CP = 133	                Predict Failed in CONDITION
SS = 14	CP = 133	                Deduce simple_part
SS = 14	CP = 133	                  Predict Failed in CONDITION
SS = 16	CP = 133	                  Deduce terminal_symbol
SS = 17	CP = 133	                    Match  slit
SS = 17	CP = 133	                    Accept slit
SS = 16	CP = 134	                  Accept terminal_symbol
SS = 14	CP = 134	                Accept simple_part
SS = 12	CP = 134	              Accept part
SS = 13	CP = 134	              Match  ,
SS = 13	CP = 134	              Reject ,
SS = 13	CP = 134	              Deduce part
SS = 13	CP = 134	                Predict Failed in CONDITION
SS = 13	CP = 134	                Predict Failed in CONDITION
SS = 13	CP = 134	                Predict Failed in CONDITION
SS = 15	CP = 134	                Deduce simple_part
SS = 15	CP = 134	                  Predict Failed in CONDITION
SS = 17	CP = 134	                  Deduce terminal_symbol
SS = 17	CP = 134	                    Predict Failed in CONDITION
SS = 17	CP = 134	                    Predict Failed in CONDITION
SS = 18	CP = 134	                    Match  token
SS = 18	CP = 134	                    Accept token
SS = 17	CP = 135	                  Accept terminal_symbol
SS = 15	CP = 135	                Accept simple_part
SS = 13	CP = 135	              Accept part
SS = 13	CP = 135	              Match  ,
SS = 13	CP = 135	              Reject ,
SS = 12	CP = 135	              Predict Failed: part
SS = 11	CP = 135	            Accept term
SS = 11	CP = 135	            Match  |
SS = 11	CP = 135	            Reject |
SS = 10	CP = 135	          Accept declaration
SS = 9	CP = 135	          Match  ]
SS = 9	CP = 135	          Accept ]
SS = 9	CP = 136	        Accept alternative_part
SS = 7	CP = 136	      Accept part
SS = 7	CP = 136	      Match  ,
SS = 7	CP = 136	      Reject ,
SS = 7	CP = 136	      Deduce part
SS = 7	CP = 136	        Predict Failed in CONDITION
SS = 7	CP = 136	        Predict Failed in CONDITION
SS = 9	CP = 136	        Deduce alternative_part
SS = 9	CP = 136	          Match  [
SS = 9	CP = 136	          Accept [
SS = 10	CP = 137	          Deduce declaration
SS = 11	CP = 137	            Deduce term
SS = 12	CP = 137	              Deduce part
SS = 12	CP = 137	                Predict Failed in CONDITION
SS = 12	CP = 137	                Predict Failed in CONDITION
SS = 12	CP = 137	                Predict Failed in CONDITION
SS = 14	CP = 137	                Deduce simple_part
SS = 14	CP = 137	                  Predict Failed in CONDITION
SS = 16	CP = 137	                  Deduce terminal_symbol
SS = 17	CP = 137	                    Match  slit
SS = 17	CP = 137	                    Accept slit
SS = 16	CP = 138	                  Accept terminal_symbol
SS = 14	CP = 138	                Accept simple_part
SS = 12	CP = 138	              Accept part
SS = 13	CP = 138	              Match  ,
SS = 13	CP = 138	              Reject ,
SS = 13	CP = 138	              Deduce part
SS = 13	CP = 138	                Predict Failed in CONDITION
SS = 13	CP = 138	                Predict Failed in CONDITION
SS = 13	CP = 138	                Predict Failed in CONDITION
SS = 15	CP = 138	                Deduce simple_part
SS = 17	CP = 138	                  Deduce right_non_terminal_symbol
SS = 18	CP = 138	                    Deduce non_terminal_symbol
SS = 18	CP = 138	                      Match  id
SS = 18	CP = 138	                      Accept id
SS = 18	CP = 139	                    Accept non_terminal_symbol
SS = 17	CP = 139	                  Accept right_non_terminal_symbol
SS = 15	CP = 139	                Accept simple_part
SS = 13	CP = 139	              Accept part
SS = 13	CP = 139	              Match  ,
SS = 13	CP = 139	              Reject ,
SS = 12	CP = 139	              Predict Failed: part
SS = 11	CP = 139	            Accept term
SS = 11	CP = 139	            Match  |
SS = 11	CP = 139	            Reject |
SS = 10	CP = 139	          Accept declaration
SS = 9	CP = 139	          Match  ]
SS = 9	CP = 139	          Accept ]
SS = 9	CP = 140	        Accept alternative_part
SS = 7	CP = 140	      Accept part
SS = 7	CP = 140	      Match  ,
SS = 7	CP = 140	      Reject ,
SS = 6	CP = 140	      Predict Failed: part
SS = 5	CP = 140	    Accept term
SS = 5	CP = 140	    Match  |
SS = 5	CP = 140	    Reject |
SS = 4	CP = 140	  Accept declaration
SS = 4	CP = 140	  Deduce end_op
SS = 5	CP = 140	    Match  ;
SS = 5	CP = 140	    Accept ;
SS = 4	CP = 141	  Accept end_op
SS = 3	CP = 141	Accept statement
SS = 3	CP = 141	Deduce statement
SS = 4	CP = 141	  Deduce non_terminal_symbol
SS = 4	CP = 141	    Match  id
SS = 4	CP = 141	    Accept id
SS = 4	CP = 142	  Accept non_terminal_symbol
SS = 4	CP = 142	  Deduce assign_op
SS = 5	CP = 142	    Match  ::=
SS = 5	CP = 142	    Accept ::=
SS = 4	CP = 143	  Accept assign_op
SS = 4	CP = 143	  Deduce declaration
SS = 5	CP = 143	    Deduce term
SS = 6	CP = 143	      Deduce part
SS = 6	CP = 143	        Predict Failed in CONDITION
SS = 6	CP = 143	        Predict Failed in CONDITION
SS = 6	CP = 143	        Predict Failed in CONDITION
SS = 8	CP = 143	        Deduce simple_part
SS = 10	CP = 143	          Deduce right_non_terminal_symbol
SS = 11	CP = 143	            Deduce non_terminal_symbol
SS = 11	CP = 143	              Match  id
SS = 11	CP = 143	              Accept id
SS = 11	CP = 144	            Accept non_terminal_symbol
SS = 10	CP = 144	          Accept right_non_terminal_symbol
SS = 8	CP = 144	        Accept simple_part
SS = 6	CP = 144	      Accept part
SS = 7	CP = 144	      Match  ,
SS = 7	CP = 144	      Reject ,
SS = 7	CP = 144	      Deduce part
SS = 7	CP = 144	        Predict Failed in CONDITION
SS = 7	CP = 144	        Predict Failed in CONDITION
SS = 7	CP = 144	        Predict Failed in CONDITION
SS = 9	CP = 144	        Deduce simple_part
SS = 9	CP = 144	          Predict Failed in CONDITION
SS = 11	CP = 144	          Deduce terminal_symbol
SS = 12	CP = 144	            Match  slit
SS = 12	CP = 144	            Accept slit
SS = 11	CP = 145	          Accept terminal_symbol
SS = 9	CP = 145	        Accept simple_part
SS = 7	CP = 145	      Accept part
SS = 7	CP = 145	      Match  ,
SS = 7	CP = 145	      Reject ,
SS = 7	CP = 145	      Deduce part
SS = 7	CP = 145	        Predict Failed in CONDITION
SS = 7	CP = 145	        Predict Failed in CONDITION
SS = 7	CP = 145	        Predict Failed in CONDITION
SS = 9	CP = 145	        Deduce simple_part
SS = 11	CP = 145	          Deduce right_non_terminal_symbol
SS = 12	CP = 145	            Deduce non_terminal_symbol
SS = 12	CP = 145	              Match  id
SS = 12	CP = 145	              Accept id
SS = 12	CP = 146	            Accept non_terminal_symbol
SS = 11	CP = 146	          Accept right_non_terminal_symbol
SS = 9	CP = 146	        Accept simple_part
SS = 7	CP = 146	      Accept part
SS = 7	CP = 146	      Match  ,
SS = 7	CP = 146	      Reject ,
SS = 6	CP = 146	      Predict Failed: part
SS = 5	CP = 146	    Accept term
SS = 5	CP = 146	    Match  |
SS = 5	CP = 146	    Accept |
SS = 6	CP = 147	    Deduce term
SS = 7	CP = 147	      Deduce part
SS = 7	CP = 147	        Predict Failed in CONDITION
SS = 7	CP = 147	        Predict Failed in CONDITION
SS = 7	CP = 147	        Predict Failed in CONDITION
SS = 9	CP = 147	        Deduce simple_part
SS = 11	CP = 147	          Deduce right_non_terminal_symbol
SS = 12	CP = 147	            Deduce non_terminal_symbol
SS = 12	CP = 147	              Match  id
SS = 12	CP = 147	              Accept id
SS = 12	CP = 148	            Accept non_terminal_symbol
SS = 11	CP = 148	          Accept right_non_terminal_symbol
SS = 9	CP = 148	        Accept simple_part
SS = 7	CP = 148	      Accept part
SS = 8	CP = 148	      Match  ,
SS = 8	CP = 148	      Reject ,
SS = 7	CP = 148	      Predict Failed: part
SS = 6	CP = 148	    Accept term
SS = 5	CP = 148	    Match  |
SS = 5	CP = 148	    Reject |
SS = 4	CP = 148	  Accept declaration
SS = 4	CP = 148	  Deduce end_op
SS = 5	CP = 148	    Match  ;
SS = 5	CP = 148	    Accept ;
SS = 4	CP = 149	  Accept end_op
SS = 3	CP = 149	Accept statement
SS = 3	CP = 149	Deduce statement
SS = 4	CP = 149	  Deduce non_terminal_symbol
SS = 4	CP = 149	    Match  id
SS = 4	CP = 149	    Accept id
SS = 4	CP = 150	  Accept non_terminal_symbol
SS = 4	CP = 150	  Deduce assign_op
SS = 5	CP = 150	    Match  ::=
SS = 5	CP = 150	    Accept ::=
SS = 4	CP = 151	  Accept assign_op
SS = 4	CP = 151	  Deduce declaration
SS = 5	CP = 151	    Deduce term
SS = 6	CP = 151	      Deduce part
SS = 6	CP = 151	        Predict Failed in CONDITION
SS = 8	CP = 151	        Deduce declaration_part
SS = 8	CP = 151	          Match  (
SS = 8	CP = 151	          Accept (
SS = 9	CP = 152	          Deduce declaration
SS = 10	CP = 152	            Deduce term
SS = 11	CP = 152	              Deduce part
SS = 11	CP = 152	                Predict Failed in CONDITION
SS = 11	CP = 152	                Predict Failed in CONDITION
SS = 11	CP = 152	                Predict Failed in CONDITION
SS = 13	CP = 152	                Deduce simple_part
SS = 13	CP = 152	                  Predict Failed in CONDITION
SS = 15	CP = 152	                  Deduce terminal_symbol
SS = 16	CP = 152	                    Match  slit
SS = 16	CP = 152	                    Accept slit
SS = 15	CP = 153	                  Accept terminal_symbol
SS = 13	CP = 153	                Accept simple_part
SS = 11	CP = 153	              Accept part
SS = 12	CP = 153	              Match  ,
SS = 12	CP = 153	              Reject ,
SS = 11	CP = 153	              Predict Failed: part
SS = 10	CP = 153	            Accept term
SS = 10	CP = 153	            Match  |
SS = 10	CP = 153	            Accept |
SS = 11	CP = 154	            Deduce term
SS = 12	CP = 154	              Deduce part
SS = 12	CP = 154	                Predict Failed in CONDITION
SS = 12	CP = 154	                Predict Failed in CONDITION
SS = 12	CP = 154	                Predict Failed in CONDITION
SS = 14	CP = 154	                Deduce simple_part
SS = 14	CP = 154	                  Predict Failed in CONDITION
SS = 16	CP = 154	                  Deduce terminal_symbol
SS = 17	CP = 154	                    Match  slit
SS = 17	CP = 154	                    Accept slit
SS = 16	CP = 155	                  Accept terminal_symbol
SS = 14	CP = 155	                Accept simple_part
SS = 12	CP = 155	              Accept part
SS = 13	CP = 155	              Match  ,
SS = 13	CP = 155	              Reject ,
SS = 12	CP = 155	              Predict Failed: part
SS = 11	CP = 155	            Accept term
SS = 10	CP = 155	            Match  |
SS = 10	CP = 155	            Accept |
SS = 11	CP = 156	            Deduce term
SS = 12	CP = 156	              Deduce part
SS = 12	CP = 156	                Predict Failed in CONDITION
SS = 12	CP = 156	                Predict Failed in CONDITION
SS = 12	CP = 156	                Predict Failed in CONDITION
SS = 14	CP = 156	                Deduce simple_part
SS = 14	CP = 156	                  Predict Failed in CONDITION
SS = 16	CP = 156	                  Deduce terminal_symbol
SS = 17	CP = 156	                    Match  slit
SS = 17	CP = 156	                    Accept slit
SS = 16	CP = 157	                  Accept terminal_symbol
SS = 14	CP = 157	                Accept simple_part
SS = 12	CP = 157	              Accept part
SS = 13	CP = 157	              Match  ,
SS = 13	CP = 157	              Reject ,
SS = 12	CP = 157	              Predict Failed: part
SS = 11	CP = 157	            Accept term
SS = 10	CP = 157	            Match  |
SS = 10	CP = 157	            Reject |
SS = 9	CP = 157	          Accept declaration
SS = 8	CP = 157	          Match  )
SS = 8	CP = 157	          Accept )
SS = 8	CP = 158	        Accept declaration_part
SS = 6	CP = 158	      Accept part
SS = 7	CP = 158	      Match  ,
SS = 7	CP = 158	      Reject ,
SS = 7	CP = 158	      Deduce part
SS = 7	CP = 158	        Predict Failed in CONDITION
SS = 7	CP = 158	        Predict Failed in CONDITION
SS = 7	CP = 158	        Predict Failed in CONDITION
SS = 9	CP = 158	        Deduce simple_part
SS = 11	CP = 158	          Deduce right_non_terminal_symbol
SS = 12	CP = 158	            Deduce non_terminal_symbol
SS = 12	CP = 158	              Match  id
SS = 12	CP = 158	              Accept id
SS = 12	CP = 159	            Accept non_terminal_symbol
SS = 11	CP = 159	          Accept right_non_terminal_symbol
SS = 9	CP = 159	        Accept simple_part
SS = 7	CP = 159	      Accept part
SS = 7	CP = 159	      Match  ,
SS = 7	CP = 159	      Reject ,
SS = 7	CP = 159	      Deduce part
SS = 7	CP = 159	        Predict Failed in CONDITION
SS = 7	CP = 159	        Predict Failed in CONDITION
SS = 7	CP = 159	        Predict Failed in CONDITION
SS = 9	CP = 159	        Deduce simple_part
SS = 11	CP = 159	          Deduce right_non_terminal_symbol
SS = 12	CP = 159	            Deduce non_terminal_symbol
SS = 12	CP = 159	              Match  id
SS = 12	CP = 159	              Accept id
SS = 12	CP = 160	            Accept non_terminal_symbol
SS = 11	CP = 160	          Accept right_non_terminal_symbol
SS = 9	CP = 160	        Accept simple_part
SS = 7	CP = 160	      Accept part
SS = 7	CP = 160	      Match  ,
SS = 7	CP = 160	      Reject ,
SS = 6	CP = 160	      Predict Failed: part
SS = 5	CP = 160	    Accept term
SS = 5	CP = 160	    Match  |
SS = 5	CP = 160	    Reject |
SS = 4	CP = 160	  Accept declaration
SS = 4	CP = 160	  Deduce end_op
SS = 5	CP = 160	    Match  ;
SS = 5	CP = 160	    Accept ;
SS = 4	CP = 161	  Accept end_op
SS = 3	CP = 161	Accept statement
SS = 3	CP = 161	Deduce statement
SS = 4	CP = 161	  Deduce non_terminal_symbol
SS = 4	CP = 161	    Match  id
SS = 4	CP = 161	    Accept id
SS = 4	CP = 162	  Accept non_terminal_symbol
SS = 4	CP = 162	  Deduce assign_op
SS = 5	CP = 162	    Match  ::=
SS = 5	CP = 162	    Accept ::=
SS = 4	CP = 163	  Accept assign_op
SS = 4	CP = 163	  Deduce declaration
SS = 5	CP = 163	    Deduce term
SS = 6	CP = 163	      Deduce part
SS = 6	CP = 163	        Predict Failed in CONDITION
SS = 6	CP = 163	        Predict Failed in CONDITION
SS = 6	CP = 163	        Predict Failed in CONDITION
SS = 8	CP = 163	        Deduce simple_part
SS = 8	CP = 163	          Predict Failed in CONDITION
SS = 10	CP = 163	          Deduce terminal_symbol
SS = 11	CP = 163	            Match  slit
SS = 11	CP = 163	            Accept slit
SS = 10	CP = 164	          Accept terminal_symbol
SS = 8	CP = 164	        Accept simple_part
SS = 6	CP = 164	      Accept part
SS = 7	CP = 164	      Match  ,
SS = 7	CP = 164	      Reject ,
SS = 7	CP = 164	      Deduce part
SS = 7	CP = 164	        Predict Failed in CONDITION
SS = 7	CP = 164	        Predict Failed in CONDITION
SS = 7	CP = 164	        Predict Failed in CONDITION
SS = 9	CP = 164	        Deduce simple_part
SS = 11	CP = 164	          Deduce right_non_terminal_symbol
SS = 12	CP = 164	            Deduce non_terminal_symbol
SS = 12	CP = 164	              Match  id
SS = 12	CP = 164	              Accept id
SS = 12	CP = 165	            Accept non_terminal_symbol
SS = 11	CP = 165	          Accept right_non_terminal_symbol
SS = 9	CP = 165	        Accept simple_part
SS = 7	CP = 165	      Accept part
SS = 7	CP = 165	      Match  ,
SS = 7	CP = 165	      Reject ,
SS = 7	CP = 165	      Deduce part
SS = 9	CP = 165	        Deduce repeat_part
SS = 9	CP = 165	          Match  {
SS = 9	CP = 165	          Accept {
SS = 10	CP = 166	          Deduce declaration
SS = 11	CP = 166	            Deduce term
SS = 12	CP = 166	              Deduce part
SS = 12	CP = 166	                Predict Failed in CONDITION
SS = 12	CP = 166	                Predict Failed in CONDITION
SS = 12	CP = 166	                Predict Failed in CONDITION
SS = 14	CP = 166	                Deduce simple_part
SS = 14	CP = 166	                  Predict Failed in CONDITION
SS = 16	CP = 166	                  Deduce terminal_symbol
SS = 17	CP = 166	                    Match  slit
SS = 17	CP = 166	                    Accept slit
SS = 16	CP = 167	                  Accept terminal_symbol
SS = 14	CP = 167	                Accept simple_part
SS = 12	CP = 167	              Accept part
SS = 13	CP = 167	              Match  ,
SS = 13	CP = 167	              Reject ,
SS = 13	CP = 167	              Deduce part
SS = 13	CP = 167	                Predict Failed in CONDITION
SS = 13	CP = 167	                Predict Failed in CONDITION
SS = 13	CP = 167	                Predict Failed in CONDITION
SS = 15	CP = 167	                Deduce simple_part
SS = 17	CP = 167	                  Deduce right_non_terminal_symbol
SS = 18	CP = 167	                    Deduce non_terminal_symbol
SS = 18	CP = 167	                      Match  id
SS = 18	CP = 167	                      Accept id
SS = 18	CP = 168	                    Accept non_terminal_symbol
SS = 17	CP = 168	                  Accept right_non_terminal_symbol
SS = 15	CP = 168	                Accept simple_part
SS = 13	CP = 168	              Accept part
SS = 13	CP = 168	              Match  ,
SS = 13	CP = 168	              Reject ,
SS = 12	CP = 168	              Predict Failed: part
SS = 11	CP = 168	            Accept term
SS = 11	CP = 168	            Match  |
SS = 11	CP = 168	            Reject |
SS = 10	CP = 168	          Accept declaration
SS = 9	CP = 168	          Match  }
SS = 9	CP = 168	          Accept }
SS = 9	CP = 169	        Accept repeat_part
SS = 7	CP = 169	      Accept part
SS = 7	CP = 169	      Match  ,
SS = 7	CP = 169	      Reject ,
SS = 7	CP = 169	      Deduce part
SS = 7	CP = 169	        Predict Failed in CONDITION
SS = 7	CP = 169	        Predict Failed in CONDITION
SS = 7	CP = 169	        Predict Failed in CONDITION
SS = 9	CP = 169	        Deduce simple_part
SS = 9	CP = 169	          Predict Failed in CONDITION
SS = 11	CP = 169	          Deduce terminal_symbol
SS = 12	CP = 169	            Match  slit
SS = 12	CP = 169	            Accept slit
SS = 11	CP = 170	          Accept terminal_symbol
SS = 9	CP = 170	        Accept simple_part
SS = 7	CP = 170	      Accept part
SS = 7	CP = 170	      Match  ,
SS = 7	CP = 170	      Reject ,
SS = 6	CP = 170	      Predict Failed: part
SS = 5	CP = 170	    Accept term
SS = 5	CP = 170	    Match  |
SS = 5	CP = 170	    Reject |
SS = 4	CP = 170	  Accept declaration
SS = 4	CP = 170	  Deduce end_op
SS = 5	CP = 170	    Match  ;
SS = 5	CP = 170	    Accept ;
SS = 4	CP = 171	  Accept end_op
SS = 3	CP = 171	Accept statement
SS = 3	CP = 171	Deduce statement
SS = 4	CP = 171	  Deduce non_terminal_symbol
SS = 4	CP = 171	    Match  id
SS = 4	CP = 171	    Accept id
SS = 4	CP = 172	  Accept non_terminal_symbol
SS = 4	CP = 172	  Deduce assign_op
SS = 5	CP = 172	    Match  ::=
SS = 5	CP = 172	    Accept ::=
SS = 4	CP = 173	  Accept assign_op
SS = 4	CP = 173	  Deduce declaration
SS = 5	CP = 173	    Deduce term
SS = 6	CP = 173	      Deduce part
SS = 6	CP = 173	        Predict Failed in CONDITION
SS = 6	CP = 173	        Predict Failed in CONDITION
SS = 6	CP = 173	        Predict Failed in CONDITION
SS = 8	CP = 173	        Deduce simple_part
SS = 8	CP = 173	          Predict Failed in CONDITION
SS = 10	CP = 173	          Deduce terminal_symbol
SS = 10	CP = 173	            Predict Failed in CONDITION
SS = 10	CP = 173	            Predict Failed in CONDITION
SS = 11	CP = 173	            Match  token
SS = 11	CP = 173	            Accept token
SS = 10	CP = 174	          Accept terminal_symbol
SS = 8	CP = 174	        Accept simple_part
SS = 6	CP = 174	      Accept part
SS = 7	CP = 174	      Match  ,
SS = 7	CP = 174	      Reject ,
SS = 6	CP = 174	      Predict Failed: part
SS = 5	CP = 174	    Accept term
SS = 5	CP = 174	    Match  |
SS = 5	CP = 174	    Accept |
SS = 6	CP = 175	    Deduce term
SS = 7	CP = 175	      Deduce part
SS = 7	CP = 175	        Predict Failed in CONDITION
SS = 7	CP = 175	        Predict Failed in CONDITION
SS = 7	CP = 175	        Predict Failed in CONDITION
SS = 9	CP = 175	        Deduce simple_part
SS = 9	CP = 175	          Predict Failed in CONDITION
SS = 11	CP = 175	          Deduce terminal_symbol
SS = 12	CP = 175	            Match  slit
SS = 12	CP = 175	            Accept slit
SS = 11	CP = 176	          Accept terminal_symbol
SS = 9	CP = 176	        Accept simple_part
SS = 7	CP = 176	      Accept part
SS = 8	CP = 176	      Match  ,
SS = 8	CP = 176	      Reject ,
SS = 7	CP = 176	      Predict Failed: part
SS = 6	CP = 176	    Accept term
SS = 5	CP = 176	    Match  |
SS = 5	CP = 176	    Accept |
SS = 6	CP = 177	    Deduce term
SS = 7	CP = 177	      Deduce part
SS = 7	CP = 177	        Predict Failed in CONDITION
SS = 7	CP = 177	        Predict Failed in CONDITION
SS = 7	CP = 177	        Predict Failed in CONDITION
SS = 9	CP = 177	        Deduce simple_part
SS = 11	CP = 177	          Deduce right_non_terminal_symbol
SS = 12	CP = 177	            Deduce non_terminal_symbol
SS = 12	CP = 177	              Match  id
SS = 12	CP = 177	              Accept id
SS = 12	CP = 178	            Accept non_terminal_symbol
SS = 11	CP = 178	          Accept right_non_terminal_symbol
SS = 9	CP = 178	        Accept simple_part
SS = 7	CP = 178	      Accept part
SS = 8	CP = 178	      Match  ,
SS = 8	CP = 178	      Reject ,
SS = 7	CP = 178	      Predict Failed: part
SS = 6	CP = 178	    Accept term
SS = 5	CP = 178	    Match  |
SS = 5	CP = 178	    Reject |
SS = 4	CP = 178	  Accept declaration
SS = 4	CP = 178	  Deduce end_op
SS = 5	CP = 178	    Match  ;
SS = 5	CP = 178	    Accept ;
SS = 4	CP = 179	  Accept end_op
SS = 3	CP = 179	Accept statement
SS = 3	CP = 179	Deduce statement
SS = 4	CP = 179	  Deduce non_terminal_symbol
SS = 4	CP = 179	    Match  id
SS = 4	CP = 179	    Accept id
SS = 4	CP = 180	  Accept non_terminal_symbol
SS = 4	CP = 180	  Deduce assign_op
SS = 5	CP = 180	    Match  ::=
SS = 5	CP = 180	    Accept ::=
SS = 4	CP = 181	  Accept assign_op
SS = 4	CP = 181	  Deduce declaration
SS = 5	CP = 181	    Deduce term
SS = 6	CP = 181	      Deduce part
SS = 6	CP = 181	        Predict Failed in CONDITION
SS = 6	CP = 181	        Predict Failed in CONDITION
SS = 6	CP = 181	        Predict Failed in CONDITION
SS = 8	CP = 181	        Deduce simple_part
SS = 8	CP = 181	          Predict Failed in CONDITION
SS = 10	CP = 181	          Deduce terminal_symbol
SS = 10	CP = 181	            Predict Failed in CONDITION
SS = 10	CP = 181	            Predict Failed in CONDITION
SS = 11	CP = 181	            Match  token
SS = 11	CP = 181	            Accept token
SS = 10	CP = 182	          Accept terminal_symbol
SS = 8	CP = 182	        Accept simple_part
SS = 6	CP = 182	      Accept part
SS = 7	CP = 182	      Match  ,
SS = 7	CP = 182	      Reject ,
SS = 7	CP = 182	      Deduce part
SS = 7	CP = 182	        Predict Failed in CONDITION
SS = 7	CP = 182	        Predict Failed in CONDITION
SS = 7	CP = 182	        Predict Failed in CONDITION
SS = 9	CP = 182	        Deduce simple_part
SS = 9	CP = 182	          Predict Failed in CONDITION
SS = 11	CP = 182	          Deduce terminal_symbol
SS = 12	CP = 182	            Match  slit
SS = 12	CP = 182	            Accept slit
SS = 11	CP = 183	          Accept terminal_symbol
SS = 9	CP = 183	        Accept simple_part
SS = 7	CP = 183	      Accept part
SS = 7	CP = 183	      Match  ,
SS = 7	CP = 183	      Reject ,
SS = 7	CP = 183	      Deduce part
SS = 7	CP = 183	        Predict Failed in CONDITION
SS = 7	CP = 183	        Predict Failed in CONDITION
SS = 7	CP = 183	        Predict Failed in CONDITION
SS = 9	CP = 183	        Deduce simple_part
SS = 11	CP = 183	          Deduce right_non_terminal_symbol
SS = 12	CP = 183	            Deduce non_terminal_symbol
SS = 12	CP = 183	              Match  id
SS = 12	CP = 183	              Accept id
SS = 12	CP = 184	            Accept non_terminal_symbol
SS = 11	CP = 184	          Accept right_non_terminal_symbol
SS = 9	CP = 184	        Accept simple_part
SS = 7	CP = 184	      Accept part
SS = 7	CP = 184	      Match  ,
SS = 7	CP = 184	      Reject ,
SS = 7	CP = 184	      Deduce part
SS = 7	CP = 184	        Predict Failed in CONDITION
SS = 7	CP = 184	        Predict Failed in CONDITION
SS = 9	CP = 184	        Deduce alternative_part
SS = 9	CP = 184	          Match  [
SS = 9	CP = 184	          Accept [
SS = 10	CP = 185	          Deduce declaration
SS = 11	CP = 185	            Deduce term
SS = 12	CP = 185	              Deduce part
SS = 12	CP = 185	                Predict Failed in CONDITION
SS = 12	CP = 185	                Predict Failed in CONDITION
SS = 12	CP = 185	                Predict Failed in CONDITION
SS = 14	CP = 185	                Deduce simple_part
SS = 14	CP = 185	                  Predict Failed in CONDITION
SS = 16	CP = 185	                  Deduce terminal_symbol
SS = 17	CP = 185	                    Match  slit
SS = 17	CP = 185	                    Accept slit
SS = 16	CP = 186	                  Accept terminal_symbol
SS = 14	CP = 186	                Accept simple_part
SS = 12	CP = 186	              Accept part
SS = 13	CP = 186	              Match  ,
SS = 13	CP = 186	              Reject ,
SS = 13	CP = 186	              Deduce part
SS = 13	CP = 186	                Predict Failed in CONDITION
SS = 13	CP = 186	                Predict Failed in CONDITION
SS = 13	CP = 186	                Predict Failed in CONDITION
SS = 15	CP = 186	                Deduce simple_part
SS = 17	CP = 186	                  Deduce right_non_terminal_symbol
SS = 18	CP = 186	                    Deduce non_terminal_symbol
SS = 18	CP = 186	                      Match  id
SS = 18	CP = 186	                      Accept id
SS = 18	CP = 187	                    Accept non_terminal_symbol
SS = 17	CP = 187	                  Accept right_non_terminal_symbol
SS = 15	CP = 187	                Accept simple_part
SS = 13	CP = 187	              Accept part
SS = 13	CP = 187	              Match  ,
SS = 13	CP = 187	              Reject ,
SS = 12	CP = 187	              Predict Failed: part
SS = 11	CP = 187	            Accept term
SS = 11	CP = 187	            Match  |
SS = 11	CP = 187	            Reject |
SS = 10	CP = 187	          Accept declaration
SS = 9	CP = 187	          Match  ]
SS = 9	CP = 187	          Accept ]
SS = 9	CP = 188	        Accept alternative_part
SS = 7	CP = 188	      Accept part
SS = 7	CP = 188	      Match  ,
SS = 7	CP = 188	      Reject ,
SS = 6	CP = 188	      Predict Failed: part
SS = 5	CP = 188	    Accept term
SS = 5	CP = 188	    Match  |
SS = 5	CP = 188	    Reject |
SS = 4	CP = 188	  Accept declaration
SS = 4	CP = 188	  Deduce end_op
SS = 5	CP = 188	    Match  ;
SS = 5	CP = 188	    Accept ;
SS = 4	CP = 189	  Accept end_op
SS = 3	CP = 189	Accept statement
SS = 3	CP = 189	Deduce statement
SS = 4	CP = 189	  Deduce non_terminal_symbol
SS = 4	CP = 189	    Match  id
SS = 4	CP = 189	    Accept id
SS = 4	CP = 190	  Accept non_terminal_symbol
SS = 4	CP = 190	  Deduce assign_op
SS = 5	CP = 190	    Match  ::=
SS = 5	CP = 190	    Accept ::=
SS = 4	CP = 191	  Accept assign_op
SS = 4	CP = 191	  Deduce declaration
SS = 5	CP = 191	    Deduce term
SS = 6	CP = 191	      Deduce part
SS = 6	CP = 191	        Predict Failed in CONDITION
SS = 6	CP = 191	        Predict Failed in CONDITION
SS = 6	CP = 191	        Predict Failed in CONDITION
SS = 8	CP = 191	        Deduce simple_part
SS = 8	CP = 191	          Predict Failed in CONDITION
SS = 10	CP = 191	          Deduce terminal_symbol
SS = 11	CP = 191	            Match  slit
SS = 11	CP = 191	            Accept slit
SS = 10	CP = 192	          Accept terminal_symbol
SS = 8	CP = 192	        Accept simple_part
SS = 6	CP = 192	      Accept part
SS = 7	CP = 192	      Match  ,
SS = 7	CP = 192	      Reject ,
SS = 7	CP = 192	      Deduce part
SS = 7	CP = 192	        Predict Failed in CONDITION
SS = 7	CP = 192	        Predict Failed in CONDITION
SS = 7	CP = 192	        Predict Failed in CONDITION
SS = 9	CP = 192	        Deduce simple_part
SS = 9	CP = 192	          Predict Failed in CONDITION
SS = 11	CP = 192	          Deduce terminal_symbol
SS = 11	CP = 192	            Predict Failed in CONDITION
SS = 11	CP = 192	            Predict Failed in CONDITION
SS = 12	CP = 192	            Match  token
SS = 12	CP = 192	            Accept token
SS = 11	CP = 193	          Accept terminal_symbol
SS = 9	CP = 193	        Accept simple_part
SS = 7	CP = 193	      Accept part
SS = 7	CP = 193	      Match  ,
SS = 7	CP = 193	      Reject ,
SS = 7	CP = 193	      Deduce part
SS = 7	CP = 193	        Predict Failed in CONDITION
SS = 7	CP = 193	        Predict Failed in CONDITION
SS = 7	CP = 193	        Predict Failed in CONDITION
SS = 9	CP = 193	        Deduce simple_part
SS = 11	CP = 193	          Deduce right_non_terminal_symbol
SS = 12	CP = 193	            Deduce non_terminal_symbol
SS = 12	CP = 193	              Match  id
SS = 12	CP = 193	              Accept id
SS = 12	CP = 194	            Accept non_terminal_symbol
SS = 11	CP = 194	          Accept right_non_terminal_symbol
SS = 9	CP = 194	        Accept simple_part
SS = 7	CP = 194	      Accept part
SS = 7	CP = 194	      Match  ,
SS = 7	CP = 194	      Reject ,
SS = 7	CP = 194	      Deduce part
SS = 7	CP = 194	        Predict Failed in CONDITION
SS = 7	CP = 194	        Predict Failed in CONDITION
SS = 7	CP = 194	        Predict Failed in CONDITION
SS = 9	CP = 194	        Deduce simple_part
SS = 9	CP = 194	          Predict Failed in CONDITION
SS = 11	CP = 194	          Deduce terminal_symbol
SS = 12	CP = 194	            Match  slit
SS = 12	CP = 194	            Accept slit
SS = 11	CP = 195	          Accept terminal_symbol
SS = 9	CP = 195	        Accept simple_part
SS = 7	CP = 195	      Accept part
SS = 7	CP = 195	      Match  ,
SS = 7	CP = 195	      Reject ,
SS = 7	CP = 195	      Deduce part
SS = 7	CP = 195	        Predict Failed in CONDITION
SS = 7	CP = 195	        Predict Failed in CONDITION
SS = 7	CP = 195	        Predict Failed in CONDITION
SS = 9	CP = 195	        Deduce simple_part
SS = 9	CP = 195	          Predict Failed in CONDITION
SS = 11	CP = 195	          Deduce terminal_symbol
SS = 11	CP = 195	            Predict Failed in CONDITION
SS = 11	CP = 195	            Predict Failed in CONDITION
SS = 12	CP = 195	            Match  token
SS = 12	CP = 195	            Accept token
SS = 11	CP = 196	          Accept terminal_symbol
SS = 9	CP = 196	        Accept simple_part
SS = 7	CP = 196	      Accept part
SS = 7	CP = 196	      Match  ,
SS = 7	CP = 196	      Reject ,
SS = 6	CP = 196	      Predict Failed: part
SS = 5	CP = 196	    Accept term
SS = 5	CP = 196	    Match  |
SS = 5	CP = 196	    Reject |
SS = 4	CP = 196	  Accept declaration
SS = 4	CP = 196	  Deduce end_op
SS = 5	CP = 196	    Match  ;
SS = 5	CP = 196	    Accept ;
SS = 4	CP = 197	  Accept end_op
SS = 3	CP = 197	Accept statement
SS = 3	CP = 197	Deduce statement
SS = 4	CP = 197	  Deduce non_terminal_symbol
SS = 4	CP = 197	    Match  id
SS = 4	CP = 197	    Accept id
SS = 4	CP = 198	  Accept non_terminal_symbol
SS = 4	CP = 198	  Deduce assign_op
SS = 5	CP = 198	    Match  ::=
SS = 5	CP = 198	    Accept ::=
SS = 4	CP = 199	  Accept assign_op
SS = 4	CP = 199	  Deduce declaration
SS = 5	CP = 199	    Deduce term
SS = 6	CP = 199	      Deduce part
SS = 6	CP = 199	        Predict Failed in CONDITION
SS = 6	CP = 199	        Predict Failed in CONDITION
SS = 6	CP = 199	        Predict Failed in CONDITION
SS = 8	CP = 199	        Deduce simple_part
SS = 8	CP = 199	          Predict Failed in CONDITION
SS = 10	CP = 199	          Deduce terminal_symbol
SS = 11	CP = 199	            Match  slit
SS = 11	CP = 199	            Accept slit
SS = 10	CP = 200	          Accept terminal_symbol
SS = 8	CP = 200	        Accept simple_part
SS = 6	CP = 200	      Accept part
SS = 7	CP = 200	      Match  ,
SS = 7	CP = 200	      Reject ,
SS = 7	CP = 200	      Deduce part
SS = 7	CP = 200	        Predict Failed in CONDITION
SS = 7	CP = 200	        Predict Failed in CONDITION
SS = 7	CP = 200	        Predict Failed in CONDITION
SS = 9	CP = 200	        Deduce simple_part
SS = 9	CP = 200	          Predict Failed in CONDITION
SS = 11	CP = 200	          Deduce terminal_symbol
SS = 11	CP = 200	            Predict Failed in CONDITION
SS = 11	CP = 200	            Predict Failed in CONDITION
SS = 12	CP = 200	            Match  token
SS = 12	CP = 200	            Accept token
SS = 11	CP = 201	          Accept terminal_symbol
SS = 9	CP = 201	        Accept simple_part
SS = 7	CP = 201	      Accept part
SS = 7	CP = 201	      Match  ,
SS = 7	CP = 201	      Reject ,
SS = 7	CP = 201	      Deduce part
SS = 7	CP = 201	        Predict Failed in CONDITION
SS = 7	CP = 201	        Predict Failed in CONDITION
SS = 7	CP = 201	        Predict Failed in CONDITION
SS = 9	CP = 201	        Deduce simple_part
SS = 9	CP = 201	          Predict Failed in CONDITION
SS = 11	CP = 201	          Deduce terminal_symbol
SS = 11	CP = 201	            Predict Failed in CONDITION
SS = 11	CP = 201	            Predict Failed in CONDITION
SS = 12	CP = 201	            Match  token
SS = 12	CP = 201	            Accept token
SS = 11	CP = 202	          Accept terminal_symbol
SS = 9	CP = 202	        Accept simple_part
SS = 7	CP = 202	      Accept part
SS = 7	CP = 202	      Match  ,
SS = 7	CP = 202	      Reject ,
SS = 7	CP = 202	      Deduce part
SS = 7	CP = 202	        Predict Failed in CONDITION
SS = 7	CP = 202	        Predict Failed in CONDITION
SS = 7	CP = 202	        Predict Failed in CONDITION
SS = 9	CP = 202	        Deduce simple_part
SS = 11	CP = 202	          Deduce right_non_terminal_symbol
SS = 12	CP = 202	            Deduce non_terminal_symbol
SS = 12	CP = 202	              Match  id
SS = 12	CP = 202	              Accept id
SS = 12	CP = 203	            Accept non_terminal_symbol
SS = 11	CP = 203	          Accept right_non_terminal_symbol
SS = 9	CP = 203	        Accept simple_part
SS = 7	CP = 203	      Accept part
SS = 7	CP = 203	      Match  ,
SS = 7	CP = 203	      Reject ,
SS = 7	CP = 203	      Deduce part
SS = 7	CP = 203	        Predict Failed in CONDITION
SS = 7	CP = 203	        Predict Failed in CONDITION
SS = 7	CP = 203	        Predict Failed in CONDITION
SS = 9	CP = 203	        Deduce simple_part
SS = 9	CP = 203	          Predict Failed in CONDITION
SS = 11	CP = 203	          Deduce terminal_symbol
SS = 12	CP = 203	            Match  slit
SS = 12	CP = 203	            Accept slit
SS = 11	CP = 204	          Accept terminal_symbol
SS = 9	CP = 204	        Accept simple_part
SS = 7	CP = 204	      Accept part
SS = 7	CP = 204	      Match  ,
SS = 7	CP = 204	      Reject ,
SS = 7	CP = 204	      Deduce part
SS = 7	CP = 204	        Predict Failed in CONDITION
SS = 7	CP = 204	        Predict Failed in CONDITION
SS = 7	CP = 204	        Predict Failed in CONDITION
SS = 9	CP = 204	        Deduce simple_part
SS = 9	CP = 204	          Predict Failed in CONDITION
SS = 11	CP = 204	          Deduce terminal_symbol
SS = 11	CP = 204	            Predict Failed in CONDITION
SS = 11	CP = 204	            Predict Failed in CONDITION
SS = 12	CP = 204	            Match  token
SS = 12	CP = 204	            Accept token
SS = 11	CP = 205	          Accept terminal_symbol
SS = 9	CP = 205	        Accept simple_part
SS = 7	CP = 205	      Accept part
SS = 7	CP = 205	      Match  ,
SS = 7	CP = 205	      Reject ,
SS = 6	CP = 205	      Predict Failed: part
SS = 5	CP = 205	    Accept term
SS = 5	CP = 205	    Match  |
SS = 5	CP = 205	    Reject |
SS = 4	CP = 205	  Accept declaration
SS = 4	CP = 205	  Deduce end_op
SS = 5	CP = 205	    Match  ;
SS = 5	CP = 205	    Accept ;
SS = 4	CP = 206	  Accept end_op
SS = 3	CP = 206	Accept statement
SS = 3	CP = 206	Deduce statement
SS = 4	CP = 206	  Deduce non_terminal_symbol
SS = 4	CP = 206	    Match  id
SS = 4	CP = 206	    Accept id
SS = 4	CP = 207	  Accept non_terminal_symbol
SS = 4	CP = 207	  Deduce assign_op
SS = 5	CP = 207	    Match  ::=
SS = 5	CP = 207	    Accept ::=
SS = 4	CP = 208	  Accept assign_op
SS = 4	CP = 208	  Deduce declaration
SS = 5	CP = 208	    Deduce term
SS = 6	CP = 208	      Deduce part
SS = 6	CP = 208	        Predict Failed in CONDITION
SS = 6	CP = 208	        Predict Failed in CONDITION
SS = 6	CP = 208	        Predict Failed in CONDITION
SS = 8	CP = 208	        Deduce simple_part
SS = 8	CP = 208	          Predict Failed in CONDITION
SS = 10	CP = 208	          Deduce terminal_symbol
SS = 11	CP = 208	            Match  slit
SS = 11	CP = 208	            Accept slit
SS = 10	CP = 209	          Accept terminal_symbol
SS = 8	CP = 209	        Accept simple_part
SS = 6	CP = 209	      Accept part
SS = 7	CP = 209	      Match  ,
SS = 7	CP = 209	      Reject ,
SS = 7	CP = 209	      Deduce part
SS = 7	CP = 209	        Predict Failed in CONDITION
SS = 7	CP = 209	        Predict Failed in CONDITION
SS = 7	CP = 209	        Predict Failed in CONDITION
SS = 9	CP = 209	        Deduce simple_part
SS = 11	CP = 209	          Deduce right_non_terminal_symbol
SS = 12	CP = 209	            Deduce non_terminal_symbol
SS = 12	CP = 209	              Match  id
SS = 12	CP = 209	              Accept id
SS = 12	CP = 210	            Accept non_terminal_symbol
SS = 11	CP = 210	          Accept right_non_terminal_symbol
SS = 9	CP = 210	        Accept simple_part
SS = 7	CP = 210	      Accept part
SS = 7	CP = 210	      Match  ,
SS = 7	CP = 210	      Reject ,
SS = 7	CP = 210	      Deduce part
SS = 7	CP = 210	        Predict Failed in CONDITION
SS = 7	CP = 210	        Predict Failed in CONDITION
SS = 7	CP = 210	        Predict Failed in CONDITION
SS = 9	CP = 210	        Deduce simple_part
SS = 11	CP = 210	          Deduce right_non_terminal_symbol
SS = 12	CP = 210	            Deduce non_terminal_symbol
SS = 12	CP = 210	              Match  id
SS = 12	CP = 210	              Accept id
SS = 12	CP = 211	            Accept non_terminal_symbol
SS = 11	CP = 211	          Accept right_non_terminal_symbol
SS = 9	CP = 211	        Accept simple_part
SS = 7	CP = 211	      Accept part
SS = 7	CP = 211	      Match  ,
SS = 7	CP = 211	      Reject ,
SS = 6	CP = 211	      Predict Failed: part
SS = 5	CP = 211	    Accept term
SS = 5	CP = 211	    Match  |
SS = 5	CP = 211	    Reject |
SS = 4	CP = 211	  Accept declaration
SS = 4	CP = 211	  Deduce end_op
SS = 5	CP = 211	    Match  ;
SS = 5	CP = 211	    Accept ;
SS = 4	CP = 212	  Accept end_op
SS = 3	CP = 212	Accept statement
SS = 3	CP = 212	Deduce statement
SS = 4	CP = 212	  Deduce non_terminal_symbol
SS = 4	CP = 212	    Match  id
SS = 4	CP = 212	    Accept id
SS = 4	CP = 213	  Accept non_terminal_symbol
SS = 4	CP = 213	  Deduce assign_op
SS = 5	CP = 213	    Match  ::=
SS = 5	CP = 213	    Accept ::=
SS = 4	CP = 214	  Accept assign_op
SS = 4	CP = 214	  Deduce declaration
SS = 5	CP = 214	    Deduce term
SS = 6	CP = 214	      Deduce part
SS = 6	CP = 214	        Predict Failed in CONDITION
SS = 6	CP = 214	        Predict Failed in CONDITION
SS = 6	CP = 214	        Predict Failed in CONDITION
SS = 8	CP = 214	        Deduce simple_part
SS = 10	CP = 214	          Deduce right_non_terminal_symbol
SS = 11	CP = 214	            Deduce non_terminal_symbol
SS = 11	CP = 214	              Match  id
SS = 11	CP = 214	              Accept id
SS = 11	CP = 215	            Accept non_terminal_symbol
SS = 10	CP = 215	          Accept right_non_terminal_symbol
SS = 8	CP = 215	        Accept simple_part
SS = 6	CP = 215	      Accept part
SS = 7	CP = 215	      Match  ,
SS = 7	CP = 215	      Reject ,
SS = 7	CP = 215	      Deduce part
SS = 7	CP = 215	        Predict Failed in CONDITION
SS = 7	CP = 215	        Predict Failed in CONDITION
SS = 9	CP = 215	        Deduce alternative_part
SS = 9	CP = 215	          Match  [
SS = 9	CP = 215	          Accept [
SS = 10	CP = 216	          Deduce declaration
SS = 11	CP = 216	            Deduce term
SS = 12	CP = 216	              Deduce part
SS = 12	CP = 216	                Predict Failed in CONDITION
SS = 12	CP = 216	                Predict Failed in CONDITION
SS = 12	CP = 216	                Predict Failed in CONDITION
SS = 14	CP = 216	                Deduce simple_part
SS = 14	CP = 216	                  Predict Failed in CONDITION
SS = 16	CP = 216	                  Deduce terminal_symbol
SS = 17	CP = 216	                    Match  slit
SS = 17	CP = 216	                    Accept slit
SS = 16	CP = 217	                  Accept terminal_symbol
SS = 14	CP = 217	                Accept simple_part
SS = 12	CP = 217	              Accept part
SS = 13	CP = 217	              Match  ,
SS = 13	CP = 217	              Reject ,
SS = 13	CP = 217	              Deduce part
SS = 13	CP = 217	                Predict Failed in CONDITION
SS = 13	CP = 217	                Predict Failed in CONDITION
SS = 13	CP = 217	                Predict Failed in CONDITION
SS = 15	CP = 217	                Deduce simple_part
SS = 17	CP = 217	                  Deduce right_non_terminal_symbol
SS = 18	CP = 217	                    Deduce non_terminal_symbol
SS = 18	CP = 217	                      Match  id
SS = 18	CP = 217	                      Accept id
SS = 18	CP = 218	                    Accept non_terminal_symbol
SS = 17	CP = 218	                  Accept right_non_terminal_symbol
SS = 15	CP = 218	                Accept simple_part
SS = 13	CP = 218	              Accept part
SS = 13	CP = 218	              Match  ,
SS = 13	CP = 218	              Reject ,
SS = 12	CP = 218	              Predict Failed: part
SS = 11	CP = 218	            Accept term
SS = 11	CP = 218	            Match  |
SS = 11	CP = 218	            Reject |
SS = 10	CP = 218	          Accept declaration
SS = 9	CP = 218	          Match  ]
SS = 9	CP = 218	          Accept ]
SS = 9	CP = 219	        Accept alternative_part
SS = 7	CP = 219	      Accept part
SS = 7	CP = 219	      Match  ,
SS = 7	CP = 219	      Reject ,
SS = 6	CP = 219	      Predict Failed: part
SS = 5	CP = 219	    Accept term
SS = 5	CP = 219	    Match  |
SS = 5	CP = 219	    Reject |
SS = 4	CP = 219	  Accept declaration
SS = 4	CP = 219	  Deduce end_op
SS = 5	CP = 219	    Match  ;
SS = 5	CP = 219	    Accept ;
SS = 4	CP = 220	  Accept end_op
SS = 3	CP = 220	Accept statement
SS = 3	CP = 220	Deduce statement
SS = 4	CP = 220	  Deduce non_terminal_symbol
SS = 4	CP = 220	    Match  id
SS = 4	CP = 220	    Accept id
SS = 4	CP = 221	  Accept non_terminal_symbol
SS = 4	CP = 221	  Deduce assign_op
SS = 5	CP = 221	    Match  ::=
SS = 5	CP = 221	    Accept ::=
SS = 4	CP = 222	  Accept assign_op
SS = 4	CP = 222	  Deduce declaration
SS = 5	CP = 222	    Deduce term
SS = 6	CP = 222	      Deduce part
SS = 6	CP = 222	        Predict Failed in CONDITION
SS = 6	CP = 222	        Predict Failed in CONDITION
SS = 6	CP = 222	        Predict Failed in CONDITION
SS = 8	CP = 222	        Deduce simple_part
SS = 8	CP = 222	          Predict Failed in CONDITION
SS = 10	CP = 222	          Deduce terminal_symbol
SS = 11	CP = 222	            Match  slit
SS = 11	CP = 222	            Accept slit
SS = 10	CP = 223	          Accept terminal_symbol
SS = 8	CP = 223	        Accept simple_part
SS = 6	CP = 223	      Accept part
SS = 7	CP = 223	      Match  ,
SS = 7	CP = 223	      Reject ,
SS = 7	CP = 223	      Deduce part
SS = 7	CP = 223	        Predict Failed in CONDITION
SS = 7	CP = 223	        Predict Failed in CONDITION
SS = 7	CP = 223	        Predict Failed in CONDITION
SS = 9	CP = 223	        Deduce simple_part
SS = 11	CP = 223	          Deduce right_non_terminal_symbol
SS = 12	CP = 223	            Deduce non_terminal_symbol
SS = 12	CP = 223	              Match  id
SS = 12	CP = 223	              Accept id
SS = 12	CP = 224	            Accept non_terminal_symbol
SS = 11	CP = 224	          Accept right_non_terminal_symbol
SS = 9	CP = 224	        Accept simple_part
SS = 7	CP = 224	      Accept part
SS = 7	CP = 224	      Match  ,
SS = 7	CP = 224	      Reject ,
SS = 7	CP = 224	      Deduce part
SS = 7	CP = 224	        Predict Failed in CONDITION
SS = 7	CP = 224	        Predict Failed in CONDITION
SS = 7	CP = 224	        Predict Failed in CONDITION
SS = 9	CP = 224	        Deduce simple_part
SS = 9	CP = 224	          Predict Failed in CONDITION
SS = 11	CP = 224	          Deduce terminal_symbol
SS = 11	CP = 224	            Predict Failed in CONDITION
SS = 11	CP = 224	            Predict Failed in CONDITION
SS = 12	CP = 224	            Match  token
SS = 12	CP = 224	            Accept token
SS = 11	CP = 225	          Accept terminal_symbol
SS = 9	CP = 225	        Accept simple_part
SS = 7	CP = 225	      Accept part
SS = 7	CP = 225	      Match  ,
SS = 7	CP = 225	      Reject ,
SS = 7	CP = 225	      Deduce part
SS = 7	CP = 225	        Predict Failed in CONDITION
SS = 7	CP = 225	        Predict Failed in CONDITION
SS = 7	CP = 225	        Predict Failed in CONDITION
SS = 9	CP = 225	        Deduce simple_part
SS = 11	CP = 225	          Deduce right_non_terminal_symbol
SS = 12	CP = 225	            Deduce non_terminal_symbol
SS = 12	CP = 225	              Match  id
SS = 12	CP = 225	              Accept id
SS = 12	CP = 226	            Accept non_terminal_symbol
SS = 11	CP = 226	          Accept right_non_terminal_symbol
SS = 9	CP = 226	        Accept simple_part
SS = 7	CP = 226	      Accept part
SS = 7	CP = 226	      Match  ,
SS = 7	CP = 226	      Reject ,
SS = 7	CP = 226	      Deduce part
SS = 9	CP = 226	        Deduce repeat_part
SS = 9	CP = 226	          Match  {
SS = 9	CP = 226	          Accept {
SS = 10	CP = 227	          Deduce declaration
SS = 11	CP = 227	            Deduce term
SS = 12	CP = 227	              Deduce part
SS = 12	CP = 227	                Predict Failed in CONDITION
SS = 12	CP = 227	                Predict Failed in CONDITION
SS = 12	CP = 227	                Predict Failed in CONDITION
SS = 14	CP = 227	                Deduce simple_part
SS = 16	CP = 227	                  Deduce right_non_terminal_symbol
SS = 17	CP = 227	                    Deduce non_terminal_symbol
SS = 17	CP = 227	                      Match  id
SS = 17	CP = 227	                      Accept id
SS = 17	CP = 228	                    Accept non_terminal_symbol
SS = 16	CP = 228	                  Accept right_non_terminal_symbol
SS = 14	CP = 228	                Accept simple_part
SS = 12	CP = 228	              Accept part
SS = 13	CP = 228	              Match  ,
SS = 13	CP = 228	              Reject ,
SS = 13	CP = 228	              Deduce part
SS = 13	CP = 228	                Predict Failed in CONDITION
SS = 13	CP = 228	                Predict Failed in CONDITION
SS = 13	CP = 228	                Predict Failed in CONDITION
SS = 15	CP = 228	                Deduce simple_part
SS = 17	CP = 228	                  Deduce right_non_terminal_symbol
SS = 18	CP = 228	                    Deduce non_terminal_symbol
SS = 18	CP = 228	                      Match  id
SS = 18	CP = 228	                      Accept id
SS = 18	CP = 229	                    Accept non_terminal_symbol
SS = 17	CP = 229	                  Accept right_non_terminal_symbol
SS = 15	CP = 229	                Accept simple_part
SS = 13	CP = 229	              Accept part
SS = 13	CP = 229	              Match  ,
SS = 13	CP = 229	              Reject ,
SS = 12	CP = 229	              Predict Failed: part
SS = 11	CP = 229	            Accept term
SS = 11	CP = 229	            Match  |
SS = 11	CP = 229	            Reject |
SS = 10	CP = 229	          Accept declaration
SS = 9	CP = 229	          Match  }
SS = 9	CP = 229	          Accept }
SS = 9	CP = 230	        Accept repeat_part
SS = 7	CP = 230	      Accept part
SS = 7	CP = 230	      Match  ,
SS = 7	CP = 230	      Reject ,
SS = 7	CP = 230	      Deduce part
SS = 7	CP = 230	        Predict Failed in CONDITION
SS = 7	CP = 230	        Predict Failed in CONDITION
SS = 7	CP = 230	        Predict Failed in CONDITION
SS = 9	CP = 230	        Deduce simple_part
SS = 9	CP = 230	          Predict Failed in CONDITION
SS = 11	CP = 230	          Deduce terminal_symbol
SS = 12	CP = 230	            Match  slit
SS = 12	CP = 230	            Accept slit
SS = 11	CP = 231	          Accept terminal_symbol
SS = 9	CP = 231	        Accept simple_part
SS = 7	CP = 231	      Accept part
SS = 7	CP = 231	      Match  ,
SS = 7	CP = 231	      Reject ,
SS = 7	CP = 231	      Deduce part
SS = 7	CP = 231	        Predict Failed in CONDITION
SS = 7	CP = 231	        Predict Failed in CONDITION
SS = 7	CP = 231	        Predict Failed in CONDITION
SS = 9	CP = 231	        Deduce simple_part
SS = 9	CP = 231	          Predict Failed in CONDITION
SS = 11	CP = 231	          Deduce terminal_symbol
SS = 11	CP = 231	            Predict Failed in CONDITION
SS = 11	CP = 231	            Predict Failed in CONDITION
SS = 12	CP = 231	            Match  token
SS = 12	CP = 231	            Accept token
SS = 11	CP = 232	          Accept terminal_symbol
SS = 9	CP = 232	        Accept simple_part
SS = 7	CP = 232	      Accept part
SS = 7	CP = 232	      Match  ,
SS = 7	CP = 232	      Reject ,
SS = 6	CP = 232	      Predict Failed: part
SS = 5	CP = 232	    Accept term
SS = 5	CP = 232	    Match  |
SS = 5	CP = 232	    Reject |
SS = 4	CP = 232	  Accept declaration
SS = 4	CP = 232	  Deduce end_op
SS = 5	CP = 232	    Match  ;
SS = 5	CP = 232	    Accept ;
SS = 4	CP = 233	  Accept end_op
SS = 3	CP = 233	Accept statement
SS = 3	CP = 233	Deduce statement
SS = 4	CP = 233	  Deduce non_terminal_symbol
SS = 4	CP = 233	    Match  id
SS = 4	CP = 233	    Accept id
SS = 4	CP = 234	  Accept non_terminal_symbol
SS = 4	CP = 234	  Deduce assign_op
SS = 5	CP = 234	    Match  ::=
SS = 5	CP = 234	    Accept ::=
SS = 4	CP = 235	  Accept assign_op
SS = 4	CP = 235	  Deduce declaration
SS = 5	CP = 235	    Deduce term
SS = 6	CP = 235	      Deduce part
SS = 6	CP = 235	        Predict Failed in CONDITION
SS = 6	CP = 235	        Predict Failed in CONDITION
SS = 6	CP = 235	        Predict Failed in CONDITION
SS = 8	CP = 235	        Deduce simple_part
SS = 8	CP = 235	          Predict Failed in CONDITION
SS = 10	CP = 235	          Deduce terminal_symbol
SS = 11	CP = 235	            Match  slit
SS = 11	CP = 235	            Accept slit
SS = 10	CP = 236	          Accept terminal_symbol
SS = 8	CP = 236	        Accept simple_part
SS = 6	CP = 236	      Accept part
SS = 7	CP = 236	      Match  ,
SS = 7	CP = 236	      Reject ,
SS = 7	CP = 236	      Deduce part
SS = 7	CP = 236	        Predict Failed in CONDITION
SS = 7	CP = 236	        Predict Failed in CONDITION
SS = 9	CP = 236	        Deduce alternative_part
SS = 9	CP = 236	          Match  [
SS = 9	CP = 236	          Accept [
SS = 10	CP = 237	          Deduce declaration
SS = 11	CP = 237	            Deduce term
SS = 12	CP = 237	              Deduce part
SS = 12	CP = 237	                Predict Failed in CONDITION
SS = 12	CP = 237	                Predict Failed in CONDITION
SS = 12	CP = 237	                Predict Failed in CONDITION
SS = 14	CP = 237	                Deduce simple_part
SS = 14	CP = 237	                  Predict Failed in CONDITION
SS = 16	CP = 237	                  Deduce terminal_symbol
SS = 17	CP = 237	                    Match  slit
SS = 17	CP = 237	                    Accept slit
SS = 16	CP = 238	                  Accept terminal_symbol
SS = 14	CP = 238	                Accept simple_part
SS = 12	CP = 238	              Accept part
SS = 13	CP = 238	              Match  ,
SS = 13	CP = 238	              Reject ,
SS = 13	CP = 238	              Deduce part
SS = 13	CP = 238	                Predict Failed in CONDITION
SS = 13	CP = 238	                Predict Failed in CONDITION
SS = 13	CP = 238	                Predict Failed in CONDITION
SS = 15	CP = 238	                Deduce simple_part
SS = 17	CP = 238	                  Deduce right_non_terminal_symbol
SS = 18	CP = 238	                    Deduce non_terminal_symbol
SS = 18	CP = 238	                      Match  id
SS = 18	CP = 238	                      Accept id
SS = 18	CP = 239	                    Accept non_terminal_symbol
SS = 17	CP = 239	                  Accept right_non_terminal_symbol
SS = 15	CP = 239	                Accept simple_part
SS = 13	CP = 239	              Accept part
SS = 13	CP = 239	              Match  ,
SS = 13	CP = 239	              Reject ,
SS = 12	CP = 239	              Predict Failed: part
SS = 11	CP = 239	            Accept term
SS = 11	CP = 239	            Match  |
SS = 11	CP = 239	            Reject |
SS = 10	CP = 239	          Accept declaration
SS = 9	CP = 239	          Match  ]
SS = 9	CP = 239	          Accept ]
SS = 9	CP = 240	        Accept alternative_part
SS = 7	CP = 240	      Accept part
SS = 7	CP = 240	      Match  ,
SS = 7	CP = 240	      Reject ,
SS = 7	CP = 240	      Deduce part
SS = 7	CP = 240	        Predict Failed in CONDITION
SS = 7	CP = 240	        Predict Failed in CONDITION
SS = 7	CP = 240	        Predict Failed in CONDITION
SS = 9	CP = 240	        Deduce simple_part
SS = 9	CP = 240	          Predict Failed in CONDITION
SS = 11	CP = 240	          Deduce terminal_symbol
SS = 11	CP = 240	            Predict Failed in CONDITION
SS = 11	CP = 240	            Predict Failed in CONDITION
SS = 12	CP = 240	            Match  token
SS = 12	CP = 240	            Accept token
SS = 11	CP = 241	          Accept terminal_symbol
SS = 9	CP = 241	        Accept simple_part
SS = 7	CP = 241	      Accept part
SS = 7	CP = 241	      Match  ,
SS = 7	CP = 241	      Reject ,
SS = 6	CP = 241	      Predict Failed: part
SS = 5	CP = 241	    Accept term
SS = 5	CP = 241	    Match  |
SS = 5	CP = 241	    Reject |
SS = 4	CP = 241	  Accept declaration
SS = 4	CP = 241	  Deduce end_op
SS = 5	CP = 241	    Match  ;
SS = 5	CP = 241	    Accept ;
SS = 4	CP = 242	  Accept end_op
SS = 3	CP = 242	Accept statement
SS = 3	CP = 242	Deduce statement
SS = 4	CP = 242	  Deduce non_terminal_symbol
SS = 4	CP = 242	    Match  id
SS = 4	CP = 242	    Accept id
SS = 4	CP = 243	  Accept non_terminal_symbol
SS = 4	CP = 243	  Deduce assign_op
SS = 5	CP = 243	    Match  ::=
SS = 5	CP = 243	    Accept ::=
SS = 4	CP = 244	  Accept assign_op
SS = 4	CP = 244	  Deduce declaration
SS = 5	CP = 244	    Deduce term
SS = 6	CP = 244	      Deduce part
SS = 6	CP = 244	        Predict Failed in CONDITION
SS = 6	CP = 244	        Predict Failed in CONDITION
SS = 6	CP = 244	        Predict Failed in CONDITION
SS = 8	CP = 244	        Deduce simple_part
SS = 8	CP = 244	          Predict Failed in CONDITION
SS = 10	CP = 244	          Deduce terminal_symbol
SS = 11	CP = 244	            Match  slit
SS = 11	CP = 244	            Accept slit
SS = 10	CP = 245	          Accept terminal_symbol
SS = 8	CP = 245	        Accept simple_part
SS = 6	CP = 245	      Accept part
SS = 7	CP = 245	      Match  ,
SS = 7	CP = 245	      Reject ,
SS = 7	CP = 245	      Deduce part
SS = 7	CP = 245	        Predict Failed in CONDITION
SS = 7	CP = 245	        Predict Failed in CONDITION
SS = 7	CP = 245	        Predict Failed in CONDITION
SS = 9	CP = 245	        Deduce simple_part
SS = 11	CP = 245	          Deduce right_non_terminal_symbol
SS = 12	CP = 245	            Deduce non_terminal_symbol
SS = 12	CP = 245	              Match  id
SS = 12	CP = 245	              Accept id
SS = 12	CP = 246	            Accept non_terminal_symbol
SS = 11	CP = 246	          Accept right_non_terminal_symbol
SS = 9	CP = 246	        Accept simple_part
SS = 7	CP = 246	      Accept part
SS = 7	CP = 246	      Match  ,
SS = 7	CP = 246	      Reject ,
SS = 7	CP = 246	      Deduce part
SS = 7	CP = 246	        Predict Failed in CONDITION
SS = 7	CP = 246	        Predict Failed in CONDITION
SS = 7	CP = 246	        Predict Failed in CONDITION
SS = 9	CP = 246	        Deduce simple_part
SS = 9	CP = 246	          Predict Failed in CONDITION
SS = 11	CP = 246	          Deduce terminal_symbol
SS = 11	CP = 246	            Predict Failed in CONDITION
SS = 11	CP = 246	            Predict Failed in CONDITION
SS = 12	CP = 246	            Match  token
SS = 12	CP = 246	            Accept token
SS = 11	CP = 247	          Accept terminal_symbol
SS = 9	CP = 247	        Accept simple_part
SS = 7	CP = 247	      Accept part
SS = 7	CP = 247	      Match  ,
SS = 7	CP = 247	      Reject ,
SS = 7	CP = 247	      Deduce part
SS = 7	CP = 247	        Predict Failed in CONDITION
SS = 7	CP = 247	        Predict Failed in CONDITION
SS = 7	CP = 247	        Predict Failed in CONDITION
SS = 9	CP = 247	        Deduce simple_part
SS = 11	CP = 247	          Deduce right_non_terminal_symbol
SS = 12	CP = 247	            Deduce non_terminal_symbol
SS = 12	CP = 247	              Match  id
SS = 12	CP = 247	              Accept id
SS = 12	CP = 248	            Accept non_terminal_symbol
SS = 11	CP = 248	          Accept right_non_terminal_symbol
SS = 9	CP = 248	        Accept simple_part
SS = 7	CP = 248	      Accept part
SS = 7	CP = 248	      Match  ,
SS = 7	CP = 248	      Reject ,
SS = 7	CP = 248	      Deduce part
SS = 7	CP = 248	        Predict Failed in CONDITION
SS = 7	CP = 248	        Predict Failed in CONDITION
SS = 7	CP = 248	        Predict Failed in CONDITION
SS = 9	CP = 248	        Deduce simple_part
SS = 9	CP = 248	          Predict Failed in CONDITION
SS = 11	CP = 248	          Deduce terminal_symbol
SS = 12	CP = 248	            Match  slit
SS = 12	CP = 248	            Accept slit
SS = 11	CP = 249	          Accept terminal_symbol
SS = 9	CP = 249	        Accept simple_part
SS = 7	CP = 249	      Accept part
SS = 7	CP = 249	      Match  ,
SS = 7	CP = 249	      Reject ,
SS = 7	CP = 249	      Deduce part
SS = 7	CP = 249	        Predict Failed in CONDITION
SS = 7	CP = 249	        Predict Failed in CONDITION
SS = 7	CP = 249	        Predict Failed in CONDITION
SS = 9	CP = 249	        Deduce simple_part
SS = 9	CP = 249	          Predict Failed in CONDITION
SS = 11	CP = 249	          Deduce terminal_symbol
SS = 11	CP = 249	            Predict Failed in CONDITION
SS = 11	CP = 249	            Predict Failed in CONDITION
SS = 12	CP = 249	            Match  token
SS = 12	CP = 249	            Accept token
SS = 11	CP = 250	          Accept terminal_symbol
SS = 9	CP = 250	        Accept simple_part
SS = 7	CP = 250	      Accept part
SS = 7	CP = 250	      Match  ,
SS = 7	CP = 250	      Reject ,
SS = 6	CP = 250	      Predict Failed: part
SS = 5	CP = 250	    Accept term
SS = 5	CP = 250	    Match  |
SS = 5	CP = 250	    Reject |
SS = 4	CP = 250	  Accept declaration
SS = 4	CP = 250	  Deduce end_op
SS = 5	CP = 250	    Match  ;
SS = 5	CP = 250	    Accept ;
SS = 4	CP = 251	  Accept end_op
SS = 3	CP = 251	Accept statement
SS = 3	CP = 251	Deduce statement
SS = 4	CP = 251	  Deduce non_terminal_symbol
SS = 4	CP = 251	    Match  id
SS = 4	CP = 251	    Accept id
SS = 4	CP = 252	  Accept non_terminal_symbol
SS = 4	CP = 252	  Deduce assign_op
SS = 5	CP = 252	    Match  ::=
SS = 5	CP = 252	    Accept ::=
SS = 4	CP = 253	  Accept assign_op
SS = 4	CP = 253	  Deduce declaration
SS = 5	CP = 253	    Deduce term
SS = 6	CP = 253	      Deduce part
SS = 8	CP = 253	        Deduce repeat_part
SS = 8	CP = 253	          Match  {
SS = 8	CP = 253	          Accept {
SS = 9	CP = 254	          Deduce declaration
SS = 10	CP = 254	            Deduce term
SS = 11	CP = 254	              Deduce part
SS = 11	CP = 254	                Predict Failed in CONDITION
SS = 11	CP = 254	                Predict Failed in CONDITION
SS = 11	CP = 254	                Predict Failed in CONDITION
SS = 13	CP = 254	                Deduce simple_part
SS = 15	CP = 254	                  Deduce right_non_terminal_symbol
SS = 16	CP = 254	                    Deduce non_terminal_symbol
SS = 16	CP = 254	                      Match  id
SS = 16	CP = 254	                      Accept id
SS = 16	CP = 255	                    Accept non_terminal_symbol
SS = 15	CP = 255	                  Accept right_non_terminal_symbol
SS = 13	CP = 255	                Accept simple_part
SS = 11	CP = 255	              Accept part
SS = 12	CP = 255	              Match  ,
SS = 12	CP = 255	              Reject ,
SS = 11	CP = 255	              Predict Failed: part
SS = 10	CP = 255	            Accept term
SS = 10	CP = 255	            Match  |
SS = 10	CP = 255	            Accept |
SS = 11	CP = 256	            Deduce term
SS = 12	CP = 256	              Deduce part
SS = 12	CP = 256	                Predict Failed in CONDITION
SS = 12	CP = 256	                Predict Failed in CONDITION
SS = 12	CP = 256	                Predict Failed in CONDITION
SS = 14	CP = 256	                Deduce simple_part
SS = 16	CP = 256	                  Deduce right_non_terminal_symbol
SS = 17	CP = 256	                    Deduce non_terminal_symbol
SS = 17	CP = 256	                      Match  id
SS = 17	CP = 256	                      Accept id
SS = 17	CP = 257	                    Accept non_terminal_symbol
SS = 16	CP = 257	                  Accept right_non_terminal_symbol
SS = 14	CP = 257	                Accept simple_part
SS = 12	CP = 257	              Accept part
SS = 13	CP = 257	              Match  ,
SS = 13	CP = 257	              Reject ,
SS = 12	CP = 257	              Predict Failed: part
SS = 11	CP = 257	            Accept term
SS = 10	CP = 257	            Match  |
SS = 10	CP = 257	            Reject |
SS = 9	CP = 257	          Accept declaration
SS = 8	CP = 257	          Match  }
SS = 8	CP = 257	          Accept }
SS = 8	CP = 258	        Accept repeat_part
SS = 6	CP = 258	      Accept part
SS = 7	CP = 258	      Match  ,
SS = 7	CP = 258	      Reject ,
SS = 7	CP = 258	      Deduce part
SS = 9	CP = 258	        Deduce repeat_part
SS = 9	CP = 258	          Match  {
SS = 9	CP = 258	          Accept {
SS = 10	CP = 259	          Deduce declaration
SS = 11	CP = 259	            Deduce term
SS = 12	CP = 259	              Deduce part
SS = 12	CP = 259	                Predict Failed in CONDITION
SS = 12	CP = 259	                Predict Failed in CONDITION
SS = 12	CP = 259	                Predict Failed in CONDITION
SS = 14	CP = 259	                Deduce simple_part
SS = 14	CP = 259	                  Predict Failed in CONDITION
SS = 16	CP = 259	                  Deduce terminal_symbol
SS = 16	CP = 259	                    Predict Failed in CONDITION
SS = 16	CP = 259	                    Predict Failed in CONDITION
SS = 17	CP = 259	                    Match  token
SS = 17	CP = 259	                    Accept token
SS = 16	CP = 260	                  Accept terminal_symbol
SS = 14	CP = 260	                Accept simple_part
SS = 12	CP = 260	              Accept part
SS = 13	CP = 260	              Match  ,
SS = 13	CP = 260	              Reject ,
SS = 12	CP = 260	              Predict Failed: part
SS = 11	CP = 260	            Accept term
SS = 11	CP = 260	            Match  |
SS = 11	CP = 260	            Reject |
SS = 10	CP = 260	          Accept declaration
SS = 9	CP = 260	          Match  }
SS = 9	CP = 260	          Accept }
SS = 9	CP = 261	        Accept repeat_part
SS = 7	CP = 261	      Accept part
SS = 7	CP = 261	      Match  ,
SS = 7	CP = 261	      Reject ,
SS = 6	CP = 261	      Predict Failed: part
SS = 5	CP = 261	    Accept term
SS = 5	CP = 261	    Match  |
SS = 5	CP = 261	    Reject |
SS = 4	CP = 261	  Accept declaration
SS = 4	CP = 261	  Deduce end_op
SS = 5	CP = 261	    Match  ;
SS = 5	CP = 261	    Accept ;
SS = 4	CP = 262	  Accept end_op
SS = 3	CP = 262	Accept statement
SS = 3	CP = 262	Deduce statement
SS = 4	CP = 262	  Deduce non_terminal_symbol
SS = 4	CP = 262	    Match  id
SS = 4	CP = 262	    Accept id
SS = 4	CP = 263	  Accept non_terminal_symbol
SS = 4	CP = 263	  Deduce assign_op
SS = 5	CP = 263	    Match  ::=
SS = 5	CP = 263	    Accept ::=
SS = 4	CP = 264	  Accept assign_op
SS = 4	CP = 264	  Deduce declaration
SS = 5	CP = 264	    Deduce term
SS = 6	CP = 264	      Deduce part
SS = 6	CP = 264	        Predict Failed in CONDITION
SS = 6	CP = 264	        Predict Failed in CONDITION
SS = 6	CP = 264	        Predict Failed in CONDITION
SS = 8	CP = 264	        Deduce simple_part
SS = 8	CP = 264	          Predict Failed in CONDITION
SS = 10	CP = 264	          Deduce terminal_symbol
SS = 11	CP = 264	            Match  slit
SS = 11	CP = 264	            Accept slit
SS = 10	CP = 265	          Accept terminal_symbol
SS = 8	CP = 265	        Accept simple_part
SS = 6	CP = 265	      Accept part
SS = 7	CP = 265	      Match  ,
SS = 7	CP = 265	      Reject ,
SS = 7	CP = 265	      Deduce part
SS = 7	CP = 265	        Predict Failed in CONDITION
SS = 7	CP = 265	        Predict Failed in CONDITION
SS = 7	CP = 265	        Predict Failed in CONDITION
SS = 9	CP = 265	        Deduce simple_part
SS = 11	CP = 265	          Deduce right_non_terminal_symbol
SS = 12	CP = 265	            Deduce non_terminal_symbol
SS = 12	CP = 265	              Match  id
SS = 12	CP = 265	              Accept id
SS = 12	CP = 266	            Accept non_terminal_symbol
SS = 11	CP = 266	          Accept right_non_terminal_symbol
SS = 9	CP = 266	        Accept simple_part
SS = 7	CP = 266	      Accept part
SS = 7	CP = 266	      Match  ,
SS = 7	CP = 266	      Reject ,
SS = 7	CP = 266	      Deduce part
SS = 7	CP = 266	        Predict Failed in CONDITION
SS = 7	CP = 266	        Predict Failed in CONDITION
SS = 7	CP = 266	        Predict Failed in CONDITION
SS = 9	CP = 266	        Deduce simple_part
SS = 9	CP = 266	          Predict Failed in CONDITION
SS = 11	CP = 266	          Deduce terminal_symbol
SS = 11	CP = 266	            Predict Failed in CONDITION
SS = 11	CP = 266	            Predict Failed in CONDITION
SS = 12	CP = 266	            Match  token
SS = 12	CP = 266	            Accept token
SS = 11	CP = 267	          Accept terminal_symbol
SS = 9	CP = 267	        Accept simple_part
SS = 7	CP = 267	      Accept part
SS = 7	CP = 267	      Match  ,
SS = 7	CP = 267	      Reject ,
SS = 7	CP = 267	      Deduce part
SS = 7	CP = 267	        Predict Failed in CONDITION
SS = 7	CP = 267	        Predict Failed in CONDITION
SS = 7	CP = 267	        Predict Failed in CONDITION
SS = 9	CP = 267	        Deduce simple_part
SS = 11	CP = 267	          Deduce right_non_terminal_symbol
SS = 12	CP = 267	            Deduce non_terminal_symbol
SS = 12	CP = 267	              Match  id
SS = 12	CP = 267	              Accept id
SS = 12	CP = 268	            Accept non_terminal_symbol
SS = 11	CP = 268	          Accept right_non_terminal_symbol
SS = 9	CP = 268	        Accept simple_part
SS = 7	CP = 268	      Accept part
SS = 7	CP = 268	      Match  ,
SS = 7	CP = 268	      Reject ,
SS = 7	CP = 268	      Deduce part
SS = 7	CP = 268	        Predict Failed in CONDITION
SS = 7	CP = 268	        Predict Failed in CONDITION
SS = 7	CP = 268	        Predict Failed in CONDITION
SS = 9	CP = 268	        Deduce simple_part
SS = 9	CP = 268	          Predict Failed in CONDITION
SS = 11	CP = 268	          Deduce terminal_symbol
SS = 12	CP = 268	            Match  slit
SS = 12	CP = 268	            Accept slit
SS = 11	CP = 269	          Accept terminal_symbol
SS = 9	CP = 269	        Accept simple_part
SS = 7	CP = 269	      Accept part
SS = 7	CP = 269	      Match  ,
SS = 7	CP = 269	      Reject ,
SS = 7	CP = 269	      Deduce part
SS = 7	CP = 269	        Predict Failed in CONDITION
SS = 7	CP = 269	        Predict Failed in CONDITION
SS = 7	CP = 269	        Predict Failed in CONDITION
SS = 9	CP = 269	        Deduce simple_part
SS = 9	CP = 269	          Predict Failed in CONDITION
SS = 11	CP = 269	          Deduce terminal_symbol
SS = 11	CP = 269	            Predict Failed in CONDITION
SS = 11	CP = 269	            Predict Failed in CONDITION
SS = 12	CP = 269	            Match  token
SS = 12	CP = 269	            Accept token
SS = 11	CP = 270	          Accept terminal_symbol
SS = 9	CP = 270	        Accept simple_part
SS = 7	CP = 270	      Accept part
SS = 7	CP = 270	      Match  ,
SS = 7	CP = 270	      Reject ,
SS = 6	CP = 270	      Predict Failed: part
SS = 5	CP = 270	    Accept term
SS = 5	CP = 270	    Match  |
SS = 5	CP = 270	    Reject |
SS = 4	CP = 270	  Accept declaration
SS = 4	CP = 270	  Deduce end_op
SS = 5	CP = 270	    Match  ;
SS = 5	CP = 270	    Accept ;
SS = 4	CP = 271	  Accept end_op
SS = 3	CP = 271	Accept statement
SS = 3	CP = 271	Deduce statement
SS = 4	CP = 271	  Deduce non_terminal_symbol
SS = 4	CP = 271	    Match  id
SS = 4	CP = 271	    Accept id
SS = 4	CP = 272	  Accept non_terminal_symbol
SS = 4	CP = 272	  Deduce assign_op
SS = 5	CP = 272	    Match  ::=
SS = 5	CP = 272	    Accept ::=
SS = 4	CP = 273	  Accept assign_op
SS = 4	CP = 273	  Deduce declaration
SS = 5	CP = 273	    Deduce term
SS = 6	CP = 273	      Deduce part
SS = 6	CP = 273	        Predict Failed in CONDITION
SS = 6	CP = 273	        Predict Failed in CONDITION
SS = 6	CP = 273	        Predict Failed in CONDITION
SS = 8	CP = 273	        Deduce simple_part
SS = 8	CP = 273	          Predict Failed in CONDITION
SS = 10	CP = 273	          Deduce terminal_symbol
SS = 11	CP = 273	            Match  slit
SS = 11	CP = 273	            Accept slit
SS = 10	CP = 274	          Accept terminal_symbol
SS = 8	CP = 274	        Accept simple_part
SS = 6	CP = 274	      Accept part
SS = 7	CP = 274	      Match  ,
SS = 7	CP = 274	      Reject ,
SS = 7	CP = 274	      Deduce part
SS = 7	CP = 274	        Predict Failed in CONDITION
SS = 7	CP = 274	        Predict Failed in CONDITION
SS = 7	CP = 274	        Predict Failed in CONDITION
SS = 9	CP = 274	        Deduce simple_part
SS = 9	CP = 274	          Predict Failed in CONDITION
SS = 11	CP = 274	          Deduce terminal_symbol
SS = 11	CP = 274	            Predict Failed in CONDITION
SS = 11	CP = 274	            Predict Failed in CONDITION
SS = 12	CP = 274	            Match  token
SS = 12	CP = 274	            Accept token
SS = 11	CP = 275	          Accept terminal_symbol
SS = 9	CP = 275	        Accept simple_part
SS = 7	CP = 275	      Accept part
SS = 7	CP = 275	      Match  ,
SS = 7	CP = 275	      Reject ,
SS = 7	CP = 275	      Deduce part
SS = 7	CP = 275	        Predict Failed in CONDITION
SS = 7	CP = 275	        Predict Failed in CONDITION
SS = 7	CP = 275	        Predict Failed in CONDITION
SS = 9	CP = 275	        Deduce simple_part
SS = 11	CP = 275	          Deduce right_non_terminal_symbol
SS = 12	CP = 275	            Deduce non_terminal_symbol
SS = 12	CP = 275	              Match  id
SS = 12	CP = 275	              Accept id
SS = 12	CP = 276	            Accept non_terminal_symbol
SS = 11	CP = 276	          Accept right_non_terminal_symbol
SS = 9	CP = 276	        Accept simple_part
SS = 7	CP = 276	      Accept part
SS = 7	CP = 276	      Match  ,
SS = 7	CP = 276	      Reject ,
SS = 7	CP = 276	      Deduce part
SS = 7	CP = 276	        Predict Failed in CONDITION
SS = 7	CP = 276	        Predict Failed in CONDITION
SS = 7	CP = 276	        Predict Failed in CONDITION
SS = 9	CP = 276	        Deduce simple_part
SS = 9	CP = 276	          Predict Failed in CONDITION
SS = 11	CP = 276	          Deduce terminal_symbol
SS = 12	CP = 276	            Match  slit
SS = 12	CP = 276	            Accept slit
SS = 11	CP = 277	          Accept terminal_symbol
SS = 9	CP = 277	        Accept simple_part
SS = 7	CP = 277	      Accept part
SS = 7	CP = 277	      Match  ,
SS = 7	CP = 277	      Reject ,
SS = 7	CP = 277	      Deduce part
SS = 7	CP = 277	        Predict Failed in CONDITION
SS = 7	CP = 277	        Predict Failed in CONDITION
SS = 7	CP = 277	        Predict Failed in CONDITION
SS = 9	CP = 277	        Deduce simple_part
SS = 9	CP = 277	          Predict Failed in CONDITION
SS = 11	CP = 277	          Deduce terminal_symbol
SS = 11	CP = 277	            Predict Failed in CONDITION
SS = 11	CP = 277	            Predict Failed in CONDITION
SS = 12	CP = 277	            Match  token
SS = 12	CP = 277	            Accept token
SS = 11	CP = 278	          Accept terminal_symbol
SS = 9	CP = 278	        Accept simple_part
SS = 7	CP = 278	      Accept part
SS = 7	CP = 278	      Match  ,
SS = 7	CP = 278	      Reject ,
SS = 6	CP = 278	      Predict Failed: part
SS = 5	CP = 278	    Accept term
SS = 5	CP = 278	    Match  |
SS = 5	CP = 278	    Reject |
SS = 4	CP = 278	  Accept declaration
SS = 4	CP = 278	  Deduce end_op
SS = 5	CP = 278	    Match  ;
SS = 5	CP = 278	    Accept ;
SS = 4	CP = 279	  Accept end_op
SS = 3	CP = 279	Accept statement
SS = 3	CP = 279	Deduce statement
SS = 4	CP = 279	  Deduce non_terminal_symbol
SS = 4	CP = 279	    Match  id
SS = 4	CP = 279	    Accept id
SS = 4	CP = 280	  Accept non_terminal_symbol
SS = 4	CP = 280	  Deduce assign_op
SS = 5	CP = 280	    Match  ::=
SS = 5	CP = 280	    Accept ::=
SS = 4	CP = 281	  Accept assign_op
SS = 4	CP = 281	  Deduce declaration
SS = 5	CP = 281	    Deduce term
SS = 6	CP = 281	      Deduce part
SS = 6	CP = 281	        Predict Failed in CONDITION
SS = 6	CP = 281	        Predict Failed in CONDITION
SS = 6	CP = 281	        Predict Failed in CONDITION
SS = 8	CP = 281	        Deduce simple_part
SS = 8	CP = 281	          Predict Failed in CONDITION
SS = 10	CP = 281	          Deduce terminal_symbol
SS = 11	CP = 281	            Match  slit
SS = 11	CP = 281	            Accept slit
SS = 10	CP = 282	          Accept terminal_symbol
SS = 8	CP = 282	        Accept simple_part
SS = 6	CP = 282	      Accept part
SS = 7	CP = 282	      Match  ,
SS = 7	CP = 282	      Reject ,
SS = 7	CP = 282	      Deduce part
SS = 7	CP = 282	        Predict Failed in CONDITION
SS = 7	CP = 282	        Predict Failed in CONDITION
SS = 7	CP = 282	        Predict Failed in CONDITION
SS = 9	CP = 282	        Deduce simple_part
SS = 11	CP = 282	          Deduce right_non_terminal_symbol
SS = 12	CP = 282	            Deduce non_terminal_symbol
SS = 12	CP = 282	              Match  id
SS = 12	CP = 282	              Accept id
SS = 12	CP = 283	            Accept non_terminal_symbol
SS = 11	CP = 283	          Accept right_non_terminal_symbol
SS = 9	CP = 283	        Accept simple_part
SS = 7	CP = 283	      Accept part
SS = 7	CP = 283	      Match  ,
SS = 7	CP = 283	      Reject ,
SS = 7	CP = 283	      Deduce part
SS = 7	CP = 283	        Predict Failed in CONDITION
SS = 7	CP = 283	        Predict Failed in CONDITION
SS = 7	CP = 283	        Predict Failed in CONDITION
SS = 9	CP = 283	        Deduce simple_part
SS = 9	CP = 283	          Predict Failed in CONDITION
SS = 11	CP = 283	          Deduce terminal_symbol
SS = 11	CP = 283	            Predict Failed in CONDITION
SS = 11	CP = 283	            Predict Failed in CONDITION
SS = 12	CP = 283	            Match  token
SS = 12	CP = 283	            Accept token
SS = 11	CP = 284	          Accept terminal_symbol
SS = 9	CP = 284	        Accept simple_part
SS = 7	CP = 284	      Accept part
SS = 7	CP = 284	      Match  ,
SS = 7	CP = 284	      Reject ,
SS = 7	CP = 284	      Deduce part
SS = 7	CP = 284	        Predict Failed in CONDITION
SS = 7	CP = 284	        Predict Failed in CONDITION
SS = 7	CP = 284	        Predict Failed in CONDITION
SS = 9	CP = 284	        Deduce simple_part
SS = 11	CP = 284	          Deduce right_non_terminal_symbol
SS = 12	CP = 284	            Deduce non_terminal_symbol
SS = 12	CP = 284	              Match  id
SS = 12	CP = 284	              Accept id
SS = 12	CP = 285	            Accept non_terminal_symbol
SS = 11	CP = 285	          Accept right_non_terminal_symbol
SS = 9	CP = 285	        Accept simple_part
SS = 7	CP = 285	      Accept part
SS = 7	CP = 285	      Match  ,
SS = 7	CP = 285	      Reject ,
SS = 7	CP = 285	      Deduce part
SS = 7	CP = 285	        Predict Failed in CONDITION
SS = 7	CP = 285	        Predict Failed in CONDITION
SS = 7	CP = 285	        Predict Failed in CONDITION
SS = 9	CP = 285	        Deduce simple_part
SS = 9	CP = 285	          Predict Failed in CONDITION
SS = 11	CP = 285	          Deduce terminal_symbol
SS = 12	CP = 285	            Match  slit
SS = 12	CP = 285	            Accept slit
SS = 11	CP = 286	          Accept terminal_symbol
SS = 9	CP = 286	        Accept simple_part
SS = 7	CP = 286	      Accept part
SS = 7	CP = 286	      Match  ,
SS = 7	CP = 286	      Reject ,
SS = 7	CP = 286	      Deduce part
SS = 7	CP = 286	        Predict Failed in CONDITION
SS = 7	CP = 286	        Predict Failed in CONDITION
SS = 7	CP = 286	        Predict Failed in CONDITION
SS = 9	CP = 286	        Deduce simple_part
SS = 9	CP = 286	          Predict Failed in CONDITION
SS = 11	CP = 286	          Deduce terminal_symbol
SS = 11	CP = 286	            Predict Failed in CONDITION
SS = 11	CP = 286	            Predict Failed in CONDITION
SS = 12	CP = 286	            Match  token
SS = 12	CP = 286	            Accept token
SS = 11	CP = 287	          Accept terminal_symbol
SS = 9	CP = 287	        Accept simple_part
SS = 7	CP = 287	      Accept part
SS = 7	CP = 287	      Match  ,
SS = 7	CP = 287	      Reject ,
SS = 6	CP = 287	      Predict Failed: part
SS = 5	CP = 287	    Accept term
SS = 5	CP = 287	    Match  |
SS = 5	CP = 287	    Reject |
SS = 4	CP = 287	  Accept declaration
SS = 4	CP = 287	  Deduce end_op
SS = 5	CP = 287	    Match  ;
SS = 5	CP = 287	    Accept ;
SS = 4	CP = 288	  Accept end_op
SS = 3	CP = 288	Accept statement
SS = 3	CP = 288	Deduce statement
SS = 4	CP = 288	  Deduce non_terminal_symbol
SS = 4	CP = 288	    Match  id
SS = 4	CP = 288	    Accept id
SS = 4	CP = 289	  Accept non_terminal_symbol
SS = 4	CP = 289	  Deduce assign_op
SS = 5	CP = 289	    Match  ::=
SS = 5	CP = 289	    Accept ::=
SS = 4	CP = 290	  Accept assign_op
SS = 4	CP = 290	  Deduce declaration
SS = 5	CP = 290	    Deduce term
SS = 6	CP = 290	      Deduce part
SS = 6	CP = 290	        Predict Failed in CONDITION
SS = 6	CP = 290	        Predict Failed in CONDITION
SS = 6	CP = 290	        Predict Failed in CONDITION
SS = 8	CP = 290	        Deduce simple_part
SS = 8	CP = 290	          Predict Failed in CONDITION
SS = 10	CP = 290	          Deduce terminal_symbol
SS = 11	CP = 290	            Match  slit
SS = 11	CP = 290	            Accept slit
SS = 10	CP = 291	          Accept terminal_symbol
SS = 8	CP = 291	        Accept simple_part
SS = 6	CP = 291	      Accept part
SS = 7	CP = 291	      Match  ,
SS = 7	CP = 291	      Reject ,
SS = 7	CP = 291	      Deduce part
SS = 7	CP = 291	        Predict Failed in CONDITION
SS = 7	CP = 291	        Predict Failed in CONDITION
SS = 7	CP = 291	        Predict Failed in CONDITION
SS = 9	CP = 291	        Deduce simple_part
SS = 9	CP = 291	          Predict Failed in CONDITION
SS = 11	CP = 291	          Deduce terminal_symbol
SS = 11	CP = 291	            Predict Failed in CONDITION
SS = 11	CP = 291	            Predict Failed in CONDITION
SS = 12	CP = 291	            Match  token
SS = 12	CP = 291	            Accept token
SS = 11	CP = 292	          Accept terminal_symbol
SS = 9	CP = 292	        Accept simple_part
SS = 7	CP = 292	      Accept part
SS = 7	CP = 292	      Match  ,
SS = 7	CP = 292	      Reject ,
SS = 7	CP = 292	      Deduce part
SS = 7	CP = 292	        Predict Failed in CONDITION
SS = 7	CP = 292	        Predict Failed in CONDITION
SS = 7	CP = 292	        Predict Failed in CONDITION
SS = 9	CP = 292	        Deduce simple_part
SS = 11	CP = 292	          Deduce right_non_terminal_symbol
SS = 12	CP = 292	            Deduce non_terminal_symbol
SS = 12	CP = 292	              Match  id
SS = 12	CP = 292	              Accept id
SS = 12	CP = 293	            Accept non_terminal_symbol
SS = 11	CP = 293	          Accept right_non_terminal_symbol
SS = 9	CP = 293	        Accept simple_part
SS = 7	CP = 293	      Accept part
SS = 7	CP = 293	      Match  ,
SS = 7	CP = 293	      Reject ,
SS = 7	CP = 293	      Deduce part
SS = 7	CP = 293	        Predict Failed in CONDITION
SS = 9	CP = 293	        Deduce declaration_part
SS = 9	CP = 293	          Match  (
SS = 9	CP = 293	          Accept (
SS = 10	CP = 294	          Deduce declaration
SS = 11	CP = 294	            Deduce term
SS = 12	CP = 294	              Deduce part
SS = 12	CP = 294	                Predict Failed in CONDITION
SS = 12	CP = 294	                Predict Failed in CONDITION
SS = 12	CP = 294	                Predict Failed in CONDITION
SS = 14	CP = 294	                Deduce simple_part
SS = 16	CP = 294	                  Deduce right_non_terminal_symbol
SS = 17	CP = 294	                    Deduce non_terminal_symbol
SS = 17	CP = 294	                      Match  id
SS = 17	CP = 294	                      Accept id
SS = 17	CP = 295	                    Accept non_terminal_symbol
SS = 16	CP = 295	                  Accept right_non_terminal_symbol
SS = 14	CP = 295	                Accept simple_part
SS = 12	CP = 295	              Accept part
SS = 13	CP = 295	              Match  ,
SS = 13	CP = 295	              Reject ,
SS = 12	CP = 295	              Predict Failed: part
SS = 11	CP = 295	            Accept term
SS = 11	CP = 295	            Match  |
SS = 11	CP = 295	            Accept |
SS = 12	CP = 296	            Deduce term
SS = 13	CP = 296	              Deduce part
SS = 13	CP = 296	                Predict Failed in CONDITION
SS = 13	CP = 296	                Predict Failed in CONDITION
SS = 13	CP = 296	                Predict Failed in CONDITION
SS = 15	CP = 296	                Deduce simple_part
SS = 15	CP = 296	                  Predict Failed in CONDITION
SS = 17	CP = 296	                  Deduce terminal_symbol
SS = 18	CP = 296	                    Match  slit
SS = 18	CP = 296	                    Accept slit
SS = 17	CP = 297	                  Accept terminal_symbol
SS = 15	CP = 297	                Accept simple_part
SS = 13	CP = 297	              Accept part
SS = 14	CP = 297	              Match  ,
SS = 14	CP = 297	              Reject ,
SS = 13	CP = 297	              Predict Failed: part
SS = 12	CP = 297	            Accept term
SS = 11	CP = 297	            Match  |
SS = 11	CP = 297	            Accept |
SS = 12	CP = 298	            Deduce term
SS = 13	CP = 298	              Deduce part
SS = 13	CP = 298	                Predict Failed in CONDITION
SS = 13	CP = 298	                Predict Failed in CONDITION
SS = 13	CP = 298	                Predict Failed in CONDITION
SS = 15	CP = 298	                Deduce simple_part
SS = 15	CP = 298	                  Predict Failed in CONDITION
SS = 17	CP = 298	                  Deduce terminal_symbol
SS = 17	CP = 298	                    Predict Failed in CONDITION
SS = 17	CP = 298	                    Predict Failed in CONDITION
SS = 18	CP = 298	                    Match  token
SS = 18	CP = 298	                    Accept token
SS = 17	CP = 299	                  Accept terminal_symbol
SS = 15	CP = 299	                Accept simple_part
SS = 13	CP = 299	              Accept part
SS = 14	CP = 299	              Match  ,
SS = 14	CP = 299	              Reject ,
SS = 13	CP = 299	              Predict Failed: part
SS = 12	CP = 299	            Accept term
SS = 11	CP = 299	            Match  |
SS = 11	CP = 299	            Reject |
SS = 10	CP = 299	          Accept declaration
SS = 9	CP = 299	          Match  )
SS = 9	CP = 299	          Accept )
SS = 9	CP = 300	        Accept declaration_part
SS = 7	CP = 300	      Accept part
SS = 7	CP = 300	      Match  ,
SS = 7	CP = 300	      Reject ,
SS = 6	CP = 300	      Predict Failed: part
SS = 5	CP = 300	    Accept term
SS = 5	CP = 300	    Match  |
SS = 5	CP = 300	    Reject |
SS = 4	CP = 300	  Accept declaration
SS = 4	CP = 300	  Deduce end_op
SS = 5	CP = 300	    Match  ;
SS = 5	CP = 300	    Accept ;
SS = 4	CP = 301	  Accept end_op
SS = 3	CP = 301	Accept statement
SS = 3	CP = 301	Deduce statement
SS = 4	CP = 301	  Deduce non_terminal_symbol
SS = 4	CP = 301	    Match  id
SS = 4	CP = 301	    Accept id
SS = 4	CP = 302	  Accept non_terminal_symbol
SS = 4	CP = 302	  Deduce assign_op
SS = 5	CP = 302	    Match  ::=
SS = 5	CP = 302	    Accept ::=
SS = 4	CP = 303	  Accept assign_op
SS = 4	CP = 303	  Deduce declaration
SS = 5	CP = 303	    Deduce term
SS = 6	CP = 303	      Deduce part
SS = 6	CP = 303	        Predict Failed in CONDITION
SS = 6	CP = 303	        Predict Failed in CONDITION
SS = 6	CP = 303	        Predict Failed in CONDITION
SS = 8	CP = 303	        Deduce simple_part
SS = 8	CP = 303	          Predict Failed in CONDITION
SS = 10	CP = 303	          Deduce terminal_symbol
SS = 11	CP = 303	            Match  slit
SS = 11	CP = 303	            Accept slit
SS = 10	CP = 304	          Accept terminal_symbol
SS = 8	CP = 304	        Accept simple_part
SS = 6	CP = 304	      Accept part
SS = 7	CP = 304	      Match  ,
SS = 7	CP = 304	      Reject ,
SS = 7	CP = 304	      Deduce part
SS = 7	CP = 304	        Predict Failed in CONDITION
SS = 7	CP = 304	        Predict Failed in CONDITION
SS = 7	CP = 304	        Predict Failed in CONDITION
SS = 9	CP = 304	        Deduce simple_part
SS = 11	CP = 304	          Deduce right_non_terminal_symbol
SS = 12	CP = 304	            Deduce non_terminal_symbol
SS = 12	CP = 304	              Match  id
SS = 12	CP = 304	              Accept id
SS = 12	CP = 305	            Accept non_terminal_symbol
SS = 11	CP = 305	          Accept right_non_terminal_symbol
SS = 9	CP = 305	        Accept simple_part
SS = 7	CP = 305	      Accept part
SS = 7	CP = 305	      Match  ,
SS = 7	CP = 305	      Reject ,
SS = 7	CP = 305	      Deduce part
SS = 7	CP = 305	        Predict Failed in CONDITION
SS = 7	CP = 305	        Predict Failed in CONDITION
SS = 7	CP = 305	        Predict Failed in CONDITION
SS = 9	CP = 305	        Deduce simple_part
SS = 9	CP = 305	          Predict Failed in CONDITION
SS = 11	CP = 305	          Deduce terminal_symbol
SS = 11	CP = 305	            Predict Failed in CONDITION
SS = 11	CP = 305	            Predict Failed in CONDITION
SS = 12	CP = 305	            Match  token
SS = 12	CP = 305	            Accept token
SS = 11	CP = 306	          Accept terminal_symbol
SS = 9	CP = 306	        Accept simple_part
SS = 7	CP = 306	      Accept part
SS = 7	CP = 306	      Match  ,
SS = 7	CP = 306	      Reject ,
SS = 6	CP = 306	      Predict Failed: part
SS = 5	CP = 306	    Accept term
SS = 5	CP = 306	    Match  |
SS = 5	CP = 306	    Reject |
SS = 4	CP = 306	  Accept declaration
SS = 4	CP = 306	  Deduce end_op
SS = 5	CP = 306	    Match  ;
SS = 5	CP = 306	    Accept ;
SS = 4	CP = 307	  Accept end_op
SS = 3	CP = 307	Accept statement
SS = 3	CP = 307	Deduce statement
SS = 4	CP = 307	  Deduce non_terminal_symbol
SS = 4	CP = 307	    Match  id
SS = 4	CP = 307	    Accept id
SS = 4	CP = 308	  Accept non_terminal_symbol
SS = 4	CP = 308	  Deduce assign_op
SS = 5	CP = 308	    Match  ::=
SS = 5	CP = 308	    Accept ::=
SS = 4	CP = 309	  Accept assign_op
SS = 4	CP = 309	  Deduce declaration
SS = 5	CP = 309	    Deduce term
SS = 6	CP = 309	      Deduce part
SS = 6	CP = 309	        Predict Failed in CONDITION
SS = 6	CP = 309	        Predict Failed in CONDITION
SS = 6	CP = 309	        Predict Failed in CONDITION
SS = 8	CP = 309	        Deduce simple_part
SS = 8	CP = 309	          Predict Failed in CONDITION
SS = 10	CP = 309	          Deduce terminal_symbol
SS = 11	CP = 309	            Match  slit
SS = 11	CP = 309	            Accept slit
SS = 10	CP = 310	          Accept terminal_symbol
SS = 8	CP = 310	        Accept simple_part
SS = 6	CP = 310	      Accept part
SS = 7	CP = 310	      Match  ,
SS = 7	CP = 310	      Reject ,
SS = 7	CP = 310	      Deduce part
SS = 7	CP = 310	        Predict Failed in CONDITION
SS = 7	CP = 310	        Predict Failed in CONDITION
SS = 9	CP = 310	        Deduce alternative_part
SS = 9	CP = 310	          Match  [
SS = 9	CP = 310	          Accept [
SS = 10	CP = 311	          Deduce declaration
SS = 11	CP = 311	            Deduce term
SS = 12	CP = 311	              Deduce part
SS = 12	CP = 311	                Predict Failed in CONDITION
SS = 12	CP = 311	                Predict Failed in CONDITION
SS = 12	CP = 311	                Predict Failed in CONDITION
SS = 14	CP = 311	                Deduce simple_part
SS = 16	CP = 311	                  Deduce right_non_terminal_symbol
SS = 17	CP = 311	                    Deduce non_terminal_symbol
SS = 17	CP = 311	                      Match  id
SS = 17	CP = 311	                      Accept id
SS = 17	CP = 312	                    Accept non_terminal_symbol
SS = 16	CP = 312	                  Accept right_non_terminal_symbol
SS = 14	CP = 312	                Accept simple_part
SS = 12	CP = 312	              Accept part
SS = 13	CP = 312	              Match  ,
SS = 13	CP = 312	              Reject ,
SS = 12	CP = 312	              Predict Failed: part
SS = 11	CP = 312	            Accept term
SS = 11	CP = 312	            Match  |
SS = 11	CP = 312	            Reject |
SS = 10	CP = 312	          Accept declaration
SS = 9	CP = 312	          Match  ]
SS = 9	CP = 312	          Accept ]
SS = 9	CP = 313	        Accept alternative_part
SS = 7	CP = 313	      Accept part
SS = 7	CP = 313	      Match  ,
SS = 7	CP = 313	      Reject ,
SS = 7	CP = 313	      Deduce part
SS = 7	CP = 313	        Predict Failed in CONDITION
SS = 9	CP = 313	        Deduce declaration_part
SS = 9	CP = 313	          Match  (
SS = 9	CP = 313	          Accept (
SS = 10	CP = 314	          Deduce declaration
SS = 11	CP = 314	            Deduce term
SS = 12	CP = 314	              Deduce part
SS = 12	CP = 314	                Predict Failed in CONDITION
SS = 12	CP = 314	                Predict Failed in CONDITION
SS = 12	CP = 314	                Predict Failed in CONDITION
SS = 14	CP = 314	                Deduce simple_part
SS = 14	CP = 314	                  Predict Failed in CONDITION
SS = 16	CP = 314	                  Deduce terminal_symbol
SS = 17	CP = 314	                    Match  slit
SS = 17	CP = 314	                    Accept slit
SS = 16	CP = 315	                  Accept terminal_symbol
SS = 14	CP = 315	                Accept simple_part
SS = 12	CP = 315	              Accept part
SS = 13	CP = 315	              Match  ,
SS = 13	CP = 315	              Reject ,
SS = 12	CP = 315	              Predict Failed: part
SS = 11	CP = 315	            Accept term
SS = 11	CP = 315	            Match  |
SS = 11	CP = 315	            Accept |
SS = 12	CP = 316	            Deduce term
SS = 13	CP = 316	              Deduce part
SS = 13	CP = 316	                Predict Failed in CONDITION
SS = 13	CP = 316	                Predict Failed in CONDITION
SS = 13	CP = 316	                Predict Failed in CONDITION
SS = 15	CP = 316	                Deduce simple_part
SS = 15	CP = 316	                  Predict Failed in CONDITION
SS = 17	CP = 316	                  Deduce terminal_symbol
SS = 18	CP = 316	                    Match  slit
SS = 18	CP = 316	                    Accept slit
SS = 17	CP = 317	                  Accept terminal_symbol
SS = 15	CP = 317	                Accept simple_part
SS = 13	CP = 317	              Accept part
SS = 14	CP = 317	              Match  ,
SS = 14	CP = 317	              Reject ,
SS = 13	CP = 317	              Predict Failed: part
SS = 12	CP = 317	            Accept term
SS = 11	CP = 317	            Match  |
SS = 11	CP = 317	            Reject |
SS = 10	CP = 317	          Accept declaration
SS = 9	CP = 317	          Match  )
SS = 9	CP = 317	          Accept )
SS = 9	CP = 318	        Accept declaration_part
SS = 7	CP = 318	      Accept part
SS = 7	CP = 318	      Match  ,
SS = 7	CP = 318	      Reject ,
SS = 7	CP = 318	      Deduce part
SS = 7	CP = 318	        Predict Failed in CONDITION
SS = 7	CP = 318	        Predict Failed in CONDITION
SS = 9	CP = 318	        Deduce alternative_part
SS = 9	CP = 318	          Match  [
SS = 9	CP = 318	          Accept [
SS = 10	CP = 319	          Deduce declaration
SS = 11	CP = 319	            Deduce term
SS = 12	CP = 319	              Deduce part
SS = 12	CP = 319	                Predict Failed in CONDITION
SS = 12	CP = 319	                Predict Failed in CONDITION
SS = 12	CP = 319	                Predict Failed in CONDITION
SS = 14	CP = 319	                Deduce simple_part
SS = 16	CP = 319	                  Deduce right_non_terminal_symbol
SS = 17	CP = 319	                    Deduce non_terminal_symbol
SS = 17	CP = 319	                      Match  id
SS = 17	CP = 319	                      Accept id
SS = 17	CP = 320	                    Accept non_terminal_symbol
SS = 16	CP = 320	                  Accept right_non_terminal_symbol
SS = 14	CP = 320	                Accept simple_part
SS = 12	CP = 320	              Accept part
SS = 13	CP = 320	              Match  ,
SS = 13	CP = 320	              Reject ,
SS = 12	CP = 320	              Predict Failed: part
SS = 11	CP = 320	            Accept term
SS = 11	CP = 320	            Match  |
SS = 11	CP = 320	            Reject |
SS = 10	CP = 320	          Accept declaration
SS = 9	CP = 320	          Match  ]
SS = 9	CP = 320	          Accept ]
SS = 9	CP = 321	        Accept alternative_part
SS = 7	CP = 321	      Accept part
SS = 7	CP = 321	      Match  ,
SS = 7	CP = 321	      Reject ,
SS = 7	CP = 321	      Deduce part
SS = 7	CP = 321	        Predict Failed in CONDITION
SS = 9	CP = 321	        Deduce declaration_part
SS = 9	CP = 321	          Match  (
SS = 9	CP = 321	          Accept (
SS = 10	CP = 322	          Deduce declaration
SS = 11	CP = 322	            Deduce term
SS = 12	CP = 322	              Deduce part
SS = 12	CP = 322	                Predict Failed in CONDITION
SS = 12	CP = 322	                Predict Failed in CONDITION
SS = 12	CP = 322	                Predict Failed in CONDITION
SS = 14	CP = 322	                Deduce simple_part
SS = 14	CP = 322	                  Predict Failed in CONDITION
SS = 16	CP = 322	                  Deduce terminal_symbol
SS = 17	CP = 322	                    Match  slit
SS = 17	CP = 322	                    Accept slit
SS = 16	CP = 323	                  Accept terminal_symbol
SS = 14	CP = 323	                Accept simple_part
SS = 12	CP = 323	              Accept part
SS = 13	CP = 323	              Match  ,
SS = 13	CP = 323	              Reject ,
SS = 12	CP = 323	              Predict Failed: part
SS = 11	CP = 323	            Accept term
SS = 11	CP = 323	            Match  |
SS = 11	CP = 323	            Accept |
SS = 12	CP = 324	            Deduce term
SS = 13	CP = 324	              Deduce part
SS = 13	CP = 324	                Predict Failed in CONDITION
SS = 13	CP = 324	                Predict Failed in CONDITION
SS = 13	CP = 324	                Predict Failed in CONDITION
SS = 15	CP = 324	                Deduce simple_part
SS = 15	CP = 324	                  Predict Failed in CONDITION
SS = 17	CP = 324	                  Deduce terminal_symbol
SS = 18	CP = 324	                    Match  slit
SS = 18	CP = 324	                    Accept slit
SS = 17	CP = 325	                  Accept terminal_symbol
SS = 15	CP = 325	                Accept simple_part
SS = 13	CP = 325	              Accept part
SS = 14	CP = 325	              Match  ,
SS = 14	CP = 325	              Reject ,
SS = 13	CP = 325	              Predict Failed: part
SS = 12	CP = 325	            Accept term
SS = 11	CP = 325	            Match  |
SS = 11	CP = 325	            Reject |
SS = 10	CP = 325	          Accept declaration
SS = 9	CP = 325	          Match  )
SS = 9	CP = 325	          Accept )
SS = 9	CP = 326	        Accept declaration_part
SS = 7	CP = 326	      Accept part
SS = 7	CP = 326	      Match  ,
SS = 7	CP = 326	      Reject ,
SS = 7	CP = 326	      Deduce part
SS = 7	CP = 326	        Predict Failed in CONDITION
SS = 7	CP = 326	        Predict Failed in CONDITION
SS = 9	CP = 326	        Deduce alternative_part
SS = 9	CP = 326	          Match  [
SS = 9	CP = 326	          Accept [
SS = 10	CP = 327	          Deduce declaration
SS = 11	CP = 327	            Deduce term
SS = 12	CP = 327	              Deduce part
SS = 12	CP = 327	                Predict Failed in CONDITION
SS = 12	CP = 327	                Predict Failed in CONDITION
SS = 12	CP = 327	                Predict Failed in CONDITION
SS = 14	CP = 327	                Deduce simple_part
SS = 16	CP = 327	                  Deduce right_non_terminal_symbol
SS = 17	CP = 327	                    Deduce non_terminal_symbol
SS = 17	CP = 327	                      Match  id
SS = 17	CP = 327	                      Accept id
SS = 17	CP = 328	                    Accept non_terminal_symbol
SS = 16	CP = 328	                  Accept right_non_terminal_symbol
SS = 14	CP = 328	                Accept simple_part
SS = 12	CP = 328	              Accept part
SS = 13	CP = 328	              Match  ,
SS = 13	CP = 328	              Reject ,
SS = 12	CP = 328	              Predict Failed: part
SS = 11	CP = 328	            Accept term
SS = 11	CP = 328	            Match  |
SS = 11	CP = 328	            Reject |
SS = 10	CP = 328	          Accept declaration
SS = 9	CP = 328	          Match  ]
SS = 9	CP = 328	          Accept ]
SS = 9	CP = 329	        Accept alternative_part
SS = 7	CP = 329	      Accept part
SS = 7	CP = 329	      Match  ,
SS = 7	CP = 329	      Reject ,
SS = 7	CP = 329	      Deduce part
SS = 7	CP = 329	        Predict Failed in CONDITION
SS = 7	CP = 329	        Predict Failed in CONDITION
SS = 7	CP = 329	        Predict Failed in CONDITION
SS = 9	CP = 329	        Deduce simple_part
SS = 11	CP = 329	          Deduce right_non_terminal_symbol
SS = 12	CP = 329	            Deduce non_terminal_symbol
SS = 12	CP = 329	              Match  id
SS = 12	CP = 329	              Accept id
SS = 12	CP = 330	            Accept non_terminal_symbol
SS = 11	CP = 330	          Accept right_non_terminal_symbol
SS = 9	CP = 330	        Accept simple_part
SS = 7	CP = 330	      Accept part
SS = 7	CP = 330	      Match  ,
SS = 7	CP = 330	      Reject ,
SS = 6	CP = 330	      Predict Failed: part
SS = 5	CP = 330	    Accept term
SS = 5	CP = 330	    Match  |
SS = 5	CP = 330	    Reject |
SS = 4	CP = 330	  Accept declaration
SS = 4	CP = 330	  Deduce end_op
SS = 5	CP = 330	    Match  ;
SS = 5	CP = 330	    Accept ;
SS = 4	CP = 331	  Accept end_op
SS = 3	CP = 331	Accept statement
SS = 3	CP = 331	Deduce statement
SS = 4	CP = 331	  Deduce non_terminal_symbol
SS = 4	CP = 331	    Match  id
SS = 4	CP = 331	    Accept id
SS = 4	CP = 332	  Accept non_terminal_symbol
SS = 4	CP = 332	  Deduce assign_op
SS = 5	CP = 332	    Match  ::=
SS = 5	CP = 332	    Accept ::=
SS = 4	CP = 333	  Accept assign_op
SS = 4	CP = 333	  Deduce declaration
SS = 5	CP = 333	    Deduce term
SS = 6	CP = 333	      Deduce part
SS = 6	CP = 333	        Predict Failed in CONDITION
SS = 6	CP = 333	        Predict Failed in CONDITION
SS = 6	CP = 333	        Predict Failed in CONDITION
SS = 8	CP = 333	        Deduce simple_part
SS = 8	CP = 333	          Predict Failed in CONDITION
SS = 10	CP = 333	          Deduce terminal_symbol
SS = 11	CP = 333	            Match  slit
SS = 11	CP = 333	            Accept slit
SS = 10	CP = 334	          Accept terminal_symbol
SS = 8	CP = 334	        Accept simple_part
SS = 6	CP = 334	      Accept part
SS = 7	CP = 334	      Match  ,
SS = 7	CP = 334	      Reject ,
SS = 7	CP = 334	      Deduce part
SS = 7	CP = 334	        Predict Failed in CONDITION
SS = 7	CP = 334	        Predict Failed in CONDITION
SS = 7	CP = 334	        Predict Failed in CONDITION
SS = 9	CP = 334	        Deduce simple_part
SS = 9	CP = 334	          Predict Failed in CONDITION
SS = 11	CP = 334	          Deduce terminal_symbol
SS = 11	CP = 334	            Predict Failed in CONDITION
SS = 11	CP = 334	            Predict Failed in CONDITION
SS = 12	CP = 334	            Match  token
SS = 12	CP = 334	            Accept token
SS = 11	CP = 335	          Accept terminal_symbol
SS = 9	CP = 335	        Accept simple_part
SS = 7	CP = 335	      Accept part
SS = 7	CP = 335	      Match  ,
SS = 7	CP = 335	      Reject ,
SS = 7	CP = 335	      Deduce part
SS = 7	CP = 335	        Predict Failed in CONDITION
SS = 7	CP = 335	        Predict Failed in CONDITION
SS = 7	CP = 335	        Predict Failed in CONDITION
SS = 9	CP = 335	        Deduce simple_part
SS = 9	CP = 335	          Predict Failed in CONDITION
SS = 11	CP = 335	          Deduce terminal_symbol
SS = 12	CP = 335	            Match  slit
SS = 12	CP = 335	            Accept slit
SS = 11	CP = 336	          Accept terminal_symbol
SS = 9	CP = 336	        Accept simple_part
SS = 7	CP = 336	      Accept part
SS = 7	CP = 336	      Match  ,
SS = 7	CP = 336	      Reject ,
SS = 7	CP = 336	      Deduce part
SS = 7	CP = 336	        Predict Failed in CONDITION
SS = 7	CP = 336	        Predict Failed in CONDITION
SS = 7	CP = 336	        Predict Failed in CONDITION
SS = 9	CP = 336	        Deduce simple_part
SS = 11	CP = 336	          Deduce right_non_terminal_symbol
SS = 12	CP = 336	            Deduce non_terminal_symbol
SS = 12	CP = 336	              Match  id
SS = 12	CP = 336	              Accept id
SS = 12	CP = 337	            Accept non_terminal_symbol
SS = 11	CP = 337	          Accept right_non_terminal_symbol
SS = 9	CP = 337	        Accept simple_part
SS = 7	CP = 337	      Accept part
SS = 7	CP = 337	      Match  ,
SS = 7	CP = 337	      Reject ,
SS = 7	CP = 337	      Deduce part
SS = 7	CP = 337	        Predict Failed in CONDITION
SS = 7	CP = 337	        Predict Failed in CONDITION
SS = 7	CP = 337	        Predict Failed in CONDITION
SS = 9	CP = 337	        Deduce simple_part
SS = 11	CP = 337	          Deduce right_non_terminal_symbol
SS = 12	CP = 337	            Deduce non_terminal_symbol
SS = 12	CP = 337	              Match  id
SS = 12	CP = 337	              Accept id
SS = 12	CP = 338	            Accept non_terminal_symbol
SS = 11	CP = 338	          Accept right_non_terminal_symbol
SS = 9	CP = 338	        Accept simple_part
SS = 7	CP = 338	      Accept part
SS = 7	CP = 338	      Match  ,
SS = 7	CP = 338	      Reject ,
SS = 6	CP = 338	      Predict Failed: part
SS = 5	CP = 338	    Accept term
SS = 5	CP = 338	    Match  |
SS = 5	CP = 338	    Reject |
SS = 4	CP = 338	  Accept declaration
SS = 4	CP = 338	  Deduce end_op
SS = 5	CP = 338	    Match  ;
SS = 5	CP = 338	    Accept ;
SS = 4	CP = 339	  Accept end_op
SS = 3	CP = 339	Accept statement
SS = 3	CP = 339	Deduce statement
SS = 4	CP = 339	  Deduce non_terminal_symbol
SS = 4	CP = 339	    Match  id
SS = 4	CP = 339	    Accept id
SS = 4	CP = 340	  Accept non_terminal_symbol
SS = 4	CP = 340	  Deduce assign_op
SS = 5	CP = 340	    Match  ::=
SS = 5	CP = 340	    Accept ::=
SS = 4	CP = 341	  Accept assign_op
SS = 4	CP = 341	  Deduce declaration
SS = 5	CP = 341	    Deduce term
SS = 6	CP = 341	      Deduce part
SS = 6	CP = 341	        Predict Failed in CONDITION
SS = 8	CP = 341	        Deduce declaration_part
SS = 8	CP = 341	          Match  (
SS = 8	CP = 341	          Accept (
SS = 9	CP = 342	          Deduce declaration
SS = 10	CP = 342	            Deduce term
SS = 11	CP = 342	              Deduce part
SS = 11	CP = 342	                Predict Failed in CONDITION
SS = 11	CP = 342	                Predict Failed in CONDITION
SS = 11	CP = 342	                Predict Failed in CONDITION
SS = 13	CP = 342	                Deduce simple_part
SS = 13	CP = 342	                  Predict Failed in CONDITION
SS = 15	CP = 342	                  Deduce terminal_symbol
SS = 16	CP = 342	                    Match  slit
SS = 16	CP = 342	                    Accept slit
SS = 15	CP = 343	                  Accept terminal_symbol
SS = 13	CP = 343	                Accept simple_part
SS = 11	CP = 343	              Accept part
SS = 12	CP = 343	              Match  ,
SS = 12	CP = 343	              Reject ,
SS = 12	CP = 343	              Deduce part
SS = 12	CP = 343	                Predict Failed in CONDITION
SS = 12	CP = 343	                Predict Failed in CONDITION
SS = 12	CP = 343	                Predict Failed in CONDITION
SS = 14	CP = 343	                Deduce simple_part
SS = 16	CP = 343	                  Deduce right_non_terminal_symbol
SS = 17	CP = 343	                    Deduce non_terminal_symbol
SS = 17	CP = 343	                      Match  id
SS = 17	CP = 343	                      Accept id
SS = 17	CP = 344	                    Accept non_terminal_symbol
SS = 16	CP = 344	                  Accept right_non_terminal_symbol
SS = 14	CP = 344	                Accept simple_part
SS = 12	CP = 344	              Accept part
SS = 12	CP = 344	              Match  ,
SS = 12	CP = 344	              Reject ,
SS = 12	CP = 344	              Deduce part
SS = 12	CP = 344	                Predict Failed in CONDITION
SS = 12	CP = 344	                Predict Failed in CONDITION
SS = 12	CP = 344	                Predict Failed in CONDITION
SS = 14	CP = 344	                Deduce simple_part
SS = 16	CP = 344	                  Deduce right_non_terminal_symbol
SS = 17	CP = 344	                    Deduce non_terminal_symbol
SS = 17	CP = 344	                      Match  id
SS = 17	CP = 344	                      Accept id
SS = 17	CP = 345	                    Accept non_terminal_symbol
SS = 16	CP = 345	                  Accept right_non_terminal_symbol
SS = 14	CP = 345	                Accept simple_part
SS = 12	CP = 345	              Accept part
SS = 12	CP = 345	              Match  ,
SS = 12	CP = 345	              Reject ,
SS = 11	CP = 345	              Predict Failed: part
SS = 10	CP = 345	            Accept term
SS = 10	CP = 345	            Match  |
SS = 10	CP = 345	            Accept |
SS = 11	CP = 346	            Deduce term
SS = 12	CP = 346	              Deduce part
SS = 12	CP = 346	                Predict Failed in CONDITION
SS = 12	CP = 346	                Predict Failed in CONDITION
SS = 12	CP = 346	                Predict Failed in CONDITION
SS = 14	CP = 346	                Deduce simple_part
SS = 14	CP = 346	                  Predict Failed in CONDITION
SS = 16	CP = 346	                  Deduce terminal_symbol
SS = 16	CP = 346	                    Predict Failed in CONDITION
SS = 16	CP = 346	                    Predict Failed in CONDITION
SS = 17	CP = 346	                    Match  token
SS = 17	CP = 346	                    Accept token
SS = 16	CP = 347	                  Accept terminal_symbol
SS = 14	CP = 347	                Accept simple_part
SS = 12	CP = 347	              Accept part
SS = 13	CP = 347	              Match  ,
SS = 13	CP = 347	              Reject ,
SS = 13	CP = 347	              Deduce part
SS = 13	CP = 347	                Predict Failed in CONDITION
SS = 13	CP = 347	                Predict Failed in CONDITION
SS = 13	CP = 347	                Predict Failed in CONDITION
SS = 15	CP = 347	                Deduce simple_part
SS = 17	CP = 347	                  Deduce right_non_terminal_symbol
SS = 18	CP = 347	                    Deduce non_terminal_symbol
SS = 18	CP = 347	                      Match  id
SS = 18	CP = 347	                      Accept id
SS = 18	CP = 348	                    Accept non_terminal_symbol
SS = 17	CP = 348	                  Accept right_non_terminal_symbol
SS = 15	CP = 348	                Accept simple_part
SS = 13	CP = 348	              Accept part
SS = 13	CP = 348	              Match  ,
SS = 13	CP = 348	              Reject ,
SS = 13	CP = 348	              Deduce part
SS = 13	CP = 348	                Predict Failed in CONDITION
SS = 13	CP = 348	                Predict Failed in CONDITION
SS = 13	CP = 348	                Predict Failed in CONDITION
SS = 15	CP = 348	                Deduce simple_part
SS = 15	CP = 348	                  Predict Failed in CONDITION
SS = 17	CP = 348	                  Deduce terminal_symbol
SS = 18	CP = 348	                    Match  slit
SS = 18	CP = 348	                    Accept slit
SS = 17	CP = 349	                  Accept terminal_symbol
SS = 15	CP = 349	                Accept simple_part
SS = 13	CP = 349	              Accept part
SS = 13	CP = 349	              Match  ,
SS = 13	CP = 349	              Reject ,
SS = 13	CP = 349	              Deduce part
SS = 13	CP = 349	                Predict Failed in CONDITION
SS = 13	CP = 349	                Predict Failed in CONDITION
SS = 13	CP = 349	                Predict Failed in CONDITION
SS = 15	CP = 349	                Deduce simple_part
SS = 15	CP = 349	                  Predict Failed in CONDITION
SS = 17	CP = 349	                  Deduce terminal_symbol
SS = 17	CP = 349	                    Predict Failed in CONDITION
SS = 17	CP = 349	                    Predict Failed in CONDITION
SS = 18	CP = 349	                    Match  token
SS = 18	CP = 349	                    Accept token
SS = 17	CP = 350	                  Accept terminal_symbol
SS = 15	CP = 350	                Accept simple_part
SS = 13	CP = 350	              Accept part
SS = 13	CP = 350	              Match  ,
SS = 13	CP = 350	              Reject ,
SS = 12	CP = 350	              Predict Failed: part
SS = 11	CP = 350	            Accept term
SS = 10	CP = 350	            Match  |
SS = 10	CP = 350	            Reject |
SS = 9	CP = 350	          Accept declaration
SS = 8	CP = 350	          Match  )
SS = 8	CP = 350	          Accept )
SS = 8	CP = 351	        Accept declaration_part
SS = 6	CP = 351	      Accept part
SS = 7	CP = 351	      Match  ,
SS = 7	CP = 351	      Reject ,
SS = 6	CP = 351	      Predict Failed: part
SS = 5	CP = 351	    Accept term
SS = 5	CP = 351	    Match  |
SS = 5	CP = 351	    Reject |
SS = 4	CP = 351	  Accept declaration
SS = 4	CP = 351	  Deduce end_op
SS = 5	CP = 351	    Match  ;
SS = 5	CP = 351	    Accept ;
SS = 4	CP = 352	  Accept end_op
SS = 3	CP = 352	Accept statement
SS = 3	CP = 352	Deduce statement
SS = 4	CP = 352	  Deduce non_terminal_symbol
SS = 4	CP = 352	    Match  id
SS = 4	CP = 352	    Accept id
SS = 4	CP = 353	  Accept non_terminal_symbol
SS = 4	CP = 353	  Deduce assign_op
SS = 5	CP = 353	    Match  ::=
SS = 5	CP = 353	    Accept ::=
SS = 4	CP = 354	  Accept assign_op
SS = 4	CP = 354	  Deduce declaration
SS = 5	CP = 354	    Deduce term
SS = 6	CP = 354	      Deduce part
SS = 6	CP = 354	        Predict Failed in CONDITION
SS = 6	CP = 354	        Predict Failed in CONDITION
SS = 6	CP = 354	        Predict Failed in CONDITION
SS = 8	CP = 354	        Deduce simple_part
SS = 8	CP = 354	          Predict Failed in CONDITION
SS = 10	CP = 354	          Deduce terminal_symbol
SS = 11	CP = 354	            Match  slit
SS = 11	CP = 354	            Accept slit
SS = 10	CP = 355	          Accept terminal_symbol
SS = 8	CP = 355	        Accept simple_part
SS = 6	CP = 355	      Accept part
SS = 7	CP = 355	      Match  ,
SS = 7	CP = 355	      Reject ,
SS = 7	CP = 355	      Deduce part
SS = 7	CP = 355	        Predict Failed in CONDITION
SS = 7	CP = 355	        Predict Failed in CONDITION
SS = 7	CP = 355	        Predict Failed in CONDITION
SS = 9	CP = 355	        Deduce simple_part
SS = 9	CP = 355	          Predict Failed in CONDITION
SS = 11	CP = 355	          Deduce terminal_symbol
SS = 11	CP = 355	            Predict Failed in CONDITION
SS = 11	CP = 355	            Predict Failed in CONDITION
SS = 12	CP = 355	            Match  token
SS = 12	CP = 355	            Accept token
SS = 11	CP = 356	          Accept terminal_symbol
SS = 9	CP = 356	        Accept simple_part
SS = 7	CP = 356	      Accept part
SS = 7	CP = 356	      Match  ,
SS = 7	CP = 356	      Reject ,
SS = 7	CP = 356	      Deduce part
SS = 7	CP = 356	        Predict Failed in CONDITION
SS = 7	CP = 356	        Predict Failed in CONDITION
SS = 7	CP = 356	        Predict Failed in CONDITION
SS = 9	CP = 356	        Deduce simple_part
SS = 9	CP = 356	          Predict Failed in CONDITION
SS = 11	CP = 356	          Deduce terminal_symbol
SS = 12	CP = 356	            Match  slit
SS = 12	CP = 356	            Accept slit
SS = 11	CP = 357	          Accept terminal_symbol
SS = 9	CP = 357	        Accept simple_part
SS = 7	CP = 357	      Accept part
SS = 7	CP = 357	      Match  ,
SS = 7	CP = 357	      Reject ,
SS = 7	CP = 357	      Deduce part
SS = 7	CP = 357	        Predict Failed in CONDITION
SS = 7	CP = 357	        Predict Failed in CONDITION
SS = 9	CP = 357	        Deduce alternative_part
SS = 9	CP = 357	          Match  [
SS = 9	CP = 357	          Accept [
SS = 10	CP = 358	          Deduce declaration
SS = 11	CP = 358	            Deduce term
SS = 12	CP = 358	              Deduce part
SS = 12	CP = 358	                Predict Failed in CONDITION
SS = 12	CP = 358	                Predict Failed in CONDITION
SS = 12	CP = 358	                Predict Failed in CONDITION
SS = 14	CP = 358	                Deduce simple_part
SS = 16	CP = 358	                  Deduce right_non_terminal_symbol
SS = 17	CP = 358	                    Deduce non_terminal_symbol
SS = 17	CP = 358	                      Match  id
SS = 17	CP = 358	                      Accept id
SS = 17	CP = 359	                    Accept non_terminal_symbol
SS = 16	CP = 359	                  Accept right_non_terminal_symbol
SS = 14	CP = 359	                Accept simple_part
SS = 12	CP = 359	              Accept part
SS = 13	CP = 359	              Match  ,
SS = 13	CP = 359	              Reject ,
SS = 12	CP = 359	              Predict Failed: part
SS = 11	CP = 359	            Accept term
SS = 11	CP = 359	            Match  |
SS = 11	CP = 359	            Reject |
SS = 10	CP = 359	          Accept declaration
SS = 9	CP = 359	          Match  ]
SS = 9	CP = 359	          Accept ]
SS = 9	CP = 360	        Accept alternative_part
SS = 7	CP = 360	      Accept part
SS = 7	CP = 360	      Match  ,
SS = 7	CP = 360	      Reject ,
SS = 7	CP = 360	      Deduce part
SS = 7	CP = 360	        Predict Failed in CONDITION
SS = 7	CP = 360	        Predict Failed in CONDITION
SS = 7	CP = 360	        Predict Failed in CONDITION
SS = 9	CP = 360	        Deduce simple_part
SS = 9	CP = 360	          Predict Failed in CONDITION
SS = 11	CP = 360	          Deduce terminal_symbol
SS = 12	CP = 360	            Match  slit
SS = 12	CP = 360	            Accept slit
SS = 11	CP = 361	          Accept terminal_symbol
SS = 9	CP = 361	        Accept simple_part
SS = 7	CP = 361	      Accept part
SS = 7	CP = 361	      Match  ,
SS = 7	CP = 361	      Reject ,
SS = 7	CP = 361	      Deduce part
SS = 7	CP = 361	        Predict Failed in CONDITION
SS = 7	CP = 361	        Predict Failed in CONDITION
SS = 9	CP = 361	        Deduce alternative_part
SS = 9	CP = 361	          Match  [
SS = 9	CP = 361	          Accept [
SS = 10	CP = 362	          Deduce declaration
SS = 11	CP = 362	            Deduce term
SS = 12	CP = 362	              Deduce part
SS = 12	CP = 362	                Predict Failed in CONDITION
SS = 12	CP = 362	                Predict Failed in CONDITION
SS = 12	CP = 362	                Predict Failed in CONDITION
SS = 14	CP = 362	                Deduce simple_part
SS = 14	CP = 362	                  Predict Failed in CONDITION
SS = 16	CP = 362	                  Deduce terminal_symbol
SS = 17	CP = 362	                    Match  slit
SS = 17	CP = 362	                    Accept slit
SS = 16	CP = 363	                  Accept terminal_symbol
SS = 14	CP = 363	                Accept simple_part
SS = 12	CP = 363	              Accept part
SS = 13	CP = 363	              Match  ,
SS = 13	CP = 363	              Reject ,
SS = 12	CP = 363	              Predict Failed: part
SS = 11	CP = 363	            Accept term
SS = 11	CP = 363	            Match  |
SS = 11	CP = 363	            Reject |
SS = 10	CP = 363	          Accept declaration
SS = 9	CP = 363	          Match  ]
SS = 9	CP = 363	          Accept ]
SS = 9	CP = 364	        Accept alternative_part
SS = 7	CP = 364	      Accept part
SS = 7	CP = 364	      Match  ,
SS = 7	CP = 364	      Reject ,
SS = 7	CP = 364	      Deduce part
SS = 7	CP = 364	        Predict Failed in CONDITION
SS = 7	CP = 364	        Predict Failed in CONDITION
SS = 7	CP = 364	        Predict Failed in CONDITION
SS = 9	CP = 364	        Deduce simple_part
SS = 11	CP = 364	          Deduce right_non_terminal_symbol
SS = 12	CP = 364	            Deduce non_terminal_symbol
SS = 12	CP = 364	              Match  id
SS = 12	CP = 364	              Accept id
SS = 12	CP = 365	            Accept non_terminal_symbol
SS = 11	CP = 365	          Accept right_non_terminal_symbol
SS = 9	CP = 365	        Accept simple_part
SS = 7	CP = 365	      Accept part
SS = 7	CP = 365	      Match  ,
SS = 7	CP = 365	      Reject ,
SS = 6	CP = 365	      Predict Failed: part
SS = 5	CP = 365	    Accept term
SS = 5	CP = 365	    Match  |
SS = 5	CP = 365	    Reject |
SS = 4	CP = 365	  Accept declaration
SS = 4	CP = 365	  Deduce end_op
SS = 5	CP = 365	    Match  ;
SS = 5	CP = 365	    Accept ;
SS = 4	CP = 366	  Accept end_op
SS = 3	CP = 366	Accept statement
SS = 3	CP = 366	Deduce statement
SS = 4	CP = 366	  Deduce non_terminal_symbol
SS = 4	CP = 366	    Match  id
SS = 4	CP = 366	    Accept id
SS = 4	CP = 367	  Accept non_terminal_symbol
SS = 4	CP = 367	  Deduce assign_op
SS = 5	CP = 367	    Match  ::=
SS = 5	CP = 367	    Accept ::=
SS = 4	CP = 368	  Accept assign_op
SS = 4	CP = 368	  Deduce declaration
SS = 5	CP = 368	    Deduce term
SS = 6	CP = 368	      Deduce part
SS = 6	CP = 368	        Predict Failed in CONDITION
SS = 8	CP = 368	        Deduce declaration_part
SS = 8	CP = 368	          Match  (
SS = 8	CP = 368	          Accept (
SS = 9	CP = 369	          Deduce declaration
SS = 10	CP = 369	            Deduce term
SS = 11	CP = 369	              Deduce part
SS = 11	CP = 369	                Predict Failed in CONDITION
SS = 11	CP = 369	                Predict Failed in CONDITION
SS = 13	CP = 369	                Deduce alternative_part
SS = 13	CP = 369	                  Match  [
SS = 13	CP = 369	                  Accept [
SS = 14	CP = 370	                  Deduce declaration
SS = 15	CP = 370	                    Deduce term
SS = 16	CP = 370	                      Deduce part
SS = 16	CP = 370	                        Predict Failed in CONDITION
SS = 16	CP = 370	                        Predict Failed in CONDITION
SS = 16	CP = 370	                        Predict Failed in CONDITION
SS = 18	CP = 370	                        Deduce simple_part
SS = 18	CP = 370	                          Predict Failed in CONDITION
SS = 20	CP = 370	                          Deduce terminal_symbol
SS = 20	CP = 370	                            Predict Failed in CONDITION
SS = 20	CP = 370	                            Predict Failed in CONDITION
SS = 21	CP = 370	                            Match  token
SS = 21	CP = 370	                            Accept token
SS = 20	CP = 371	                          Accept terminal_symbol
SS = 18	CP = 371	                        Accept simple_part
SS = 16	CP = 371	                      Accept part
SS = 17	CP = 371	                      Match  ,
SS = 17	CP = 371	                      Reject ,
SS = 16	CP = 371	                      Predict Failed: part
SS = 15	CP = 371	                    Accept term
SS = 15	CP = 371	                    Match  |
SS = 15	CP = 371	                    Reject |
SS = 14	CP = 371	                  Accept declaration
SS = 13	CP = 371	                  Match  ]
SS = 13	CP = 371	                  Accept ]
SS = 13	CP = 372	                Accept alternative_part
SS = 11	CP = 372	              Accept part
SS = 12	CP = 372	              Match  ,
SS = 12	CP = 372	              Reject ,
SS = 12	CP = 372	              Deduce part
SS = 12	CP = 372	                Predict Failed in CONDITION
SS = 12	CP = 372	                Predict Failed in CONDITION
SS = 12	CP = 372	                Predict Failed in CONDITION
SS = 14	CP = 372	                Deduce simple_part
SS = 14	CP = 372	                  Predict Failed in CONDITION
SS = 16	CP = 372	                  Deduce terminal_symbol
SS = 17	CP = 372	                    Match  slit
SS = 17	CP = 372	                    Accept slit
SS = 16	CP = 373	                  Accept terminal_symbol
SS = 14	CP = 373	                Accept simple_part
SS = 12	CP = 373	              Accept part
SS = 12	CP = 373	              Match  ,
SS = 12	CP = 373	              Reject ,
SS = 12	CP = 373	              Deduce part
SS = 12	CP = 373	                Predict Failed in CONDITION
SS = 12	CP = 373	                Predict Failed in CONDITION
SS = 14	CP = 373	                Deduce alternative_part
SS = 14	CP = 373	                  Match  [
SS = 14	CP = 373	                  Accept [
SS = 15	CP = 374	                  Deduce declaration
SS = 16	CP = 374	                    Deduce term
SS = 17	CP = 374	                      Deduce part
SS = 17	CP = 374	                        Predict Failed in CONDITION
SS = 17	CP = 374	                        Predict Failed in CONDITION
SS = 17	CP = 374	                        Predict Failed in CONDITION
SS = 19	CP = 374	                        Deduce simple_part
SS = 19	CP = 374	                          Predict Failed in CONDITION
SS = 21	CP = 374	                          Deduce terminal_symbol
SS = 21	CP = 374	                            Predict Failed in CONDITION
SS = 21	CP = 374	                            Predict Failed in CONDITION
SS = 22	CP = 374	                            Match  token
SS = 22	CP = 374	                            Accept token
SS = 21	CP = 375	                          Accept terminal_symbol
SS = 19	CP = 375	                        Accept simple_part
SS = 17	CP = 375	                      Accept part
SS = 18	CP = 375	                      Match  ,
SS = 18	CP = 375	                      Reject ,
SS = 17	CP = 375	                      Predict Failed: part
SS = 16	CP = 375	                    Accept term
SS = 16	CP = 375	                    Match  |
SS = 16	CP = 375	                    Reject |
SS = 15	CP = 375	                  Accept declaration
SS = 14	CP = 375	                  Match  ]
SS = 14	CP = 375	                  Accept ]
SS = 14	CP = 376	                Accept alternative_part
SS = 12	CP = 376	              Accept part
SS = 12	CP = 376	              Match  ,
SS = 12	CP = 376	              Reject ,
SS = 12	CP = 376	              Deduce part
SS = 12	CP = 376	                Predict Failed in CONDITION
SS = 12	CP = 376	                Predict Failed in CONDITION
SS = 12	CP = 376	                Predict Failed in CONDITION
SS = 14	CP = 376	                Deduce simple_part
SS = 16	CP = 376	                  Deduce right_non_terminal_symbol
SS = 17	CP = 376	                    Deduce non_terminal_symbol
SS = 17	CP = 376	                      Match  id
SS = 17	CP = 376	                      Accept id
SS = 17	CP = 377	                    Accept non_terminal_symbol
SS = 16	CP = 377	                  Accept right_non_terminal_symbol
SS = 14	CP = 377	                Accept simple_part
SS = 12	CP = 377	              Accept part
SS = 12	CP = 377	              Match  ,
SS = 12	CP = 377	              Reject ,
SS = 12	CP = 377	              Deduce part
SS = 12	CP = 377	                Predict Failed in CONDITION
SS = 12	CP = 377	                Predict Failed in CONDITION
SS = 12	CP = 377	                Predict Failed in CONDITION
SS = 14	CP = 377	                Deduce simple_part
SS = 14	CP = 377	                  Predict Failed in CONDITION
SS = 16	CP = 377	                  Deduce terminal_symbol
SS = 17	CP = 377	                    Match  slit
SS = 17	CP = 377	                    Accept slit
SS = 16	CP = 378	                  Accept terminal_symbol
SS = 14	CP = 378	                Accept simple_part
SS = 12	CP = 378	              Accept part
SS = 12	CP = 378	              Match  ,
SS = 12	CP = 378	              Reject ,
SS = 11	CP = 378	              Predict Failed: part
SS = 10	CP = 378	            Accept term
SS = 10	CP = 378	            Match  |
SS = 10	CP = 378	            Accept |
SS = 11	CP = 379	            Deduce term
SS = 12	CP = 379	              Deduce part
SS = 12	CP = 379	                Predict Failed in CONDITION
SS = 12	CP = 379	                Predict Failed in CONDITION
SS = 12	CP = 379	                Predict Failed in CONDITION
SS = 14	CP = 379	                Deduce simple_part
SS = 14	CP = 379	                  Predict Failed in CONDITION
SS = 16	CP = 379	                  Deduce terminal_symbol
SS = 16	CP = 379	                    Predict Failed in CONDITION
SS = 16	CP = 379	                    Predict Failed in CONDITION
SS = 17	CP = 379	                    Match  token
SS = 17	CP = 379	                    Accept token
SS = 16	CP = 380	                  Accept terminal_symbol
SS = 14	CP = 380	                Accept simple_part
SS = 12	CP = 380	              Accept part
SS = 13	CP = 380	              Match  ,
SS = 13	CP = 380	              Reject ,
SS = 13	CP = 380	              Deduce part
SS = 13	CP = 380	                Predict Failed in CONDITION
SS = 13	CP = 380	                Predict Failed in CONDITION
SS = 13	CP = 380	                Predict Failed in CONDITION
SS = 15	CP = 380	                Deduce simple_part
SS = 17	CP = 380	                  Deduce right_non_terminal_symbol
SS = 18	CP = 380	                    Deduce non_terminal_symbol
SS = 18	CP = 380	                      Match  id
SS = 18	CP = 380	                      Accept id
SS = 18	CP = 381	                    Accept non_terminal_symbol
SS = 17	CP = 381	                  Accept right_non_terminal_symbol
SS = 15	CP = 381	                Accept simple_part
SS = 13	CP = 381	              Accept part
SS = 13	CP = 381	              Match  ,
SS = 13	CP = 381	              Reject ,
SS = 13	CP = 381	              Deduce part
SS = 13	CP = 381	                Predict Failed in CONDITION
SS = 13	CP = 381	                Predict Failed in CONDITION
SS = 13	CP = 381	                Predict Failed in CONDITION
SS = 15	CP = 381	                Deduce simple_part
SS = 15	CP = 381	                  Predict Failed in CONDITION
SS = 17	CP = 381	                  Deduce terminal_symbol
SS = 18	CP = 381	                    Match  slit
SS = 18	CP = 381	                    Accept slit
SS = 17	CP = 382	                  Accept terminal_symbol
SS = 15	CP = 382	                Accept simple_part
SS = 13	CP = 382	              Accept part
SS = 13	CP = 382	              Match  ,
SS = 13	CP = 382	              Reject ,
SS = 13	CP = 382	              Deduce part
SS = 13	CP = 382	                Predict Failed in CONDITION
SS = 13	CP = 382	                Predict Failed in CONDITION
SS = 13	CP = 382	                Predict Failed in CONDITION
SS = 15	CP = 382	                Deduce simple_part
SS = 15	CP = 382	                  Predict Failed in CONDITION
SS = 17	CP = 382	                  Deduce terminal_symbol
SS = 17	CP = 382	                    Predict Failed in CONDITION
SS = 17	CP = 382	                    Predict Failed in CONDITION
SS = 18	CP = 382	                    Match  token
SS = 18	CP = 382	                    Accept token
SS = 17	CP = 383	                  Accept terminal_symbol
SS = 15	CP = 383	                Accept simple_part
SS = 13	CP = 383	              Accept part
SS = 13	CP = 383	              Match  ,
SS = 13	CP = 383	              Reject ,
SS = 12	CP = 383	              Predict Failed: part
SS = 11	CP = 383	            Accept term
SS = 10	CP = 383	            Match  |
SS = 10	CP = 383	            Reject |
SS = 9	CP = 383	          Accept declaration
SS = 8	CP = 383	          Match  )
SS = 8	CP = 383	          Accept )
SS = 8	CP = 384	        Accept declaration_part
SS = 6	CP = 384	      Accept part
SS = 7	CP = 384	      Match  ,
SS = 7	CP = 384	      Reject ,
SS = 6	CP = 384	      Predict Failed: part
SS = 5	CP = 384	    Accept term
SS = 5	CP = 384	    Match  |
SS = 5	CP = 384	    Reject |
SS = 4	CP = 384	  Accept declaration
SS = 4	CP = 384	  Deduce end_op
SS = 5	CP = 384	    Match  ;
SS = 5	CP = 384	    Accept ;
SS = 4	CP = 385	  Accept end_op
SS = 3	CP = 385	Accept statement
SS = 3	CP = 385	Deduce statement
SS = 4	CP = 385	  Deduce non_terminal_symbol
SS = 4	CP = 385	    Match  id
SS = 4	CP = 385	    Accept id
SS = 4	CP = 386	  Accept non_terminal_symbol
SS = 4	CP = 386	  Deduce assign_op
SS = 5	CP = 386	    Match  ::=
SS = 5	CP = 386	    Accept ::=
SS = 4	CP = 387	  Accept assign_op
SS = 4	CP = 387	  Deduce declaration
SS = 5	CP = 387	    Deduce term
SS = 6	CP = 387	      Deduce part
SS = 6	CP = 387	        Predict Failed in CONDITION
SS = 6	CP = 387	        Predict Failed in CONDITION
SS = 6	CP = 387	        Predict Failed in CONDITION
SS = 8	CP = 387	        Deduce simple_part
SS = 8	CP = 387	          Predict Failed in CONDITION
SS = 10	CP = 387	          Deduce terminal_symbol
SS = 11	CP = 387	            Match  slit
SS = 11	CP = 387	            Accept slit
SS = 10	CP = 388	          Accept terminal_symbol
SS = 8	CP = 388	        Accept simple_part
SS = 6	CP = 388	      Accept part
SS = 7	CP = 388	      Match  ,
SS = 7	CP = 388	      Reject ,
SS = 7	CP = 388	      Deduce part
SS = 7	CP = 388	        Predict Failed in CONDITION
SS = 7	CP = 388	        Predict Failed in CONDITION
SS = 9	CP = 388	        Deduce alternative_part
SS = 9	CP = 388	          Match  [
SS = 9	CP = 388	          Accept [
SS = 10	CP = 389	          Deduce declaration
SS = 11	CP = 389	            Deduce term
SS = 12	CP = 389	              Deduce part
SS = 12	CP = 389	                Predict Failed in CONDITION
SS = 12	CP = 389	                Predict Failed in CONDITION
SS = 12	CP = 389	                Predict Failed in CONDITION
SS = 14	CP = 389	                Deduce simple_part
SS = 16	CP = 389	                  Deduce right_non_terminal_symbol
SS = 17	CP = 389	                    Deduce non_terminal_symbol
SS = 17	CP = 389	                      Match  id
SS = 17	CP = 389	                      Accept id
SS = 17	CP = 390	                    Accept non_terminal_symbol
SS = 16	CP = 390	                  Accept right_non_terminal_symbol
SS = 14	CP = 390	                Accept simple_part
SS = 12	CP = 390	              Accept part
SS = 13	CP = 390	              Match  ,
SS = 13	CP = 390	              Reject ,
SS = 12	CP = 390	              Predict Failed: part
SS = 11	CP = 390	            Accept term
SS = 11	CP = 390	            Match  |
SS = 11	CP = 390	            Reject |
SS = 10	CP = 390	          Accept declaration
SS = 9	CP = 390	          Match  ]
SS = 9	CP = 390	          Accept ]
SS = 9	CP = 391	        Accept alternative_part
SS = 7	CP = 391	      Accept part
SS = 7	CP = 391	      Match  ,
SS = 7	CP = 391	      Reject ,
SS = 7	CP = 391	      Deduce part
SS = 7	CP = 391	        Predict Failed in CONDITION
SS = 7	CP = 391	        Predict Failed in CONDITION
SS = 7	CP = 391	        Predict Failed in CONDITION
SS = 9	CP = 391	        Deduce simple_part
SS = 11	CP = 391	          Deduce right_non_terminal_symbol
SS = 12	CP = 391	            Deduce non_terminal_symbol
SS = 12	CP = 391	              Match  id
SS = 12	CP = 391	              Accept id
SS = 12	CP = 392	            Accept non_terminal_symbol
SS = 11	CP = 392	          Accept right_non_terminal_symbol
SS = 9	CP = 392	        Accept simple_part
SS = 7	CP = 392	      Accept part
SS = 7	CP = 392	      Match  ,
SS = 7	CP = 392	      Reject ,
SS = 6	CP = 392	      Predict Failed: part
SS = 5	CP = 392	    Accept term
SS = 5	CP = 392	    Match  |
SS = 5	CP = 392	    Reject |
SS = 4	CP = 392	  Accept declaration
SS = 4	CP = 392	  Deduce end_op
SS = 5	CP = 392	    Match  ;
SS = 5	CP = 392	    Accept ;
SS = 4	CP = 393	  Accept end_op
SS = 3	CP = 393	Accept statement
SS = 3	CP = 393	Deduce statement
SS = 4	CP = 393	  Deduce non_terminal_symbol
SS = 4	CP = 393	    Match  id
SS = 4	CP = 393	    Accept id
SS = 4	CP = 394	  Accept non_terminal_symbol
SS = 4	CP = 394	  Deduce assign_op
SS = 5	CP = 394	    Match  ::=
SS = 5	CP = 394	    Accept ::=
SS = 4	CP = 395	  Accept assign_op
SS = 4	CP = 395	  Deduce declaration
SS = 5	CP = 395	    Deduce term
SS = 6	CP = 395	      Deduce part
SS = 6	CP = 395	        Predict Failed in CONDITION
SS = 6	CP = 395	        Predict Failed in CONDITION
SS = 6	CP = 395	        Predict Failed in CONDITION
SS = 8	CP = 395	        Deduce simple_part
SS = 8	CP = 395	          Predict Failed in CONDITION
SS = 10	CP = 395	          Deduce terminal_symbol
SS = 11	CP = 395	            Match  slit
SS = 11	CP = 395	            Accept slit
SS = 10	CP = 396	          Accept terminal_symbol
SS = 8	CP = 396	        Accept simple_part
SS = 6	CP = 396	      Accept part
SS = 7	CP = 396	      Match  ,
SS = 7	CP = 396	      Reject ,
SS = 7	CP = 396	      Deduce part
SS = 7	CP = 396	        Predict Failed in CONDITION
SS = 7	CP = 396	        Predict Failed in CONDITION
SS = 7	CP = 396	        Predict Failed in CONDITION
SS = 9	CP = 396	        Deduce simple_part
SS = 9	CP = 396	          Predict Failed in CONDITION
SS = 11	CP = 396	          Deduce terminal_symbol
SS = 11	CP = 396	            Predict Failed in CONDITION
SS = 11	CP = 396	            Predict Failed in CONDITION
SS = 12	CP = 396	            Match  token
SS = 12	CP = 396	            Accept token
SS = 11	CP = 397	          Accept terminal_symbol
SS = 9	CP = 397	        Accept simple_part
SS = 7	CP = 397	      Accept part
SS = 7	CP = 397	      Match  ,
SS = 7	CP = 397	      Reject ,
SS = 7	CP = 397	      Deduce part
SS = 7	CP = 397	        Predict Failed in CONDITION
SS = 7	CP = 397	        Predict Failed in CONDITION
SS = 7	CP = 397	        Predict Failed in CONDITION
SS = 9	CP = 397	        Deduce simple_part
SS = 11	CP = 397	          Deduce right_non_terminal_symbol
SS = 12	CP = 397	            Deduce non_terminal_symbol
SS = 12	CP = 397	              Match  id
SS = 12	CP = 397	              Accept id
SS = 12	CP = 398	            Accept non_terminal_symbol
SS = 11	CP = 398	          Accept right_non_terminal_symbol
SS = 9	CP = 398	        Accept simple_part
SS = 7	CP = 398	      Accept part
SS = 7	CP = 398	      Match  ,
SS = 7	CP = 398	      Reject ,
SS = 7	CP = 398	      Deduce part
SS = 9	CP = 398	        Deduce repeat_part
SS = 9	CP = 398	          Match  {
SS = 9	CP = 398	          Accept {
SS = 10	CP = 399	          Deduce declaration
SS = 11	CP = 399	            Deduce term
SS = 12	CP = 399	              Deduce part
SS = 12	CP = 399	                Predict Failed in CONDITION
SS = 12	CP = 399	                Predict Failed in CONDITION
SS = 12	CP = 399	                Predict Failed in CONDITION
SS = 14	CP = 399	                Deduce simple_part
SS = 16	CP = 399	                  Deduce right_non_terminal_symbol
SS = 17	CP = 399	                    Deduce non_terminal_symbol
SS = 17	CP = 399	                      Match  id
SS = 17	CP = 399	                      Accept id
SS = 17	CP = 400	                    Accept non_terminal_symbol
SS = 16	CP = 400	                  Accept right_non_terminal_symbol
SS = 14	CP = 400	                Accept simple_part
SS = 12	CP = 400	              Accept part
SS = 13	CP = 400	              Match  ,
SS = 13	CP = 400	              Reject ,
SS = 13	CP = 400	              Deduce part
SS = 13	CP = 400	                Predict Failed in CONDITION
SS = 13	CP = 400	                Predict Failed in CONDITION
SS = 13	CP = 400	                Predict Failed in CONDITION
SS = 15	CP = 400	                Deduce simple_part
SS = 17	CP = 400	                  Deduce right_non_terminal_symbol
SS = 18	CP = 400	                    Deduce non_terminal_symbol
SS = 18	CP = 400	                      Match  id
SS = 18	CP = 400	                      Accept id
SS = 18	CP = 401	                    Accept non_terminal_symbol
SS = 17	CP = 401	                  Accept right_non_terminal_symbol
SS = 15	CP = 401	                Accept simple_part
SS = 13	CP = 401	              Accept part
SS = 13	CP = 401	              Match  ,
SS = 13	CP = 401	              Reject ,
SS = 12	CP = 401	              Predict Failed: part
SS = 11	CP = 401	            Accept term
SS = 11	CP = 401	            Match  |
SS = 11	CP = 401	            Reject |
SS = 10	CP = 401	          Accept declaration
SS = 9	CP = 401	          Match  }
SS = 9	CP = 401	          Accept }
SS = 9	CP = 402	        Accept repeat_part
SS = 7	CP = 402	      Accept part
SS = 7	CP = 402	      Match  ,
SS = 7	CP = 402	      Reject ,
SS = 7	CP = 402	      Deduce part
SS = 7	CP = 402	        Predict Failed in CONDITION
SS = 7	CP = 402	        Predict Failed in CONDITION
SS = 7	CP = 402	        Predict Failed in CONDITION
SS = 9	CP = 402	        Deduce simple_part
SS = 9	CP = 402	          Predict Failed in CONDITION
SS = 11	CP = 402	          Deduce terminal_symbol
SS = 12	CP = 402	            Match  slit
SS = 12	CP = 402	            Accept slit
SS = 11	CP = 403	          Accept terminal_symbol
SS = 9	CP = 403	        Accept simple_part
SS = 7	CP = 403	      Accept part
SS = 7	CP = 403	      Match  ,
SS = 7	CP = 403	      Reject ,
SS = 7	CP = 403	      Deduce part
SS = 7	CP = 403	        Predict Failed in CONDITION
SS = 7	CP = 403	        Predict Failed in CONDITION
SS = 7	CP = 403	        Predict Failed in CONDITION
SS = 9	CP = 403	        Deduce simple_part
SS = 9	CP = 403	          Predict Failed in CONDITION
SS = 11	CP = 403	          Deduce terminal_symbol
SS = 11	CP = 403	            Predict Failed in CONDITION
SS = 11	CP = 403	            Predict Failed in CONDITION
SS = 12	CP = 403	            Match  token
SS = 12	CP = 403	            Accept token
SS = 11	CP = 404	          Accept terminal_symbol
SS = 9	CP = 404	        Accept simple_part
SS = 7	CP = 404	      Accept part
SS = 7	CP = 404	      Match  ,
SS = 7	CP = 404	      Reject ,
SS = 6	CP = 404	      Predict Failed: part
SS = 5	CP = 404	    Accept term
SS = 5	CP = 404	    Match  |
SS = 5	CP = 404	    Reject |
SS = 4	CP = 404	  Accept declaration
SS = 4	CP = 404	  Deduce end_op
SS = 5	CP = 404	    Match  ;
SS = 5	CP = 404	    Accept ;
SS = 4	CP = 405	  Accept end_op
SS = 3	CP = 405	Accept statement
SS = 3	CP = 405	Deduce statement
SS = 4	CP = 405	  Deduce non_terminal_symbol
SS = 4	CP = 405	    Match  id
SS = 4	CP = 405	    Accept id
SS = 4	CP = 406	  Accept non_terminal_symbol
SS = 4	CP = 406	  Deduce assign_op
SS = 5	CP = 406	    Match  ::=
SS = 5	CP = 406	    Accept ::=
SS = 4	CP = 407	  Accept assign_op
SS = 4	CP = 407	  Deduce declaration
SS = 5	CP = 407	    Deduce term
SS = 6	CP = 407	      Deduce part
SS = 6	CP = 407	        Predict Failed in CONDITION
SS = 6	CP = 407	        Predict Failed in CONDITION
SS = 6	CP = 407	        Predict Failed in CONDITION
SS = 8	CP = 407	        Deduce simple_part
SS = 8	CP = 407	          Predict Failed in CONDITION
SS = 10	CP = 407	          Deduce terminal_symbol
SS = 11	CP = 407	            Match  slit
SS = 11	CP = 407	            Accept slit
SS = 10	CP = 408	          Accept terminal_symbol
SS = 8	CP = 408	        Accept simple_part
SS = 6	CP = 408	      Accept part
SS = 7	CP = 408	      Match  ,
SS = 7	CP = 408	      Reject ,
SS = 7	CP = 408	      Deduce part
SS = 7	CP = 408	        Predict Failed in CONDITION
SS = 7	CP = 408	        Predict Failed in CONDITION
SS = 7	CP = 408	        Predict Failed in CONDITION
SS = 9	CP = 408	        Deduce simple_part
SS = 9	CP = 408	          Predict Failed in CONDITION
SS = 11	CP = 408	          Deduce terminal_symbol
SS = 11	CP = 408	            Predict Failed in CONDITION
SS = 11	CP = 408	            Predict Failed in CONDITION
SS = 12	CP = 408	            Match  token
SS = 12	CP = 408	            Accept token
SS = 11	CP = 409	          Accept terminal_symbol
SS = 9	CP = 409	        Accept simple_part
SS = 7	CP = 409	      Accept part
SS = 7	CP = 409	      Match  ,
SS = 7	CP = 409	      Reject ,
SS = 7	CP = 409	      Deduce part
SS = 7	CP = 409	        Predict Failed in CONDITION
SS = 7	CP = 409	        Predict Failed in CONDITION
SS = 9	CP = 409	        Deduce alternative_part
SS = 9	CP = 409	          Match  [
SS = 9	CP = 409	          Accept [
SS = 10	CP = 410	          Deduce declaration
SS = 11	CP = 410	            Deduce term
SS = 12	CP = 410	              Deduce part
SS = 12	CP = 410	                Predict Failed in CONDITION
SS = 12	CP = 410	                Predict Failed in CONDITION
SS = 12	CP = 410	                Predict Failed in CONDITION
SS = 14	CP = 410	                Deduce simple_part
SS = 14	CP = 410	                  Predict Failed in CONDITION
SS = 16	CP = 410	                  Deduce terminal_symbol
SS = 17	CP = 410	                    Match  slit
SS = 17	CP = 410	                    Accept slit
SS = 16	CP = 411	                  Accept terminal_symbol
SS = 14	CP = 411	                Accept simple_part
SS = 12	CP = 411	              Accept part
SS = 13	CP = 411	              Match  ,
SS = 13	CP = 411	              Reject ,
SS = 13	CP = 411	              Deduce part
SS = 13	CP = 411	                Predict Failed in CONDITION
SS = 13	CP = 411	                Predict Failed in CONDITION
SS = 13	CP = 411	                Predict Failed in CONDITION
SS = 15	CP = 411	                Deduce simple_part
SS = 17	CP = 411	                  Deduce right_non_terminal_symbol
SS = 18	CP = 411	                    Deduce non_terminal_symbol
SS = 18	CP = 411	                      Match  id
SS = 18	CP = 411	                      Accept id
SS = 18	CP = 412	                    Accept non_terminal_symbol
SS = 17	CP = 412	                  Accept right_non_terminal_symbol
SS = 15	CP = 412	                Accept simple_part
SS = 13	CP = 412	              Accept part
SS = 13	CP = 412	              Match  ,
SS = 13	CP = 412	              Reject ,
SS = 12	CP = 412	              Predict Failed: part
SS = 11	CP = 412	            Accept term
SS = 11	CP = 412	            Match  |
SS = 11	CP = 412	            Reject |
SS = 10	CP = 412	          Accept declaration
SS = 9	CP = 412	          Match  ]
SS = 9	CP = 412	          Accept ]
SS = 9	CP = 413	        Accept alternative_part
SS = 7	CP = 413	      Accept part
SS = 7	CP = 413	      Match  ,
SS = 7	CP = 413	      Reject ,
SS = 7	CP = 413	      Deduce part
SS = 7	CP = 413	        Predict Failed in CONDITION
SS = 7	CP = 413	        Predict Failed in CONDITION
SS = 7	CP = 413	        Predict Failed in CONDITION
SS = 9	CP = 413	        Deduce simple_part
SS = 9	CP = 413	          Predict Failed in CONDITION
SS = 11	CP = 413	          Deduce terminal_symbol
SS = 11	CP = 413	            Predict Failed in CONDITION
SS = 11	CP = 413	            Predict Failed in CONDITION
SS = 12	CP = 413	            Match  token
SS = 12	CP = 413	            Accept token
SS = 11	CP = 414	          Accept terminal_symbol
SS = 9	CP = 414	        Accept simple_part
SS = 7	CP = 414	      Accept part
SS = 7	CP = 414	      Match  ,
SS = 7	CP = 414	      Reject ,
SS = 6	CP = 414	      Predict Failed: part
SS = 5	CP = 414	    Accept term
SS = 5	CP = 414	    Match  |
SS = 5	CP = 414	    Reject |
SS = 4	CP = 414	  Accept declaration
SS = 4	CP = 414	  Deduce end_op
SS = 5	CP = 414	    Match  ;
SS = 5	CP = 414	    Accept ;
SS = 4	CP = 415	  Accept end_op
SS = 3	CP = 415	Accept statement
SS = 3	CP = 415	Deduce statement
SS = 4	CP = 415	  Deduce non_terminal_symbol
SS = 4	CP = 415	    Match  id
SS = 4	CP = 415	    Accept id
SS = 4	CP = 416	  Accept non_terminal_symbol
SS = 4	CP = 416	  Deduce assign_op
SS = 5	CP = 416	    Match  ::=
SS = 5	CP = 416	    Accept ::=
SS = 4	CP = 417	  Accept assign_op
SS = 4	CP = 417	  Deduce declaration
SS = 5	CP = 417	    Deduce term
SS = 6	CP = 417	      Deduce part
SS = 6	CP = 417	        Predict Failed in CONDITION
SS = 6	CP = 417	        Predict Failed in CONDITION
SS = 6	CP = 417	        Predict Failed in CONDITION
SS = 8	CP = 417	        Deduce simple_part
SS = 8	CP = 417	          Predict Failed in CONDITION
SS = 10	CP = 417	          Deduce terminal_symbol
SS = 11	CP = 417	            Match  slit
SS = 11	CP = 417	            Accept slit
SS = 10	CP = 418	          Accept terminal_symbol
SS = 8	CP = 418	        Accept simple_part
SS = 6	CP = 418	      Accept part
SS = 7	CP = 418	      Match  ,
SS = 7	CP = 418	      Reject ,
SS = 7	CP = 418	      Deduce part
SS = 7	CP = 418	        Predict Failed in CONDITION
SS = 7	CP = 418	        Predict Failed in CONDITION
SS = 9	CP = 418	        Deduce alternative_part
SS = 9	CP = 418	          Match  [
SS = 9	CP = 418	          Accept [
SS = 10	CP = 419	          Deduce declaration
SS = 11	CP = 419	            Deduce term
SS = 12	CP = 419	              Deduce part
SS = 12	CP = 419	                Predict Failed in CONDITION
SS = 12	CP = 419	                Predict Failed in CONDITION
SS = 12	CP = 419	                Predict Failed in CONDITION
SS = 14	CP = 419	                Deduce simple_part
SS = 16	CP = 419	                  Deduce right_non_terminal_symbol
SS = 17	CP = 419	                    Deduce non_terminal_symbol
SS = 17	CP = 419	                      Match  id
SS = 17	CP = 419	                      Accept id
SS = 17	CP = 420	                    Accept non_terminal_symbol
SS = 16	CP = 420	                  Accept right_non_terminal_symbol
SS = 14	CP = 420	                Accept simple_part
SS = 12	CP = 420	              Accept part
SS = 13	CP = 420	              Match  ,
SS = 13	CP = 420	              Reject ,
SS = 12	CP = 420	              Predict Failed: part
SS = 11	CP = 420	            Accept term
SS = 11	CP = 420	            Match  |
SS = 11	CP = 420	            Reject |
SS = 10	CP = 420	          Accept declaration
SS = 9	CP = 420	          Match  ]
SS = 9	CP = 420	          Accept ]
SS = 9	CP = 421	        Accept alternative_part
SS = 7	CP = 421	      Accept part
SS = 7	CP = 421	      Match  ,
SS = 7	CP = 421	      Reject ,
SS = 7	CP = 421	      Deduce part
SS = 7	CP = 421	        Predict Failed in CONDITION
SS = 7	CP = 421	        Predict Failed in CONDITION
SS = 7	CP = 421	        Predict Failed in CONDITION
SS = 9	CP = 421	        Deduce simple_part
SS = 11	CP = 421	          Deduce right_non_terminal_symbol
SS = 12	CP = 421	            Deduce non_terminal_symbol
SS = 12	CP = 421	              Match  id
SS = 12	CP = 421	              Accept id
SS = 12	CP = 422	            Accept non_terminal_symbol
SS = 11	CP = 422	          Accept right_non_terminal_symbol
SS = 9	CP = 422	        Accept simple_part
SS = 7	CP = 422	      Accept part
SS = 7	CP = 422	      Match  ,
SS = 7	CP = 422	      Reject ,
SS = 6	CP = 422	      Predict Failed: part
SS = 5	CP = 422	    Accept term
SS = 5	CP = 422	    Match  |
SS = 5	CP = 422	    Reject |
SS = 4	CP = 422	  Accept declaration
SS = 4	CP = 422	  Deduce end_op
SS = 5	CP = 422	    Match  ;
SS = 5	CP = 422	    Accept ;
SS = 4	CP = 423	  Accept end_op
SS = 3	CP = 423	Accept statement
SS = 3	CP = 423	Deduce statement
SS = 4	CP = 423	  Deduce non_terminal_symbol
SS = 4	CP = 423	    Match  id
SS = 4	CP = 423	    Accept id
SS = 4	CP = 424	  Accept non_terminal_symbol
SS = 4	CP = 424	  Deduce assign_op
SS = 5	CP = 424	    Match  ::=
SS = 5	CP = 424	    Accept ::=
SS = 4	CP = 425	  Accept assign_op
SS = 4	CP = 425	  Deduce declaration
SS = 5	CP = 425	    Deduce term
SS = 6	CP = 425	      Deduce part
SS = 6	CP = 425	        Predict Failed in CONDITION
SS = 8	CP = 425	        Deduce declaration_part
SS = 8	CP = 425	          Match  (
SS = 8	CP = 425	          Accept (
SS = 9	CP = 426	          Deduce declaration
SS = 10	CP = 426	            Deduce term
SS = 11	CP = 426	              Deduce part
SS = 11	CP = 426	                Predict Failed in CONDITION
SS = 11	CP = 426	                Predict Failed in CONDITION
SS = 11	CP = 426	                Predict Failed in CONDITION
SS = 13	CP = 426	                Deduce simple_part
SS = 13	CP = 426	                  Predict Failed in CONDITION
SS = 15	CP = 426	                  Deduce terminal_symbol
SS = 16	CP = 426	                    Match  slit
SS = 16	CP = 426	                    Accept slit
SS = 15	CP = 427	                  Accept terminal_symbol
SS = 13	CP = 427	                Accept simple_part
SS = 11	CP = 427	              Accept part
SS = 12	CP = 427	              Match  ,
SS = 12	CP = 427	              Reject ,
SS = 11	CP = 427	              Predict Failed: part
SS = 10	CP = 427	            Accept term
SS = 10	CP = 427	            Match  |
SS = 10	CP = 427	            Accept |
SS = 11	CP = 428	            Deduce term
SS = 12	CP = 428	              Deduce part
SS = 12	CP = 428	                Predict Failed in CONDITION
SS = 12	CP = 428	                Predict Failed in CONDITION
SS = 12	CP = 428	                Predict Failed in CONDITION
SS = 14	CP = 428	                Deduce simple_part
SS = 14	CP = 428	                  Predict Failed in CONDITION
SS = 16	CP = 428	                  Deduce terminal_symbol
SS = 17	CP = 428	                    Match  slit
SS = 17	CP = 428	                    Accept slit
SS = 16	CP = 429	                  Accept terminal_symbol
SS = 14	CP = 429	                Accept simple_part
SS = 12	CP = 429	              Accept part
SS = 13	CP = 429	              Match  ,
SS = 13	CP = 429	              Reject ,
SS = 12	CP = 429	              Predict Failed: part
SS = 11	CP = 429	            Accept term
SS = 10	CP = 429	            Match  |
SS = 10	CP = 429	            Reject |
SS = 9	CP = 429	          Accept declaration
SS = 8	CP = 429	          Match  )
SS = 8	CP = 429	          Accept )
SS = 8	CP = 430	        Accept declaration_part
SS = 6	CP = 430	      Accept part
SS = 7	CP = 430	      Match  ,
SS = 7	CP = 430	      Reject ,
SS = 7	CP = 430	      Deduce part
SS = 7	CP = 430	        Predict Failed in CONDITION
SS = 7	CP = 430	        Predict Failed in CONDITION
SS = 7	CP = 430	        Predict Failed in CONDITION
SS = 9	CP = 430	        Deduce simple_part
SS = 9	CP = 430	          Predict Failed in CONDITION
SS = 11	CP = 430	          Deduce terminal_symbol
SS = 11	CP = 430	            Predict Failed in CONDITION
SS = 11	CP = 430	            Predict Failed in CONDITION
SS = 12	CP = 430	            Match  token
SS = 12	CP = 430	            Accept token
SS = 11	CP = 431	          Accept terminal_symbol
SS = 9	CP = 431	        Accept simple_part
SS = 7	CP = 431	      Accept part
SS = 7	CP = 431	      Match  ,
SS = 7	CP = 431	      Reject ,
SS = 7	CP = 431	      Deduce part
SS = 7	CP = 431	        Predict Failed in CONDITION
SS = 7	CP = 431	        Predict Failed in CONDITION
SS = 9	CP = 431	        Deduce alternative_part
SS = 9	CP = 431	          Match  [
SS = 9	CP = 431	          Accept [
SS = 10	CP = 432	          Deduce declaration
SS = 11	CP = 432	            Deduce term
SS = 12	CP = 432	              Deduce part
SS = 12	CP = 432	                Predict Failed in CONDITION
SS = 12	CP = 432	                Predict Failed in CONDITION
SS = 12	CP = 432	                Predict Failed in CONDITION
SS = 14	CP = 432	                Deduce simple_part
SS = 14	CP = 432	                  Predict Failed in CONDITION
SS = 16	CP = 432	                  Deduce terminal_symbol
SS = 17	CP = 432	                    Match  slit
SS = 17	CP = 432	                    Accept slit
SS = 16	CP = 433	                  Accept terminal_symbol
SS = 14	CP = 433	                Accept simple_part
SS = 12	CP = 433	              Accept part
SS = 13	CP = 433	              Match  ,
SS = 13	CP = 433	              Reject ,
SS = 13	CP = 433	              Deduce part
SS = 13	CP = 433	                Predict Failed in CONDITION
SS = 13	CP = 433	                Predict Failed in CONDITION
SS = 13	CP = 433	                Predict Failed in CONDITION
SS = 15	CP = 433	                Deduce simple_part
SS = 17	CP = 433	                  Deduce right_non_terminal_symbol
SS = 18	CP = 433	                    Deduce non_terminal_symbol
SS = 18	CP = 433	                      Match  id
SS = 18	CP = 433	                      Accept id
SS = 18	CP = 434	                    Accept non_terminal_symbol
SS = 17	CP = 434	                  Accept right_non_terminal_symbol
SS = 15	CP = 434	                Accept simple_part
SS = 13	CP = 434	              Accept part
SS = 13	CP = 434	              Match  ,
SS = 13	CP = 434	              Reject ,
SS = 12	CP = 434	              Predict Failed: part
SS = 11	CP = 434	            Accept term
SS = 11	CP = 434	            Match  |
SS = 11	CP = 434	            Reject |
SS = 10	CP = 434	          Accept declaration
SS = 9	CP = 434	          Match  ]
SS = 9	CP = 434	          Accept ]
SS = 9	CP = 435	        Accept alternative_part
SS = 7	CP = 435	      Accept part
SS = 7	CP = 435	      Match  ,
SS = 7	CP = 435	      Reject ,
SS = 7	CP = 435	      Deduce part
SS = 7	CP = 435	        Predict Failed in CONDITION
SS = 7	CP = 435	        Predict Failed in CONDITION
SS = 7	CP = 435	        Predict Failed in CONDITION
SS = 9	CP = 435	        Deduce simple_part
SS = 9	CP = 435	          Predict Failed in CONDITION
SS = 11	CP = 435	          Deduce terminal_symbol
SS = 11	CP = 435	            Predict Failed in CONDITION
SS = 11	CP = 435	            Predict Failed in CONDITION
SS = 12	CP = 435	            Match  token
SS = 12	CP = 435	            Accept token
SS = 11	CP = 436	          Accept terminal_symbol
SS = 9	CP = 436	        Accept simple_part
SS = 7	CP = 436	      Accept part
SS = 7	CP = 436	      Match  ,
SS = 7	CP = 436	      Reject ,
SS = 7	CP = 436	      Deduce part
SS = 7	CP = 436	        Predict Failed in CONDITION
SS = 7	CP = 436	        Predict Failed in CONDITION
SS = 7	CP = 436	        Predict Failed in CONDITION
SS = 9	CP = 436	        Deduce simple_part
SS = 11	CP = 436	          Deduce right_non_terminal_symbol
SS = 12	CP = 436	            Deduce non_terminal_symbol
SS = 12	CP = 436	              Match  id
SS = 12	CP = 436	              Accept id
SS = 12	CP = 437	            Accept non_terminal_symbol
SS = 11	CP = 437	          Accept right_non_terminal_symbol
SS = 9	CP = 437	        Accept simple_part
SS = 7	CP = 437	      Accept part
SS = 7	CP = 437	      Match  ,
SS = 7	CP = 437	      Reject ,
SS = 7	CP = 437	      Deduce part
SS = 7	CP = 437	        Predict Failed in CONDITION
SS = 7	CP = 437	        Predict Failed in CONDITION
SS = 7	CP = 437	        Predict Failed in CONDITION
SS = 9	CP = 437	        Deduce simple_part
SS = 9	CP = 437	          Predict Failed in CONDITION
SS = 11	CP = 437	          Deduce terminal_symbol
SS = 12	CP = 437	            Match  slit
SS = 12	CP = 437	            Accept slit
SS = 11	CP = 438	          Accept terminal_symbol
SS = 9	CP = 438	        Accept simple_part
SS = 7	CP = 438	      Accept part
SS = 7	CP = 438	      Match  ,
SS = 7	CP = 438	      Reject ,
SS = 7	CP = 438	      Deduce part
SS = 7	CP = 438	        Predict Failed in CONDITION
SS = 7	CP = 438	        Predict Failed in CONDITION
SS = 7	CP = 438	        Predict Failed in CONDITION
SS = 9	CP = 438	        Deduce simple_part
SS = 9	CP = 438	          Predict Failed in CONDITION
SS = 11	CP = 438	          Deduce terminal_symbol
SS = 11	CP = 438	            Predict Failed in CONDITION
SS = 11	CP = 438	            Predict Failed in CONDITION
SS = 12	CP = 438	            Match  token
SS = 12	CP = 438	            Accept token
SS = 11	CP = 439	          Accept terminal_symbol
SS = 9	CP = 439	        Accept simple_part
SS = 7	CP = 439	      Accept part
SS = 7	CP = 439	      Match  ,
SS = 7	CP = 439	      Reject ,
SS = 6	CP = 439	      Predict Failed: part
SS = 5	CP = 439	    Accept term
SS = 5	CP = 439	    Match  |
SS = 5	CP = 439	    Reject |
SS = 4	CP = 439	  Accept declaration
SS = 4	CP = 439	  Deduce end_op
SS = 5	CP = 439	    Match  ;
SS = 5	CP = 439	    Accept ;
SS = 4	CP = 440	  Accept end_op
SS = 3	CP = 440	Accept statement
SS = 3	CP = 440	Deduce statement
SS = 4	CP = 440	  Deduce non_terminal_symbol
SS = 4	CP = 440	    Match  id
SS = 4	CP = 440	    Accept id
SS = 4	CP = 441	  Accept non_terminal_symbol
SS = 4	CP = 441	  Deduce assign_op
SS = 5	CP = 441	    Match  ::=
SS = 5	CP = 441	    Accept ::=
SS = 4	CP = 442	  Accept assign_op
SS = 4	CP = 442	  Deduce declaration
SS = 5	CP = 442	    Deduce term
SS = 6	CP = 442	      Deduce part
SS = 6	CP = 442	        Predict Failed in CONDITION
SS = 8	CP = 442	        Deduce declaration_part
SS = 8	CP = 442	          Match  (
SS = 8	CP = 442	          Accept (
SS = 9	CP = 443	          Deduce declaration
SS = 10	CP = 443	            Deduce term
SS = 11	CP = 443	              Deduce part
SS = 11	CP = 443	                Predict Failed in CONDITION
SS = 11	CP = 443	                Predict Failed in CONDITION
SS = 11	CP = 443	                Predict Failed in CONDITION
SS = 13	CP = 443	                Deduce simple_part
SS = 13	CP = 443	                  Predict Failed in CONDITION
SS = 15	CP = 443	                  Deduce terminal_symbol
SS = 16	CP = 443	                    Match  slit
SS = 16	CP = 443	                    Accept slit
SS = 15	CP = 444	                  Accept terminal_symbol
SS = 13	CP = 444	                Accept simple_part
SS = 11	CP = 444	              Accept part
SS = 12	CP = 444	              Match  ,
SS = 12	CP = 444	              Reject ,
SS = 11	CP = 444	              Predict Failed: part
SS = 10	CP = 444	            Accept term
SS = 10	CP = 444	            Match  |
SS = 10	CP = 444	            Accept |
SS = 11	CP = 445	            Deduce term
SS = 12	CP = 445	              Deduce part
SS = 12	CP = 445	                Predict Failed in CONDITION
SS = 12	CP = 445	                Predict Failed in CONDITION
SS = 12	CP = 445	                Predict Failed in CONDITION
SS = 14	CP = 445	                Deduce simple_part
SS = 14	CP = 445	                  Predict Failed in CONDITION
SS = 16	CP = 445	                  Deduce terminal_symbol
SS = 17	CP = 445	                    Match  slit
SS = 17	CP = 445	                    Accept slit
SS = 16	CP = 446	                  Accept terminal_symbol
SS = 14	CP = 446	                Accept simple_part
SS = 12	CP = 446	              Accept part
SS = 13	CP = 446	              Match  ,
SS = 13	CP = 446	              Reject ,
SS = 12	CP = 446	              Predict Failed: part
SS = 11	CP = 446	            Accept term
SS = 10	CP = 446	            Match  |
SS = 10	CP = 446	            Reject |
SS = 9	CP = 446	          Accept declaration
SS = 8	CP = 446	          Match  )
SS = 8	CP = 446	          Accept )
SS = 8	CP = 447	        Accept declaration_part
SS = 6	CP = 447	      Accept part
SS = 7	CP = 447	      Match  ,
SS = 7	CP = 447	      Reject ,
SS = 7	CP = 447	      Deduce part
SS = 7	CP = 447	        Predict Failed in CONDITION
SS = 7	CP = 447	        Predict Failed in CONDITION
SS = 7	CP = 447	        Predict Failed in CONDITION
SS = 9	CP = 447	        Deduce simple_part
SS = 11	CP = 447	          Deduce right_non_terminal_symbol
SS = 12	CP = 447	            Deduce non_terminal_symbol
SS = 12	CP = 447	              Match  id
SS = 12	CP = 447	              Accept id
SS = 12	CP = 448	            Accept non_terminal_symbol
SS = 11	CP = 448	          Accept right_non_terminal_symbol
SS = 9	CP = 448	        Accept simple_part
SS = 7	CP = 448	      Accept part
SS = 7	CP = 448	      Match  ,
SS = 7	CP = 448	      Reject ,
SS = 6	CP = 448	      Predict Failed: part
SS = 5	CP = 448	    Accept term
SS = 5	CP = 448	    Match  |
SS = 5	CP = 448	    Reject |
SS = 4	CP = 448	  Accept declaration
SS = 4	CP = 448	  Deduce end_op
SS = 5	CP = 448	    Match  ;
SS = 5	CP = 448	    Accept ;
SS = 4	CP = 449	  Accept end_op
SS = 3	CP = 449	Accept statement
SS = 3	CP = 449	Deduce statement
SS = 4	CP = 449	  Deduce non_terminal_symbol
SS = 4	CP = 449	    Match  id
SS = 4	CP = 449	    Accept id
SS = 4	CP = 450	  Accept non_terminal_symbol
SS = 4	CP = 450	  Deduce assign_op
SS = 5	CP = 450	    Match  ::=
SS = 5	CP = 450	    Accept ::=
SS = 4	CP = 451	  Accept assign_op
SS = 4	CP = 451	  Deduce declaration
SS = 5	CP = 451	    Deduce term
SS = 6	CP = 451	      Deduce part
SS = 6	CP = 451	        Predict Failed in CONDITION
SS = 6	CP = 451	        Predict Failed in CONDITION
SS = 6	CP = 451	        Predict Failed in CONDITION
SS = 8	CP = 451	        Deduce simple_part
SS = 10	CP = 451	          Deduce right_non_terminal_symbol
SS = 11	CP = 451	            Deduce non_terminal_symbol
SS = 11	CP = 451	              Match  id
SS = 11	CP = 451	              Accept id
SS = 11	CP = 452	            Accept non_terminal_symbol
SS = 10	CP = 452	          Accept right_non_terminal_symbol
SS = 8	CP = 452	        Accept simple_part
SS = 6	CP = 452	      Accept part
SS = 7	CP = 452	      Match  ,
SS = 7	CP = 452	      Reject ,
SS = 7	CP = 452	      Deduce part
SS = 7	CP = 452	        Predict Failed in CONDITION
SS = 7	CP = 452	        Predict Failed in CONDITION
SS = 7	CP = 452	        Predict Failed in CONDITION
SS = 9	CP = 452	        Deduce simple_part
SS = 11	CP = 452	          Deduce right_non_terminal_symbol
SS = 12	CP = 452	            Deduce non_terminal_symbol
SS = 12	CP = 452	              Match  id
SS = 12	CP = 452	              Accept id
SS = 12	CP = 453	            Accept non_terminal_symbol
SS = 11	CP = 453	          Accept right_non_terminal_symbol
SS = 9	CP = 453	        Accept simple_part
SS = 7	CP = 453	      Accept part
SS = 7	CP = 453	      Match  ,
SS = 7	CP = 453	      Reject ,
SS = 6	CP = 453	      Predict Failed: part
SS = 5	CP = 453	    Accept term
SS = 5	CP = 453	    Match  |
SS = 5	CP = 453	    Reject |
SS = 4	CP = 453	  Accept declaration
SS = 4	CP = 453	  Deduce end_op
SS = 5	CP = 453	    Match  ;
SS = 5	CP = 453	    Accept ;
SS = 4	CP = 454	  Accept end_op
SS = 3	CP = 454	Accept statement
SS = 3	CP = 454	Deduce statement
SS = 4	CP = 454	  Deduce non_terminal_symbol
SS = 4	CP = 454	    Match  id
SS = 4	CP = 454	    Accept id
SS = 4	CP = 455	  Accept non_terminal_symbol
SS = 4	CP = 455	  Deduce assign_op
SS = 5	CP = 455	    Match  ::=
SS = 5	CP = 455	    Accept ::=
SS = 4	CP = 456	  Accept assign_op
SS = 4	CP = 456	  Deduce declaration
SS = 5	CP = 456	    Deduce term
SS = 6	CP = 456	      Deduce part
SS = 6	CP = 456	        Predict Failed in CONDITION
SS = 6	CP = 456	        Predict Failed in CONDITION
SS = 6	CP = 456	        Predict Failed in CONDITION
SS = 8	CP = 456	        Deduce simple_part
SS = 8	CP = 456	          Predict Failed in CONDITION
SS = 10	CP = 456	          Deduce terminal_symbol
SS = 11	CP = 456	            Match  slit
SS = 11	CP = 456	            Accept slit
SS = 10	CP = 457	          Accept terminal_symbol
SS = 8	CP = 457	        Accept simple_part
SS = 6	CP = 457	      Accept part
SS = 7	CP = 457	      Match  ,
SS = 7	CP = 457	      Reject ,
SS = 7	CP = 457	      Deduce part
SS = 7	CP = 457	        Predict Failed in CONDITION
SS = 7	CP = 457	        Predict Failed in CONDITION
SS = 7	CP = 457	        Predict Failed in CONDITION
SS = 9	CP = 457	        Deduce simple_part
SS = 9	CP = 457	          Predict Failed in CONDITION
SS = 11	CP = 457	          Deduce terminal_symbol
SS = 11	CP = 457	            Predict Failed in CONDITION
SS = 11	CP = 457	            Predict Failed in CONDITION
SS = 12	CP = 457	            Match  token
SS = 12	CP = 457	            Accept token
SS = 11	CP = 458	          Accept terminal_symbol
SS = 9	CP = 458	        Accept simple_part
SS = 7	CP = 458	      Accept part
SS = 7	CP = 458	      Match  ,
SS = 7	CP = 458	      Reject ,
SS = 6	CP = 458	      Predict Failed: part
SS = 5	CP = 458	    Accept term
SS = 5	CP = 458	    Match  |
SS = 5	CP = 458	    Reject |
SS = 4	CP = 458	  Accept declaration
SS = 4	CP = 458	  Deduce end_op
SS = 5	CP = 458	    Match  ;
SS = 5	CP = 458	    Accept ;
SS = 4	CP = 459	  Accept end_op
SS = 3	CP = 459	Accept statement
SS = 3	CP = 459	Deduce statement
SS = 4	CP = 459	  Deduce non_terminal_symbol
SS = 4	CP = 459	    Match  id
SS = 4	CP = 459	    Accept id
SS = 4	CP = 460	  Accept non_terminal_symbol
SS = 4	CP = 460	  Deduce assign_op
SS = 5	CP = 460	    Match  ::=
SS = 5	CP = 460	    Accept ::=
SS = 4	CP = 461	  Accept assign_op
SS = 4	CP = 461	  Deduce declaration
SS = 5	CP = 461	    Deduce term
SS = 6	CP = 461	      Deduce part
SS = 6	CP = 461	        Predict Failed in CONDITION
SS = 6	CP = 461	        Predict Failed in CONDITION
SS = 6	CP = 461	        Predict Failed in CONDITION
SS = 8	CP = 461	        Deduce simple_part
SS = 10	CP = 461	          Deduce right_non_terminal_symbol
SS = 11	CP = 461	            Deduce non_terminal_symbol
SS = 11	CP = 461	              Match  id
SS = 11	CP = 461	              Accept id
SS = 11	CP = 462	            Accept non_terminal_symbol
SS = 10	CP = 462	          Accept right_non_terminal_symbol
SS = 8	CP = 462	        Accept simple_part
SS = 6	CP = 462	      Accept part
SS = 7	CP = 462	      Match  ,
SS = 7	CP = 462	      Reject ,
SS = 7	CP = 462	      Deduce part
SS = 7	CP = 462	        Predict Failed in CONDITION
SS = 7	CP = 462	        Predict Failed in CONDITION
SS = 9	CP = 462	        Deduce alternative_part
SS = 9	CP = 462	          Match  [
SS = 9	CP = 462	          Accept [
SS = 10	CP = 463	          Deduce declaration
SS = 11	CP = 463	            Deduce term
SS = 12	CP = 463	              Deduce part
SS = 12	CP = 463	                Predict Failed in CONDITION
SS = 12	CP = 463	                Predict Failed in CONDITION
SS = 12	CP = 463	                Predict Failed in CONDITION
SS = 14	CP = 463	                Deduce simple_part
SS = 14	CP = 463	                  Predict Failed in CONDITION
SS = 16	CP = 463	                  Deduce terminal_symbol
SS = 17	CP = 463	                    Match  slit
SS = 17	CP = 463	                    Accept slit
SS = 16	CP = 464	                  Accept terminal_symbol
SS = 14	CP = 464	                Accept simple_part
SS = 12	CP = 464	              Accept part
SS = 13	CP = 464	              Match  ,
SS = 13	CP = 464	              Reject ,
SS = 13	CP = 464	              Deduce part
SS = 13	CP = 464	                Predict Failed in CONDITION
SS = 13	CP = 464	                Predict Failed in CONDITION
SS = 13	CP = 464	                Predict Failed in CONDITION
SS = 15	CP = 464	                Deduce simple_part
SS = 17	CP = 464	                  Deduce right_non_terminal_symbol
SS = 18	CP = 464	                    Deduce non_terminal_symbol
SS = 18	CP = 464	                      Match  id
SS = 18	CP = 464	                      Accept id
SS = 18	CP = 465	                    Accept non_terminal_symbol
SS = 17	CP = 465	                  Accept right_non_terminal_symbol
SS = 15	CP = 465	                Accept simple_part
SS = 13	CP = 465	              Accept part
SS = 13	CP = 465	              Match  ,
SS = 13	CP = 465	              Reject ,
SS = 12	CP = 465	              Predict Failed: part
SS = 11	CP = 465	            Accept term
SS = 11	CP = 465	            Match  |
SS = 11	CP = 465	            Reject |
SS = 10	CP = 465	          Accept declaration
SS = 9	CP = 465	          Match  ]
SS = 9	CP = 465	          Accept ]
SS = 9	CP = 466	        Accept alternative_part
SS = 7	CP = 466	      Accept part
SS = 7	CP = 466	      Match  ,
SS = 7	CP = 466	      Reject ,
SS = 6	CP = 466	      Predict Failed: part
SS = 5	CP = 466	    Accept term
SS = 5	CP = 466	    Match  |
SS = 5	CP = 466	    Reject |
SS = 4	CP = 466	  Accept declaration
SS = 4	CP = 466	  Deduce end_op
SS = 5	CP = 466	    Match  ;
SS = 5	CP = 466	    Accept ;
SS = 4	CP = 467	  Accept end_op
SS = 3	CP = 467	Accept statement
SS = 3	CP = 467	Deduce statement
SS = 4	CP = 467	  Deduce non_terminal_symbol
SS = 4	CP = 467	    Match  id
SS = 4	CP = 467	    Accept id
SS = 4	CP = 468	  Accept non_terminal_symbol
SS = 4	CP = 468	  Deduce assign_op
SS = 5	CP = 468	    Match  ::=
SS = 5	CP = 468	    Accept ::=
SS = 4	CP = 469	  Accept assign_op
SS = 4	CP = 469	  Deduce declaration
SS = 5	CP = 469	    Deduce term
SS = 6	CP = 469	      Deduce part
SS = 6	CP = 469	        Predict Failed in CONDITION
SS = 6	CP = 469	        Predict Failed in CONDITION
SS = 6	CP = 469	        Predict Failed in CONDITION
SS = 8	CP = 469	        Deduce simple_part
SS = 10	CP = 469	          Deduce right_non_terminal_symbol
SS = 11	CP = 469	            Deduce non_terminal_symbol
SS = 11	CP = 469	              Match  id
SS = 11	CP = 469	              Accept id
SS = 11	CP = 470	            Accept non_terminal_symbol
SS = 10	CP = 470	          Accept right_non_terminal_symbol
SS = 8	CP = 470	        Accept simple_part
SS = 6	CP = 470	      Accept part
SS = 7	CP = 470	      Match  ,
SS = 7	CP = 470	      Reject ,
SS = 6	CP = 470	      Predict Failed: part
SS = 5	CP = 470	    Accept term
SS = 5	CP = 470	    Match  |
SS = 5	CP = 470	    Accept |
SS = 6	CP = 471	    Deduce term
SS = 7	CP = 471	      Deduce part
SS = 7	CP = 471	        Predict Failed in CONDITION
SS = 7	CP = 471	        Predict Failed in CONDITION
SS = 7	CP = 471	        Predict Failed in CONDITION
SS = 9	CP = 471	        Deduce simple_part
SS = 11	CP = 471	          Deduce right_non_terminal_symbol
SS = 12	CP = 471	            Deduce non_terminal_symbol
SS = 12	CP = 471	              Match  id
SS = 12	CP = 471	              Accept id
SS = 12	CP = 472	            Accept non_terminal_symbol
SS = 11	CP = 472	          Accept right_non_terminal_symbol
SS = 9	CP = 472	        Accept simple_part
SS = 7	CP = 472	      Accept part
SS = 8	CP = 472	      Match  ,
SS = 8	CP = 472	      Reject ,
SS = 7	CP = 472	      Predict Failed: part
SS = 6	CP = 472	    Accept term
SS = 5	CP = 472	    Match  |
SS = 5	CP = 472	    Reject |
SS = 4	CP = 472	  Accept declaration
SS = 4	CP = 472	  Deduce end_op
SS = 5	CP = 472	    Match  ;
SS = 5	CP = 472	    Accept ;
SS = 4	CP = 473	  Accept end_op
SS = 3	CP = 473	Accept statement
SS = 3	CP = 473	Deduce statement
SS = 4	CP = 473	  Deduce non_terminal_symbol
SS = 4	CP = 473	    Match  id
SS = 4	CP = 473	    Accept id
SS = 4	CP = 474	  Accept non_terminal_symbol
SS = 4	CP = 474	  Deduce assign_op
SS = 5	CP = 474	    Match  ::=
SS = 5	CP = 474	    Accept ::=
SS = 4	CP = 475	  Accept assign_op
SS = 4	CP = 475	  Deduce declaration
SS = 5	CP = 475	    Deduce term
SS = 6	CP = 475	      Deduce part
SS = 6	CP = 475	        Predict Failed in CONDITION
SS = 6	CP = 475	        Predict Failed in CONDITION
SS = 6	CP = 475	        Predict Failed in CONDITION
SS = 8	CP = 475	        Deduce simple_part
SS = 10	CP = 475	          Deduce right_non_terminal_symbol
SS = 11	CP = 475	            Deduce non_terminal_symbol
SS = 11	CP = 475	              Match  id
SS = 11	CP = 475	              Accept id
SS = 11	CP = 476	            Accept non_terminal_symbol
SS = 10	CP = 476	          Accept right_non_terminal_symbol
SS = 8	CP = 476	        Accept simple_part
SS = 6	CP = 476	      Accept part
SS = 7	CP = 476	      Match  ,
SS = 7	CP = 476	      Reject ,
SS = 7	CP = 476	      Deduce part
SS = 7	CP = 476	        Predict Failed in CONDITION
SS = 7	CP = 476	        Predict Failed in CONDITION
SS = 7	CP = 476	        Predict Failed in CONDITION
SS = 9	CP = 476	        Deduce simple_part
SS = 9	CP = 476	          Predict Failed in CONDITION
SS = 11	CP = 476	          Deduce terminal_symbol
SS = 12	CP = 476	            Match  slit
SS = 12	CP = 476	            Accept slit
SS = 11	CP = 477	          Accept terminal_symbol
SS = 9	CP = 477	        Accept simple_part
SS = 7	CP = 477	      Accept part
SS = 7	CP = 477	      Match  ,
SS = 7	CP = 477	      Reject ,
SS = 7	CP = 477	      Deduce part
SS = 7	CP = 477	        Predict Failed in CONDITION
SS = 7	CP = 477	        Predict Failed in CONDITION
SS = 7	CP = 477	        Predict Failed in CONDITION
SS = 9	CP = 477	        Deduce simple_part
SS = 11	CP = 477	          Deduce right_non_terminal_symbol
SS = 12	CP = 477	            Deduce non_terminal_symbol
SS = 12	CP = 477	              Match  id
SS = 12	CP = 477	              Accept id
SS = 12	CP = 478	            Accept non_terminal_symbol
SS = 11	CP = 478	          Accept right_non_terminal_symbol
SS = 9	CP = 478	        Accept simple_part
SS = 7	CP = 478	      Accept part
SS = 7	CP = 478	      Match  ,
SS = 7	CP = 478	      Reject ,
SS = 6	CP = 478	      Predict Failed: part
SS = 5	CP = 478	    Accept term
SS = 5	CP = 478	    Match  |
SS = 5	CP = 478	    Accept |
SS = 6	CP = 479	    Deduce term
SS = 7	CP = 479	      Deduce part
SS = 7	CP = 479	        Predict Failed in CONDITION
SS = 7	CP = 479	        Predict Failed in CONDITION
SS = 7	CP = 479	        Predict Failed in CONDITION
SS = 9	CP = 479	        Deduce simple_part
SS = 11	CP = 479	          Deduce right_non_terminal_symbol
SS = 12	CP = 479	            Deduce non_terminal_symbol
SS = 12	CP = 479	              Match  id
SS = 12	CP = 479	              Accept id
SS = 12	CP = 480	            Accept non_terminal_symbol
SS = 11	CP = 480	          Accept right_non_terminal_symbol
SS = 9	CP = 480	        Accept simple_part
SS = 7	CP = 480	      Accept part
SS = 8	CP = 480	      Match  ,
SS = 8	CP = 480	      Reject ,
SS = 8	CP = 480	      Deduce part
SS = 8	CP = 480	        Predict Failed in CONDITION
SS = 8	CP = 480	        Predict Failed in CONDITION
SS = 10	CP = 480	        Deduce alternative_part
SS = 10	CP = 480	          Match  [
SS = 10	CP = 480	          Accept [
SS = 11	CP = 481	          Deduce declaration
SS = 12	CP = 481	            Deduce term
SS = 13	CP = 481	              Deduce part
SS = 13	CP = 481	                Predict Failed in CONDITION
SS = 13	CP = 481	                Predict Failed in CONDITION
SS = 13	CP = 481	                Predict Failed in CONDITION
SS = 15	CP = 481	                Deduce simple_part
SS = 17	CP = 481	                  Deduce right_non_terminal_symbol
SS = 18	CP = 481	                    Deduce non_terminal_symbol
SS = 18	CP = 481	                      Match  id
SS = 18	CP = 481	                      Accept id
SS = 18	CP = 482	                    Accept non_terminal_symbol
SS = 17	CP = 482	                  Accept right_non_terminal_symbol
SS = 15	CP = 482	                Accept simple_part
SS = 13	CP = 482	              Accept part
SS = 14	CP = 482	              Match  ,
SS = 14	CP = 482	              Reject ,
SS = 14	CP = 482	              Deduce part
SS = 14	CP = 482	                Predict Failed in CONDITION
SS = 14	CP = 482	                Predict Failed in CONDITION
SS = 14	CP = 482	                Predict Failed in CONDITION
SS = 16	CP = 482	                Deduce simple_part
SS = 18	CP = 482	                  Deduce right_non_terminal_symbol
SS = 19	CP = 482	                    Deduce non_terminal_symbol
SS = 19	CP = 482	                      Match  id
SS = 19	CP = 482	                      Accept id
SS = 19	CP = 483	                    Accept non_terminal_symbol
SS = 18	CP = 483	                  Accept right_non_terminal_symbol
SS = 16	CP = 483	                Accept simple_part
SS = 14	CP = 483	              Accept part
SS = 14	CP = 483	              Match  ,
SS = 14	CP = 483	              Reject ,
SS = 13	CP = 483	              Predict Failed: part
SS = 12	CP = 483	            Accept term
SS = 12	CP = 483	            Match  |
SS = 12	CP = 483	            Reject |
SS = 11	CP = 483	          Accept declaration
SS = 10	CP = 483	          Match  ]
SS = 10	CP = 483	          Accept ]
SS = 10	CP = 484	        Accept alternative_part
SS = 8	CP = 484	      Accept part
SS = 8	CP = 484	      Match  ,
SS = 8	CP = 484	      Reject ,
SS = 7	CP = 484	      Predict Failed: part
SS = 6	CP = 484	    Accept term
SS = 5	CP = 484	    Match  |
SS = 5	CP = 484	    Reject |
SS = 4	CP = 484	  Accept declaration
SS = 4	CP = 484	  Deduce end_op
SS = 5	CP = 484	    Match  ;
SS = 5	CP = 484	    Accept ;
SS = 4	CP = 485	  Accept end_op
SS = 3	CP = 485	Accept statement
SS = 3	CP = 485	Deduce statement
SS = 4	CP = 485	  Deduce non_terminal_symbol
SS = 4	CP = 485	    Match  id
SS = 4	CP = 485	    Accept id
SS = 4	CP = 486	  Accept non_terminal_symbol
SS = 4	CP = 486	  Deduce assign_op
SS = 5	CP = 486	    Match  ::=
SS = 5	CP = 486	    Accept ::=
SS = 4	CP = 487	  Accept assign_op
SS = 4	CP = 487	  Deduce declaration
SS = 5	CP = 487	    Deduce term
SS = 6	CP = 487	      Deduce part
SS = 6	CP = 487	        Predict Failed in CONDITION
SS = 6	CP = 487	        Predict Failed in CONDITION
SS = 6	CP = 487	        Predict Failed in CONDITION
SS = 8	CP = 487	        Deduce simple_part
SS = 8	CP = 487	          Predict Failed in CONDITION
SS = 10	CP = 487	          Deduce terminal_symbol
SS = 11	CP = 487	            Match  slit
SS = 11	CP = 487	            Accept slit
SS = 10	CP = 488	          Accept terminal_symbol
SS = 8	CP = 488	        Accept simple_part
SS = 6	CP = 488	      Accept part
SS = 7	CP = 488	      Match  ,
SS = 7	CP = 488	      Reject ,
SS = 6	CP = 488	      Predict Failed: part
SS = 5	CP = 488	    Accept term
SS = 5	CP = 488	    Match  |
SS = 5	CP = 488	    Accept |
SS = 6	CP = 489	    Deduce term
SS = 7	CP = 489	      Deduce part
SS = 7	CP = 489	        Predict Failed in CONDITION
SS = 7	CP = 489	        Predict Failed in CONDITION
SS = 7	CP = 489	        Predict Failed in CONDITION
SS = 9	CP = 489	        Deduce simple_part
SS = 9	CP = 489	          Predict Failed in CONDITION
SS = 11	CP = 489	          Deduce terminal_symbol
SS = 12	CP = 489	            Match  slit
SS = 12	CP = 489	            Accept slit
SS = 11	CP = 490	          Accept terminal_symbol
SS = 9	CP = 490	        Accept simple_part
SS = 7	CP = 490	      Accept part
SS = 8	CP = 490	      Match  ,
SS = 8	CP = 490	      Reject ,
SS = 7	CP = 490	      Predict Failed: part
SS = 6	CP = 490	    Accept term
SS = 5	CP = 490	    Match  |
SS = 5	CP = 490	    Accept |
SS = 6	CP = 491	    Deduce term
SS = 7	CP = 491	      Deduce part
SS = 7	CP = 491	        Predict Failed in CONDITION
SS = 7	CP = 491	        Predict Failed in CONDITION
SS = 7	CP = 491	        Predict Failed in CONDITION
SS = 9	CP = 491	        Deduce simple_part
SS = 9	CP = 491	          Predict Failed in CONDITION
SS = 11	CP = 491	          Deduce terminal_symbol
SS = 12	CP = 491	            Match  slit
SS = 12	CP = 491	            Accept slit
SS = 11	CP = 492	          Accept terminal_symbol
SS = 9	CP = 492	        Accept simple_part
SS = 7	CP = 492	      Accept part
SS = 8	CP = 492	      Match  ,
SS = 8	CP = 492	      Reject ,
SS = 7	CP = 492	      Predict Failed: part
SS = 6	CP = 492	    Accept term
SS = 5	CP = 492	    Match  |
SS = 5	CP = 492	    Accept |
SS = 6	CP = 493	    Deduce term
SS = 7	CP = 493	      Deduce part
SS = 7	CP = 493	        Predict Failed in CONDITION
SS = 7	CP = 493	        Predict Failed in CONDITION
SS = 7	CP = 493	        Predict Failed in CONDITION
SS = 9	CP = 493	        Deduce simple_part
SS = 9	CP = 493	          Predict Failed in CONDITION
SS = 11	CP = 493	          Deduce terminal_symbol
SS = 12	CP = 493	            Match  slit
SS = 12	CP = 493	            Accept slit
SS = 11	CP = 494	          Accept terminal_symbol
SS = 9	CP = 494	        Accept simple_part
SS = 7	CP = 494	      Accept part
SS = 8	CP = 494	      Match  ,
SS = 8	CP = 494	      Reject ,
SS = 7	CP = 494	      Predict Failed: part
SS = 6	CP = 494	    Accept term
SS = 5	CP = 494	    Match  |
SS = 5	CP = 494	    Accept |
SS = 6	CP = 495	    Deduce term
SS = 7	CP = 495	      Deduce part
SS = 7	CP = 495	        Predict Failed in CONDITION
SS = 7	CP = 495	        Predict Failed in CONDITION
SS = 7	CP = 495	        Predict Failed in CONDITION
SS = 9	CP = 495	        Deduce simple_part
SS = 9	CP = 495	          Predict Failed in CONDITION
SS = 11	CP = 495	          Deduce terminal_symbol
SS = 12	CP = 495	            Match  slit
SS = 12	CP = 495	            Accept slit
SS = 11	CP = 496	          Accept terminal_symbol
SS = 9	CP = 496	        Accept simple_part
SS = 7	CP = 496	      Accept part
SS = 8	CP = 496	      Match  ,
SS = 8	CP = 496	      Reject ,
SS = 7	CP = 496	      Predict Failed: part
SS = 6	CP = 496	    Accept term
SS = 5	CP = 496	    Match  |
SS = 5	CP = 496	    Accept |
SS = 6	CP = 497	    Deduce term
SS = 7	CP = 497	      Deduce part
SS = 7	CP = 497	        Predict Failed in CONDITION
SS = 7	CP = 497	        Predict Failed in CONDITION
SS = 7	CP = 497	        Predict Failed in CONDITION
SS = 9	CP = 497	        Deduce simple_part
SS = 9	CP = 497	          Predict Failed in CONDITION
SS = 11	CP = 497	          Deduce terminal_symbol
SS = 12	CP = 497	            Match  slit
SS = 12	CP = 497	            Accept slit
SS = 11	CP = 498	          Accept terminal_symbol
SS = 9	CP = 498	        Accept simple_part
SS = 7	CP = 498	      Accept part
SS = 8	CP = 498	      Match  ,
SS = 8	CP = 498	      Reject ,
SS = 7	CP = 498	      Predict Failed: part
SS = 6	CP = 498	    Accept term
SS = 5	CP = 498	    Match  |
SS = 5	CP = 498	    Accept |
SS = 6	CP = 499	    Deduce term
SS = 7	CP = 499	      Deduce part
SS = 7	CP = 499	        Predict Failed in CONDITION
SS = 7	CP = 499	        Predict Failed in CONDITION
SS = 7	CP = 499	        Predict Failed in CONDITION
SS = 9	CP = 499	        Deduce simple_part
SS = 9	CP = 499	          Predict Failed in CONDITION
SS = 11	CP = 499	          Deduce terminal_symbol
SS = 12	CP = 499	            Match  slit
SS = 12	CP = 499	            Accept slit
SS = 11	CP = 500	          Accept terminal_symbol
SS = 9	CP = 500	        Accept simple_part
SS = 7	CP = 500	      Accept part
SS = 8	CP = 500	      Match  ,
SS = 8	CP = 500	      Reject ,
SS = 7	CP = 500	      Predict Failed: part
SS = 6	CP = 500	    Accept term
SS = 5	CP = 500	    Match  |
SS = 5	CP = 500	    Accept |
SS = 6	CP = 501	    Deduce term
SS = 7	CP = 501	      Deduce part
SS = 7	CP = 501	        Predict Failed in CONDITION
SS = 7	CP = 501	        Predict Failed in CONDITION
SS = 7	CP = 501	        Predict Failed in CONDITION
SS = 9	CP = 501	        Deduce simple_part
SS = 9	CP = 501	          Predict Failed in CONDITION
SS = 11	CP = 501	          Deduce terminal_symbol
SS = 12	CP = 501	            Match  slit
SS = 12	CP = 501	            Accept slit
SS = 11	CP = 502	          Accept terminal_symbol
SS = 9	CP = 502	        Accept simple_part
SS = 7	CP = 502	      Accept part
SS = 8	CP = 502	      Match  ,
SS = 8	CP = 502	      Reject ,
SS = 7	CP = 502	      Predict Failed: part
SS = 6	CP = 502	    Accept term
SS = 5	CP = 502	    Match  |
SS = 5	CP = 502	    Reject |
SS = 4	CP = 502	  Accept declaration
SS = 4	CP = 502	  Deduce end_op
SS = 5	CP = 502	    Match  ;
SS = 5	CP = 502	    Accept ;
SS = 4	CP = 503	  Accept end_op
SS = 3	CP = 503	Accept statement
SS = 3	CP = 503	Deduce statement
SS = 4	CP = 503	  Deduce non_terminal_symbol
SS = 4	CP = 503	    Match  id
SS = 4	CP = 503	    Accept id
SS = 4	CP = 504	  Accept non_terminal_symbol
SS = 4	CP = 504	  Deduce assign_op
SS = 5	CP = 504	    Match  ::=
SS = 5	CP = 504	    Accept ::=
SS = 4	CP = 505	  Accept assign_op
SS = 4	CP = 505	  Deduce declaration
SS = 5	CP = 505	    Deduce term
SS = 6	CP = 505	      Deduce part
SS = 6	CP = 505	        Predict Failed in CONDITION
SS = 6	CP = 505	        Predict Failed in CONDITION
SS = 6	CP = 505	        Predict Failed in CONDITION
SS = 8	CP = 505	        Deduce simple_part
SS = 8	CP = 505	          Predict Failed in CONDITION
SS = 10	CP = 505	          Deduce terminal_symbol
SS = 11	CP = 505	            Match  slit
SS = 11	CP = 505	            Accept slit
SS = 10	CP = 506	          Accept terminal_symbol
SS = 8	CP = 506	        Accept simple_part
SS = 6	CP = 506	      Accept part
SS = 7	CP = 506	      Match  ,
SS = 7	CP = 506	      Reject ,
SS = 7	CP = 506	      Deduce part
SS = 7	CP = 506	        Predict Failed in CONDITION
SS = 7	CP = 506	        Predict Failed in CONDITION
SS = 9	CP = 506	        Deduce alternative_part
SS = 9	CP = 506	          Match  [
SS = 9	CP = 506	          Accept [
SS = 10	CP = 507	          Deduce declaration
SS = 11	CP = 507	            Deduce term
SS = 12	CP = 507	              Deduce part
SS = 12	CP = 507	                Predict Failed in CONDITION
SS = 12	CP = 507	                Predict Failed in CONDITION
SS = 12	CP = 507	                Predict Failed in CONDITION
SS = 14	CP = 507	                Deduce simple_part
SS = 16	CP = 507	                  Deduce right_non_terminal_symbol
SS = 17	CP = 507	                    Deduce non_terminal_symbol
SS = 17	CP = 507	                      Match  id
SS = 17	CP = 507	                      Accept id
SS = 17	CP = 508	                    Accept non_terminal_symbol
SS = 16	CP = 508	                  Accept right_non_terminal_symbol
SS = 14	CP = 508	                Accept simple_part
SS = 12	CP = 508	              Accept part
SS = 13	CP = 508	              Match  ,
SS = 13	CP = 508	              Reject ,
SS = 12	CP = 508	              Predict Failed: part
SS = 11	CP = 508	            Accept term
SS = 11	CP = 508	            Match  |
SS = 11	CP = 508	            Reject |
SS = 10	CP = 508	          Accept declaration
SS = 9	CP = 508	          Match  ]
SS = 9	CP = 508	          Accept ]
SS = 9	CP = 509	        Accept alternative_part
SS = 7	CP = 509	      Accept part
SS = 7	CP = 509	      Match  ,
SS = 7	CP = 509	      Reject ,
SS = 7	CP = 509	      Deduce part
SS = 7	CP = 509	        Predict Failed in CONDITION
SS = 7	CP = 509	        Predict Failed in CONDITION
SS = 7	CP = 509	        Predict Failed in CONDITION
SS = 9	CP = 509	        Deduce simple_part
SS = 9	CP = 509	          Predict Failed in CONDITION
SS = 11	CP = 509	          Deduce terminal_symbol
SS = 12	CP = 509	            Match  slit
SS = 12	CP = 509	            Accept slit
SS = 11	CP = 510	          Accept terminal_symbol
SS = 9	CP = 510	        Accept simple_part
SS = 7	CP = 510	      Accept part
SS = 7	CP = 510	      Match  ,
SS = 7	CP = 510	      Reject ,
SS = 7	CP = 510	      Deduce part
SS = 7	CP = 510	        Predict Failed in CONDITION
SS = 7	CP = 510	        Predict Failed in CONDITION
SS = 7	CP = 510	        Predict Failed in CONDITION
SS = 9	CP = 510	        Deduce simple_part
SS = 9	CP = 510	          Predict Failed in CONDITION
SS = 11	CP = 510	          Deduce terminal_symbol
SS = 12	CP = 510	            Match  slit
SS = 12	CP = 510	            Accept slit
SS = 11	CP = 511	          Accept terminal_symbol
SS = 9	CP = 511	        Accept simple_part
SS = 7	CP = 511	      Accept part
SS = 7	CP = 511	      Match  ,
SS = 7	CP = 511	      Reject ,
SS = 7	CP = 511	      Deduce part
SS = 7	CP = 511	        Predict Failed in CONDITION
SS = 7	CP = 511	        Predict Failed in CONDITION
SS = 9	CP = 511	        Deduce alternative_part
SS = 9	CP = 511	          Match  [
SS = 9	CP = 511	          Accept [
SS = 10	CP = 512	          Deduce declaration
SS = 11	CP = 512	            Deduce term
SS = 12	CP = 512	              Deduce part
SS = 12	CP = 512	                Predict Failed in CONDITION
SS = 12	CP = 512	                Predict Failed in CONDITION
SS = 12	CP = 512	                Predict Failed in CONDITION
SS = 14	CP = 512	                Deduce simple_part
SS = 16	CP = 512	                  Deduce right_non_terminal_symbol
SS = 17	CP = 512	                    Deduce non_terminal_symbol
SS = 17	CP = 512	                      Match  id
SS = 17	CP = 512	                      Accept id
SS = 17	CP = 513	                    Accept non_terminal_symbol
SS = 16	CP = 513	                  Accept right_non_terminal_symbol
SS = 14	CP = 513	                Accept simple_part
SS = 12	CP = 513	              Accept part
SS = 13	CP = 513	              Match  ,
SS = 13	CP = 513	              Reject ,
SS = 12	CP = 513	              Predict Failed: part
SS = 11	CP = 513	            Accept term
SS = 11	CP = 513	            Match  |
SS = 11	CP = 513	            Reject |
SS = 10	CP = 513	          Accept declaration
SS = 9	CP = 513	          Match  ]
SS = 9	CP = 513	          Accept ]
SS = 9	CP = 514	        Accept alternative_part
SS = 7	CP = 514	      Accept part
SS = 7	CP = 514	      Match  ,
SS = 7	CP = 514	      Reject ,
SS = 7	CP = 514	      Deduce part
SS = 7	CP = 514	        Predict Failed in CONDITION
SS = 7	CP = 514	        Predict Failed in CONDITION
SS = 7	CP = 514	        Predict Failed in CONDITION
SS = 9	CP = 514	        Deduce simple_part
SS = 9	CP = 514	          Predict Failed in CONDITION
SS = 11	CP = 514	          Deduce terminal_symbol
SS = 12	CP = 514	            Match  slit
SS = 12	CP = 514	            Accept slit
SS = 11	CP = 515	          Accept terminal_symbol
SS = 9	CP = 515	        Accept simple_part
SS = 7	CP = 515	      Accept part
SS = 7	CP = 515	      Match  ,
SS = 7	CP = 515	      Reject ,
SS = 7	CP = 515	      Deduce part
SS = 7	CP = 515	        Predict Failed in CONDITION
SS = 7	CP = 515	        Predict Failed in CONDITION
SS = 7	CP = 515	        Predict Failed in CONDITION
SS = 9	CP = 515	        Deduce simple_part
SS = 11	CP = 515	          Deduce right_non_terminal_symbol
SS = 12	CP = 515	            Deduce non_terminal_symbol
SS = 12	CP = 515	              Match  id
SS = 12	CP = 515	              Accept id
SS = 12	CP = 516	            Accept non_terminal_symbol
SS = 11	CP = 516	          Accept right_non_terminal_symbol
SS = 9	CP = 516	        Accept simple_part
SS = 7	CP = 516	      Accept part
SS = 7	CP = 516	      Match  ,
SS = 7	CP = 516	      Reject ,
SS = 6	CP = 516	      Predict Failed: part
SS = 5	CP = 516	    Accept term
SS = 5	CP = 516	    Match  |
SS = 5	CP = 516	    Reject |
SS = 4	CP = 516	  Accept declaration
SS = 4	CP = 516	  Deduce end_op
SS = 5	CP = 516	    Match  ;
SS = 5	CP = 516	    Accept ;
SS = 4	CP = 517	  Accept end_op
SS = 3	CP = 517	Accept statement
SS = 3	CP = 517	Deduce statement
SS = 4	CP = 517	  Deduce non_terminal_symbol
SS = 4	CP = 517	    Match  id
SS = 4	CP = 517	    Accept id
SS = 4	CP = 518	  Accept non_terminal_symbol
SS = 4	CP = 518	  Deduce assign_op
SS = 5	CP = 518	    Match  ::=
SS = 5	CP = 518	    Accept ::=
SS = 4	CP = 519	  Accept assign_op
SS = 4	CP = 519	  Deduce declaration
SS = 5	CP = 519	    Deduce term
SS = 6	CP = 519	      Deduce part
SS = 6	CP = 519	        Predict Failed in CONDITION
SS = 6	CP = 519	        Predict Failed in CONDITION
SS = 8	CP = 519	        Deduce alternative_part
SS = 8	CP = 519	          Match  [
SS = 8	CP = 519	          Accept [
SS = 9	CP = 520	          Deduce declaration
SS = 10	CP = 520	            Deduce term
SS = 11	CP = 520	              Deduce part
SS = 11	CP = 520	                Predict Failed in CONDITION
SS = 11	CP = 520	                Predict Failed in CONDITION
SS = 11	CP = 520	                Predict Failed in CONDITION
SS = 13	CP = 520	                Deduce simple_part
SS = 13	CP = 520	                  Predict Failed in CONDITION
SS = 15	CP = 520	                  Deduce terminal_symbol
SS = 16	CP = 520	                    Match  slit
SS = 16	CP = 520	                    Accept slit
SS = 15	CP = 521	                  Accept terminal_symbol
SS = 13	CP = 521	                Accept simple_part
SS = 11	CP = 521	              Accept part
SS = 12	CP = 521	              Match  ,
SS = 12	CP = 521	              Reject ,
SS = 11	CP = 521	              Predict Failed: part
SS = 10	CP = 521	            Accept term
SS = 10	CP = 521	            Match  |
SS = 10	CP = 521	            Reject |
SS = 9	CP = 521	          Accept declaration
SS = 8	CP = 521	          Match  ]
SS = 8	CP = 521	          Accept ]
SS = 8	CP = 522	        Accept alternative_part
SS = 6	CP = 522	      Accept part
SS = 7	CP = 522	      Match  ,
SS = 7	CP = 522	      Reject ,
SS = 7	CP = 522	      Deduce part
SS = 7	CP = 522	        Predict Failed in CONDITION
SS = 7	CP = 522	        Predict Failed in CONDITION
SS = 7	CP = 522	        Predict Failed in CONDITION
SS = 9	CP = 522	        Deduce simple_part
SS = 9	CP = 522	          Predict Failed in CONDITION
SS = 11	CP = 522	          Deduce terminal_symbol
SS = 11	CP = 522	            Predict Failed in CONDITION
SS = 11	CP = 522	            Predict Failed in CONDITION
SS = 12	CP = 522	            Match  token
SS = 12	CP = 522	            Accept token
SS = 11	CP = 523	          Accept terminal_symbol
SS = 9	CP = 523	        Accept simple_part
SS = 7	CP = 523	      Accept part
SS = 7	CP = 523	      Match  ,
SS = 7	CP = 523	      Reject ,
SS = 7	CP = 523	      Deduce part
SS = 9	CP = 523	        Deduce repeat_part
SS = 9	CP = 523	          Match  {
SS = 9	CP = 523	          Accept {
SS = 10	CP = 524	          Deduce declaration
SS = 11	CP = 524	            Deduce term
SS = 12	CP = 524	              Deduce part
SS = 12	CP = 524	                Predict Failed in CONDITION
SS = 12	CP = 524	                Predict Failed in CONDITION
SS = 12	CP = 524	                Predict Failed in CONDITION
SS = 14	CP = 524	                Deduce simple_part
SS = 14	CP = 524	                  Predict Failed in CONDITION
SS = 16	CP = 524	                  Deduce terminal_symbol
SS = 17	CP = 524	                    Match  slit
SS = 17	CP = 524	                    Accept slit
SS = 16	CP = 525	                  Accept terminal_symbol
SS = 14	CP = 525	                Accept simple_part
SS = 12	CP = 525	              Accept part
SS = 13	CP = 525	              Match  ,
SS = 13	CP = 525	              Reject ,
SS = 13	CP = 525	              Deduce part
SS = 13	CP = 525	                Predict Failed in CONDITION
SS = 13	CP = 525	                Predict Failed in CONDITION
SS = 13	CP = 525	                Predict Failed in CONDITION
SS = 15	CP = 525	                Deduce simple_part
SS = 17	CP = 525	                  Deduce right_non_terminal_symbol
SS = 18	CP = 525	                    Deduce non_terminal_symbol
SS = 18	CP = 525	                      Match  id
SS = 18	CP = 525	                      Accept id
SS = 18	CP = 526	                    Accept non_terminal_symbol
SS = 17	CP = 526	                  Accept right_non_terminal_symbol
SS = 15	CP = 526	                Accept simple_part
SS = 13	CP = 526	              Accept part
SS = 13	CP = 526	              Match  ,
SS = 13	CP = 526	              Reject ,
SS = 12	CP = 526	              Predict Failed: part
SS = 11	CP = 526	            Accept term
SS = 11	CP = 526	            Match  |
SS = 11	CP = 526	            Reject |
SS = 10	CP = 526	          Accept declaration
SS = 9	CP = 526	          Match  }
SS = 9	CP = 526	          Accept }
SS = 9	CP = 527	        Accept repeat_part
SS = 7	CP = 527	      Accept part
SS = 7	CP = 527	      Match  ,
SS = 7	CP = 527	      Reject ,
SS = 6	CP = 527	      Predict Failed: part
SS = 5	CP = 527	    Accept term
SS = 5	CP = 527	    Match  |
SS = 5	CP = 527	    Reject |
SS = 4	CP = 527	  Accept declaration
SS = 4	CP = 527	  Deduce end_op
SS = 5	CP = 527	    Match  ;
SS = 5	CP = 527	    Accept ;
SS = 4	CP = 528	  Accept end_op
SS = 3	CP = 528	Accept statement
SS = 3	CP = 528	Deduce statement
SS = 4	CP = 528	  Deduce non_terminal_symbol
SS = 4	CP = 528	    Match  id
SS = 4	CP = 528	    Accept id
SS = 4	CP = 529	  Accept non_terminal_symbol
SS = 4	CP = 529	  Deduce assign_op
SS = 5	CP = 529	    Match  ::=
SS = 5	CP = 529	    Accept ::=
SS = 4	CP = 530	  Accept assign_op
SS = 4	CP = 530	  Deduce declaration
SS = 5	CP = 530	    Deduce term
SS = 6	CP = 530	      Deduce part
SS = 6	CP = 530	        Predict Failed in CONDITION
SS = 6	CP = 530	        Predict Failed in CONDITION
SS = 6	CP = 530	        Predict Failed in CONDITION
SS = 8	CP = 530	        Deduce simple_part
SS = 8	CP = 530	          Predict Failed in CONDITION
SS = 10	CP = 530	          Deduce terminal_symbol
SS = 11	CP = 530	            Match  slit
SS = 11	CP = 530	            Accept slit
SS = 10	CP = 531	          Accept terminal_symbol
SS = 8	CP = 531	        Accept simple_part
SS = 6	CP = 531	      Accept part
SS = 7	CP = 531	      Match  ,
SS = 7	CP = 531	      Reject ,
SS = 7	CP = 531	      Deduce part
SS = 7	CP = 531	        Predict Failed in CONDITION
SS = 7	CP = 531	        Predict Failed in CONDITION
SS = 7	CP = 531	        Predict Failed in CONDITION
SS = 9	CP = 531	        Deduce simple_part
SS = 9	CP = 531	          Predict Failed in CONDITION
SS = 11	CP = 531	          Deduce terminal_symbol
SS = 11	CP = 531	            Predict Failed in CONDITION
SS = 11	CP = 531	            Predict Failed in CONDITION
SS = 12	CP = 531	            Match  token
SS = 12	CP = 531	            Accept token
SS = 11	CP = 532	          Accept terminal_symbol
SS = 9	CP = 532	        Accept simple_part
SS = 7	CP = 532	      Accept part
SS = 7	CP = 532	      Match  ,
SS = 7	CP = 532	      Reject ,
SS = 6	CP = 532	      Predict Failed: part
SS = 5	CP = 532	    Accept term
SS = 5	CP = 532	    Match  |
SS = 5	CP = 532	    Accept |
SS = 6	CP = 533	    Deduce term
SS = 7	CP = 533	      Deduce part
SS = 7	CP = 533	        Predict Failed in CONDITION
SS = 7	CP = 533	        Predict Failed in CONDITION
SS = 9	CP = 533	        Deduce alternative_part
SS = 9	CP = 533	          Match  [
SS = 9	CP = 533	          Accept [
SS = 10	CP = 534	          Deduce declaration
SS = 11	CP = 534	            Deduce term
SS = 12	CP = 534	              Deduce part
SS = 12	CP = 534	                Predict Failed in CONDITION
SS = 12	CP = 534	                Predict Failed in CONDITION
SS = 12	CP = 534	                Predict Failed in CONDITION
SS = 14	CP = 534	                Deduce simple_part
SS = 14	CP = 534	                  Predict Failed in CONDITION
SS = 16	CP = 534	                  Deduce terminal_symbol
SS = 17	CP = 534	                    Match  slit
SS = 17	CP = 534	                    Accept slit
SS = 16	CP = 535	                  Accept terminal_symbol
SS = 14	CP = 535	                Accept simple_part
SS = 12	CP = 535	              Accept part
SS = 13	CP = 535	              Match  ,
SS = 13	CP = 535	              Reject ,
SS = 12	CP = 535	              Predict Failed: part
SS = 11	CP = 535	            Accept term
SS = 11	CP = 535	            Match  |
SS = 11	CP = 535	            Reject |
SS = 10	CP = 535	          Accept declaration
SS = 9	CP = 535	          Match  ]
SS = 9	CP = 535	          Accept ]
SS = 9	CP = 536	        Accept alternative_part
SS = 7	CP = 536	      Accept part
SS = 8	CP = 536	      Match  ,
SS = 8	CP = 536	      Reject ,
SS = 8	CP = 536	      Deduce part
SS = 8	CP = 536	        Predict Failed in CONDITION
SS = 8	CP = 536	        Predict Failed in CONDITION
SS = 8	CP = 536	        Predict Failed in CONDITION
SS = 10	CP = 536	        Deduce simple_part
SS = 10	CP = 536	          Predict Failed in CONDITION
SS = 12	CP = 536	          Deduce terminal_symbol
SS = 12	CP = 536	            Predict Failed in CONDITION
SS = 12	CP = 536	            Predict Failed in CONDITION
SS = 13	CP = 536	            Match  token
SS = 13	CP = 536	            Accept token
SS = 12	CP = 537	          Accept terminal_symbol
SS = 10	CP = 537	        Accept simple_part
SS = 8	CP = 537	      Accept part
SS = 8	CP = 537	      Match  ,
SS = 8	CP = 537	      Reject ,
SS = 8	CP = 537	      Deduce part
SS = 8	CP = 537	        Predict Failed in CONDITION
SS = 8	CP = 537	        Predict Failed in CONDITION
SS = 10	CP = 537	        Deduce alternative_part
SS = 10	CP = 537	          Match  [
SS = 10	CP = 537	          Accept [
SS = 11	CP = 538	          Deduce declaration
SS = 12	CP = 538	            Deduce term
SS = 13	CP = 538	              Deduce part
SS = 13	CP = 538	                Predict Failed in CONDITION
SS = 13	CP = 538	                Predict Failed in CONDITION
SS = 13	CP = 538	                Predict Failed in CONDITION
SS = 15	CP = 538	                Deduce simple_part
SS = 15	CP = 538	                  Predict Failed in CONDITION
SS = 17	CP = 538	                  Deduce terminal_symbol
SS = 18	CP = 538	                    Match  slit
SS = 18	CP = 538	                    Accept slit
SS = 17	CP = 539	                  Accept terminal_symbol
SS = 15	CP = 539	                Accept simple_part
SS = 13	CP = 539	              Accept part
SS = 14	CP = 539	              Match  ,
SS = 14	CP = 539	              Reject ,
SS = 14	CP = 539	              Deduce part
SS = 14	CP = 539	                Predict Failed in CONDITION
SS = 14	CP = 539	                Predict Failed in CONDITION
SS = 14	CP = 539	                Predict Failed in CONDITION
SS = 16	CP = 539	                Deduce simple_part
SS = 18	CP = 539	                  Deduce right_non_terminal_symbol
SS = 19	CP = 539	                    Deduce non_terminal_symbol
SS = 19	CP = 539	                      Match  id
SS = 19	CP = 539	                      Accept id
SS = 19	CP = 540	                    Accept non_terminal_symbol
SS = 18	CP = 540	                  Accept right_non_terminal_symbol
SS = 16	CP = 540	                Accept simple_part
SS = 14	CP = 540	              Accept part
SS = 14	CP = 540	              Match  ,
SS = 14	CP = 540	              Reject ,
SS = 13	CP = 540	              Predict Failed: part
SS = 12	CP = 540	            Accept term
SS = 12	CP = 540	            Match  |
SS = 12	CP = 540	            Reject |
SS = 11	CP = 540	          Accept declaration
SS = 10	CP = 540	          Match  ]
SS = 10	CP = 540	          Accept ]
SS = 10	CP = 541	        Accept alternative_part
SS = 8	CP = 541	      Accept part
SS = 8	CP = 541	      Match  ,
SS = 8	CP = 541	      Reject ,
SS = 8	CP = 541	      Deduce part
SS = 10	CP = 541	        Deduce repeat_part
SS = 10	CP = 541	          Match  {
SS = 10	CP = 541	          Accept {
SS = 11	CP = 542	          Deduce declaration
SS = 12	CP = 542	            Deduce term
SS = 13	CP = 542	              Deduce part
SS = 13	CP = 542	                Predict Failed in CONDITION
SS = 13	CP = 542	                Predict Failed in CONDITION
SS = 13	CP = 542	                Predict Failed in CONDITION
SS = 15	CP = 542	                Deduce simple_part
SS = 15	CP = 542	                  Predict Failed in CONDITION
SS = 17	CP = 542	                  Deduce terminal_symbol
SS = 18	CP = 542	                    Match  slit
SS = 18	CP = 542	                    Accept slit
SS = 17	CP = 543	                  Accept terminal_symbol
SS = 15	CP = 543	                Accept simple_part
SS = 13	CP = 543	              Accept part
SS = 14	CP = 543	              Match  ,
SS = 14	CP = 543	              Reject ,
SS = 14	CP = 543	              Deduce part
SS = 14	CP = 543	                Predict Failed in CONDITION
SS = 14	CP = 543	                Predict Failed in CONDITION
SS = 14	CP = 543	                Predict Failed in CONDITION
SS = 16	CP = 543	                Deduce simple_part
SS = 18	CP = 543	                  Deduce right_non_terminal_symbol
SS = 19	CP = 543	                    Deduce non_terminal_symbol
SS = 19	CP = 543	                      Match  id
SS = 19	CP = 543	                      Accept id
SS = 19	CP = 544	                    Accept non_terminal_symbol
SS = 18	CP = 544	                  Accept right_non_terminal_symbol
SS = 16	CP = 544	                Accept simple_part
SS = 14	CP = 544	              Accept part
SS = 14	CP = 544	              Match  ,
SS = 14	CP = 544	              Reject ,
SS = 13	CP = 544	              Predict Failed: part
SS = 12	CP = 544	            Accept term
SS = 12	CP = 544	            Match  |
SS = 12	CP = 544	            Reject |
SS = 11	CP = 544	          Accept declaration
SS = 10	CP = 544	          Match  }
SS = 10	CP = 544	          Accept }
SS = 10	CP = 545	        Accept repeat_part
SS = 8	CP = 545	      Accept part
SS = 8	CP = 545	      Match  ,
SS = 8	CP = 545	      Reject ,
SS = 7	CP = 545	      Predict Failed: part
SS = 6	CP = 545	    Accept term
SS = 5	CP = 545	    Match  |
SS = 5	CP = 545	    Reject |
SS = 4	CP = 545	  Accept declaration
SS = 4	CP = 545	  Deduce end_op
SS = 5	CP = 545	    Match  ;
SS = 5	CP = 545	    Accept ;
SS = 4	CP = 546	  Accept end_op
SS = 3	CP = 546	Accept statement
SS = 3	CP = 546	Deduce statement
SS = 4	CP = 546	  Deduce non_terminal_symbol
SS = 4	CP = 546	    Match  id
SS = 4	CP = 546	    Accept id
SS = 4	CP = 547	  Accept non_terminal_symbol
SS = 4	CP = 547	  Deduce assign_op
SS = 5	CP = 547	    Match  ::=
SS = 5	CP = 547	    Accept ::=
SS = 4	CP = 548	  Accept assign_op
SS = 4	CP = 548	  Deduce declaration
SS = 5	CP = 548	    Deduce term
SS = 6	CP = 548	      Deduce part
SS = 6	CP = 548	        Predict Failed in CONDITION
SS = 6	CP = 548	        Predict Failed in CONDITION
SS = 6	CP = 548	        Predict Failed in CONDITION
SS = 8	CP = 548	        Deduce simple_part
SS = 8	CP = 548	          Predict Failed in CONDITION
SS = 10	CP = 548	          Deduce terminal_symbol
SS = 11	CP = 548	            Match  slit
SS = 11	CP = 548	            Accept slit
SS = 10	CP = 549	          Accept terminal_symbol
SS = 8	CP = 549	        Accept simple_part
SS = 6	CP = 549	      Accept part
SS = 7	CP = 549	      Match  ,
SS = 7	CP = 549	      Reject ,
SS = 7	CP = 549	      Deduce part
SS = 9	CP = 549	        Deduce repeat_part
SS = 9	CP = 549	          Match  {
SS = 9	CP = 549	          Accept {
SS = 10	CP = 550	          Deduce declaration
SS = 11	CP = 550	            Deduce term
SS = 12	CP = 550	              Deduce part
SS = 12	CP = 550	                Predict Failed in CONDITION
SS = 12	CP = 550	                Predict Failed in CONDITION
SS = 12	CP = 550	                Predict Failed in CONDITION
SS = 14	CP = 550	                Deduce simple_part
SS = 16	CP = 550	                  Deduce right_non_terminal_symbol
SS = 17	CP = 550	                    Deduce non_terminal_symbol
SS = 17	CP = 550	                      Match  id
SS = 17	CP = 550	                      Accept id
SS = 17	CP = 551	                    Accept non_terminal_symbol
SS = 16	CP = 551	                  Accept right_non_terminal_symbol
SS = 14	CP = 551	                Accept simple_part
SS = 12	CP = 551	              Accept part
SS = 13	CP = 551	              Match  ,
SS = 13	CP = 551	              Reject ,
SS = 13	CP = 551	              Deduce part
SS = 15	CP = 551	                Deduce repeat_part
SS = 15	CP = 551	                  Match  {
SS = 15	CP = 551	                  Accept {
SS = 16	CP = 552	                  Deduce declaration
SS = 17	CP = 552	                    Deduce term
SS = 18	CP = 552	                      Deduce part
SS = 18	CP = 552	                        Predict Failed in CONDITION
SS = 18	CP = 552	                        Predict Failed in CONDITION
SS = 18	CP = 552	                        Predict Failed in CONDITION
SS = 20	CP = 552	                        Deduce simple_part
SS = 20	CP = 552	                          Predict Failed in CONDITION
SS = 22	CP = 552	                          Deduce terminal_symbol
SS = 22	CP = 552	                            Predict Failed in CONDITION
SS = 22	CP = 552	                            Predict Failed in CONDITION
SS = 23	CP = 552	                            Match  token
SS = 23	CP = 552	                            Accept token
SS = 22	CP = 553	                          Accept terminal_symbol
SS = 20	CP = 553	                        Accept simple_part
SS = 18	CP = 553	                      Accept part
SS = 19	CP = 553	                      Match  ,
SS = 19	CP = 553	                      Reject ,
SS = 18	CP = 553	                      Predict Failed: part
SS = 17	CP = 553	                    Accept term
SS = 17	CP = 553	                    Match  |
SS = 17	CP = 553	                    Reject |
SS = 16	CP = 553	                  Accept declaration
SS = 15	CP = 553	                  Match  }
SS = 15	CP = 553	                  Accept }
SS = 15	CP = 554	                Accept repeat_part
SS = 13	CP = 554	              Accept part
SS = 13	CP = 554	              Match  ,
SS = 13	CP = 554	              Reject ,
SS = 12	CP = 554	              Predict Failed: part
SS = 11	CP = 554	            Accept term
SS = 11	CP = 554	            Match  |
SS = 11	CP = 554	            Reject |
SS = 10	CP = 554	          Accept declaration
SS = 9	CP = 554	          Match  }
SS = 9	CP = 554	          Accept }
SS = 9	CP = 555	        Accept repeat_part
SS = 7	CP = 555	      Accept part
SS = 7	CP = 555	      Match  ,
SS = 7	CP = 555	      Reject ,
SS = 7	CP = 555	      Deduce part
SS = 7	CP = 555	        Predict Failed in CONDITION
SS = 7	CP = 555	        Predict Failed in CONDITION
SS = 7	CP = 555	        Predict Failed in CONDITION
SS = 9	CP = 555	        Deduce simple_part
SS = 9	CP = 555	          Predict Failed in CONDITION
SS = 11	CP = 555	          Deduce terminal_symbol
SS = 12	CP = 555	            Match  slit
SS = 12	CP = 555	            Accept slit
SS = 11	CP = 556	          Accept terminal_symbol
SS = 9	CP = 556	        Accept simple_part
SS = 7	CP = 556	      Accept part
SS = 7	CP = 556	      Match  ,
SS = 7	CP = 556	      Reject ,
SS = 6	CP = 556	      Predict Failed: part
SS = 5	CP = 556	    Accept term
SS = 5	CP = 556	    Match  |
SS = 5	CP = 556	    Accept |
SS = 6	CP = 557	    Deduce term
SS = 7	CP = 557	      Deduce part
SS = 7	CP = 557	        Predict Failed in CONDITION
SS = 7	CP = 557	        Predict Failed in CONDITION
SS = 7	CP = 557	        Predict Failed in CONDITION
SS = 9	CP = 557	        Deduce simple_part
SS = 9	CP = 557	          Predict Failed in CONDITION
SS = 11	CP = 557	          Deduce terminal_symbol
SS = 12	CP = 557	            Match  slit
SS = 12	CP = 557	            Accept slit
SS = 11	CP = 558	          Accept terminal_symbol
SS = 9	CP = 558	        Accept simple_part
SS = 7	CP = 558	      Accept part
SS = 8	CP = 558	      Match  ,
SS = 8	CP = 558	      Reject ,
SS = 8	CP = 558	      Deduce part
SS = 8	CP = 558	        Predict Failed in CONDITION
SS = 8	CP = 558	        Predict Failed in CONDITION
SS = 8	CP = 558	        Predict Failed in CONDITION
SS = 10	CP = 558	        Deduce simple_part
SS = 12	CP = 558	          Deduce right_non_terminal_symbol
SS = 13	CP = 558	            Deduce non_terminal_symbol
SS = 13	CP = 558	              Match  id
SS = 13	CP = 558	              Accept id
SS = 13	CP = 559	            Accept non_terminal_symbol
SS = 12	CP = 559	          Accept right_non_terminal_symbol
SS = 10	CP = 559	        Accept simple_part
SS = 8	CP = 559	      Accept part
SS = 8	CP = 559	      Match  ,
SS = 8	CP = 559	      Reject ,
SS = 7	CP = 559	      Predict Failed: part
SS = 6	CP = 559	    Accept term
SS = 5	CP = 559	    Match  |
SS = 5	CP = 559	    Reject |
SS = 4	CP = 559	  Accept declaration
SS = 4	CP = 559	  Deduce end_op
SS = 5	CP = 559	    Match  ;
SS = 5	CP = 559	    Accept ;
SS = 4	CP = 560	  Accept end_op
SS = 3	CP = 560	Accept statement
SS = 3	CP = 560	Deduce statement
SS = 4	CP = 560	  Deduce non_terminal_symbol
SS = 4	CP = 560	    Match  id
SS = 4	CP = 560	    Accept id
SS = 4	CP = 561	  Accept non_terminal_symbol
SS = 4	CP = 561	  Deduce assign_op
SS = 5	CP = 561	    Match  ::=
SS = 5	CP = 561	    Accept ::=
SS = 4	CP = 562	  Accept assign_op
SS = 4	CP = 562	  Deduce declaration
SS = 5	CP = 562	    Deduce term
SS = 6	CP = 562	      Deduce part
SS = 6	CP = 562	        Predict Failed in CONDITION
SS = 6	CP = 562	        Predict Failed in CONDITION
SS = 6	CP = 562	        Predict Failed in CONDITION
SS = 8	CP = 562	        Deduce simple_part
SS = 10	CP = 562	          Deduce right_non_terminal_symbol
SS = 11	CP = 562	            Deduce non_terminal_symbol
SS = 11	CP = 562	              Match  id
SS = 11	CP = 562	              Accept id
SS = 11	CP = 563	            Accept non_terminal_symbol
SS = 10	CP = 563	          Accept right_non_terminal_symbol
SS = 8	CP = 563	        Accept simple_part
SS = 6	CP = 563	      Accept part
SS = 7	CP = 563	      Match  ,
SS = 7	CP = 563	      Reject ,
SS = 7	CP = 563	      Deduce part
SS = 7	CP = 563	        Predict Failed in CONDITION
SS = 7	CP = 563	        Predict Failed in CONDITION
SS = 9	CP = 563	        Deduce alternative_part
SS = 9	CP = 563	          Match  [
SS = 9	CP = 563	          Accept [
SS = 10	CP = 564	          Deduce declaration
SS = 11	CP = 564	            Deduce term
SS = 12	CP = 564	              Deduce part
SS = 12	CP = 564	                Predict Failed in CONDITION
SS = 12	CP = 564	                Predict Failed in CONDITION
SS = 12	CP = 564	                Predict Failed in CONDITION
SS = 14	CP = 564	                Deduce simple_part
SS = 16	CP = 564	                  Deduce right_non_terminal_symbol
SS = 17	CP = 564	                    Deduce non_terminal_symbol
SS = 17	CP = 564	                      Match  id
SS = 17	CP = 564	                      Accept id
SS = 17	CP = 565	                    Accept non_terminal_symbol
SS = 16	CP = 565	                  Accept right_non_terminal_symbol
SS = 14	CP = 565	                Accept simple_part
SS = 12	CP = 565	              Accept part
SS = 13	CP = 565	              Match  ,
SS = 13	CP = 565	              Reject ,
SS = 12	CP = 565	              Predict Failed: part
SS = 11	CP = 565	            Accept term
SS = 11	CP = 565	            Match  |
SS = 11	CP = 565	            Reject |
SS = 10	CP = 565	          Accept declaration
SS = 9	CP = 565	          Match  ]
SS = 9	CP = 565	          Accept ]
SS = 9	CP = 566	        Accept alternative_part
SS = 7	CP = 566	      Accept part
SS = 7	CP = 566	      Match  ,
SS = 7	CP = 566	      Reject ,
SS = 6	CP = 566	      Predict Failed: part
SS = 5	CP = 566	    Accept term
SS = 5	CP = 566	    Match  |
SS = 5	CP = 566	    Reject |
SS = 4	CP = 566	  Accept declaration
SS = 4	CP = 566	  Deduce end_op
SS = 5	CP = 566	    Match  ;
SS = 5	CP = 566	    Accept ;
SS = 4	CP = 567	  Accept end_op
SS = 3	CP = 567	Accept statement
SS = 3	CP = 567	Deduce statement
SS = 4	CP = 567	  Deduce non_terminal_symbol
SS = 4	CP = 567	    Match  id
SS = 4	CP = 567	    Accept id
SS = 4	CP = 568	  Accept non_terminal_symbol
SS = 4	CP = 568	  Deduce assign_op
SS = 5	CP = 568	    Match  ::=
SS = 5	CP = 568	    Accept ::=
SS = 4	CP = 569	  Accept assign_op
SS = 4	CP = 569	  Deduce declaration
SS = 5	CP = 569	    Deduce term
SS = 6	CP = 569	      Deduce part
SS = 6	CP = 569	        Predict Failed in CONDITION
SS = 6	CP = 569	        Predict Failed in CONDITION
SS = 6	CP = 569	        Predict Failed in CONDITION
SS = 8	CP = 569	        Deduce simple_part
SS = 8	CP = 569	          Predict Failed in CONDITION
SS = 10	CP = 569	          Deduce terminal_symbol
SS = 11	CP = 569	            Match  slit
SS = 11	CP = 569	            Accept slit
SS = 10	CP = 570	          Accept terminal_symbol
SS = 8	CP = 570	        Accept simple_part
SS = 6	CP = 570	      Accept part
SS = 7	CP = 570	      Match  ,
SS = 7	CP = 570	      Reject ,
SS = 7	CP = 570	      Deduce part
SS = 7	CP = 570	        Predict Failed in CONDITION
SS = 7	CP = 570	        Predict Failed in CONDITION
SS = 7	CP = 570	        Predict Failed in CONDITION
SS = 9	CP = 570	        Deduce simple_part
SS = 11	CP = 570	          Deduce right_non_terminal_symbol
SS = 12	CP = 570	            Deduce non_terminal_symbol
SS = 12	CP = 570	              Match  id
SS = 12	CP = 570	              Accept id
SS = 12	CP = 571	            Accept non_terminal_symbol
SS = 11	CP = 571	          Accept right_non_terminal_symbol
SS = 9	CP = 571	        Accept simple_part
SS = 7	CP = 571	      Accept part
SS = 7	CP = 571	      Match  ,
SS = 7	CP = 571	      Reject ,
SS = 7	CP = 571	      Deduce part
SS = 7	CP = 571	        Predict Failed in CONDITION
SS = 7	CP = 571	        Predict Failed in CONDITION
SS = 7	CP = 571	        Predict Failed in CONDITION
SS = 9	CP = 571	        Deduce simple_part
SS = 9	CP = 571	          Predict Failed in CONDITION
SS = 11	CP = 571	          Deduce terminal_symbol
SS = 12	CP = 571	            Match  slit
SS = 12	CP = 571	            Accept slit
SS = 11	CP = 572	          Accept terminal_symbol
SS = 9	CP = 572	        Accept simple_part
SS = 7	CP = 572	      Accept part
SS = 7	CP = 572	      Match  ,
SS = 7	CP = 572	      Reject ,
SS = 7	CP = 572	      Deduce part
SS = 7	CP = 572	        Predict Failed in CONDITION
SS = 7	CP = 572	        Predict Failed in CONDITION
SS = 7	CP = 572	        Predict Failed in CONDITION
SS = 9	CP = 572	        Deduce simple_part
SS = 11	CP = 572	          Deduce right_non_terminal_symbol
SS = 12	CP = 572	            Deduce non_terminal_symbol
SS = 12	CP = 572	              Match  id
SS = 12	CP = 572	              Accept id
SS = 12	CP = 573	            Accept non_terminal_symbol
SS = 11	CP = 573	          Accept right_non_terminal_symbol
SS = 9	CP = 573	        Accept simple_part
SS = 7	CP = 573	      Accept part
SS = 7	CP = 573	      Match  ,
SS = 7	CP = 573	      Reject ,
SS = 6	CP = 573	      Predict Failed: part
SS = 5	CP = 573	    Accept term
SS = 5	CP = 573	    Match  |
SS = 5	CP = 573	    Accept |
SS = 6	CP = 574	    Deduce term
SS = 7	CP = 574	      Deduce part
SS = 7	CP = 574	        Predict Failed in CONDITION
SS = 7	CP = 574	        Predict Failed in CONDITION
SS = 7	CP = 574	        Predict Failed in CONDITION
SS = 9	CP = 574	        Deduce simple_part
SS = 9	CP = 574	          Predict Failed in CONDITION
SS = 11	CP = 574	          Deduce terminal_symbol
SS = 12	CP = 574	            Match  slit
SS = 12	CP = 574	            Accept slit
SS = 11	CP = 575	          Accept terminal_symbol
SS = 9	CP = 575	        Accept simple_part
SS = 7	CP = 575	      Accept part
SS = 8	CP = 575	      Match  ,
SS = 8	CP = 575	      Reject ,
SS = 8	CP = 575	      Deduce part
SS = 8	CP = 575	        Predict Failed in CONDITION
SS = 8	CP = 575	        Predict Failed in CONDITION
SS = 8	CP = 575	        Predict Failed in CONDITION
SS = 10	CP = 575	        Deduce simple_part
SS = 12	CP = 575	          Deduce right_non_terminal_symbol
SS = 13	CP = 575	            Deduce non_terminal_symbol
SS = 13	CP = 575	              Match  id
SS = 13	CP = 575	              Accept id
SS = 13	CP = 576	            Accept non_terminal_symbol
SS = 12	CP = 576	          Accept right_non_terminal_symbol
SS = 10	CP = 576	        Accept simple_part
SS = 8	CP = 576	      Accept part
SS = 8	CP = 576	      Match  ,
SS = 8	CP = 576	      Reject ,
SS = 7	CP = 576	      Predict Failed: part
SS = 6	CP = 576	    Accept term
SS = 5	CP = 576	    Match  |
SS = 5	CP = 576	    Reject |
SS = 4	CP = 576	  Accept declaration
SS = 4	CP = 576	  Deduce end_op
SS = 5	CP = 576	    Match  ;
SS = 5	CP = 576	    Accept ;
SS = 4	CP = 577	  Accept end_op
SS = 3	CP = 577	Accept statement
SS = 3	CP = 577	Deduce statement
SS = 4	CP = 577	  Deduce non_terminal_symbol
SS = 4	CP = 577	    Match  id
SS = 4	CP = 577	    Accept id
SS = 4	CP = 578	  Accept non_terminal_symbol
SS = 4	CP = 578	  Deduce assign_op
SS = 5	CP = 578	    Match  ::=
SS = 5	CP = 578	    Accept ::=
SS = 4	CP = 579	  Accept assign_op
SS = 4	CP = 579	  Deduce declaration
SS = 5	CP = 579	    Deduce term
SS = 6	CP = 579	      Deduce part
SS = 6	CP = 579	        Predict Failed in CONDITION
SS = 6	CP = 579	        Predict Failed in CONDITION
SS = 6	CP = 579	        Predict Failed in CONDITION
SS = 8	CP = 579	        Deduce simple_part
SS = 10	CP = 579	          Deduce right_non_terminal_symbol
SS = 11	CP = 579	            Deduce non_terminal_symbol
SS = 11	CP = 579	              Match  id
SS = 11	CP = 579	              Accept id
SS = 11	CP = 580	            Accept non_terminal_symbol
SS = 10	CP = 580	          Accept right_non_terminal_symbol
SS = 8	CP = 580	        Accept simple_part
SS = 6	CP = 580	      Accept part
SS = 7	CP = 580	      Match  ,
SS = 7	CP = 580	      Reject ,
SS = 7	CP = 580	      Deduce part
SS = 7	CP = 580	        Predict Failed in CONDITION
SS = 7	CP = 580	        Predict Failed in CONDITION
SS = 9	CP = 580	        Deduce alternative_part
SS = 9	CP = 580	          Match  [
SS = 9	CP = 580	          Accept [
SS = 10	CP = 581	          Deduce declaration
SS = 11	CP = 581	            Deduce term
SS = 12	CP = 581	              Deduce part
SS = 12	CP = 581	                Predict Failed in CONDITION
SS = 14	CP = 581	                Deduce declaration_part
SS = 14	CP = 581	                  Match  (
SS = 14	CP = 581	                  Accept (
SS = 15	CP = 582	                  Deduce declaration
SS = 16	CP = 582	                    Deduce term
SS = 17	CP = 582	                      Deduce part
SS = 17	CP = 582	                        Predict Failed in CONDITION
SS = 17	CP = 582	                        Predict Failed in CONDITION
SS = 17	CP = 582	                        Predict Failed in CONDITION
SS = 19	CP = 582	                        Deduce simple_part
SS = 19	CP = 582	                          Predict Failed in CONDITION
SS = 21	CP = 582	                          Deduce terminal_symbol
SS = 22	CP = 582	                            Match  slit
SS = 22	CP = 582	                            Accept slit
SS = 21	CP = 583	                          Accept terminal_symbol
SS = 19	CP = 583	                        Accept simple_part
SS = 17	CP = 583	                      Accept part
SS = 18	CP = 583	                      Match  ,
SS = 18	CP = 583	                      Reject ,
SS = 17	CP = 583	                      Predict Failed: part
SS = 16	CP = 583	                    Accept term
SS = 16	CP = 583	                    Match  |
SS = 16	CP = 583	                    Accept |
SS = 17	CP = 584	                    Deduce term
SS = 18	CP = 584	                      Deduce part
SS = 18	CP = 584	                        Predict Failed in CONDITION
SS = 18	CP = 584	                        Predict Failed in CONDITION
SS = 18	CP = 584	                        Predict Failed in CONDITION
SS = 20	CP = 584	                        Deduce simple_part
SS = 20	CP = 584	                          Predict Failed in CONDITION
SS = 22	CP = 584	                          Deduce terminal_symbol
SS = 23	CP = 584	                            Match  slit
SS = 23	CP = 584	                            Accept slit
SS = 22	CP = 585	                          Accept terminal_symbol
SS = 20	CP = 585	                        Accept simple_part
SS = 18	CP = 585	                      Accept part
SS = 19	CP = 585	                      Match  ,
SS = 19	CP = 585	                      Reject ,
SS = 18	CP = 585	                      Predict Failed: part
SS = 17	CP = 585	                    Accept term
SS = 16	CP = 585	                    Match  |
SS = 16	CP = 585	                    Reject |
SS = 15	CP = 585	                  Accept declaration
SS = 14	CP = 585	                  Match  )
SS = 14	CP = 585	                  Accept )
SS = 14	CP = 586	                Accept declaration_part
SS = 12	CP = 586	              Accept part
SS = 13	CP = 586	              Match  ,
SS = 13	CP = 586	              Reject ,
SS = 13	CP = 586	              Deduce part
SS = 13	CP = 586	                Predict Failed in CONDITION
SS = 13	CP = 586	                Predict Failed in CONDITION
SS = 13	CP = 586	                Predict Failed in CONDITION
SS = 15	CP = 586	                Deduce simple_part
SS = 17	CP = 586	                  Deduce right_non_terminal_symbol
SS = 18	CP = 586	                    Deduce non_terminal_symbol
SS = 18	CP = 586	                      Match  id
SS = 18	CP = 586	                      Accept id
SS = 18	CP = 587	                    Accept non_terminal_symbol
SS = 17	CP = 587	                  Accept right_non_terminal_symbol
SS = 15	CP = 587	                Accept simple_part
SS = 13	CP = 587	              Accept part
SS = 13	CP = 587	              Match  ,
SS = 13	CP = 587	              Reject ,
SS = 12	CP = 587	              Predict Failed: part
SS = 11	CP = 587	            Accept term
SS = 11	CP = 587	            Match  |
SS = 11	CP = 587	            Reject |
SS = 10	CP = 587	          Accept declaration
SS = 9	CP = 587	          Match  ]
SS = 9	CP = 587	          Accept ]
SS = 9	CP = 588	        Accept alternative_part
SS = 7	CP = 588	      Accept part
SS = 7	CP = 588	      Match  ,
SS = 7	CP = 588	      Reject ,
SS = 6	CP = 588	      Predict Failed: part
SS = 5	CP = 588	    Accept term
SS = 5	CP = 588	    Match  |
SS = 5	CP = 588	    Reject |
SS = 4	CP = 588	  Accept declaration
SS = 4	CP = 588	  Deduce end_op
SS = 5	CP = 588	    Match  ;
SS = 5	CP = 588	    Accept ;
SS = 4	CP = 589	  Accept end_op
SS = 3	CP = 589	Accept statement
SS = 3	CP = 589	Deduce statement
SS = 4	CP = 589	  Deduce non_terminal_symbol
SS = 4	CP = 589	    Match  id
SS = 4	CP = 589	    Accept id
SS = 4	CP = 590	  Accept non_terminal_symbol
SS = 4	CP = 590	  Deduce assign_op
SS = 5	CP = 590	    Match  ::=
SS = 5	CP = 590	    Accept ::=
SS = 4	CP = 591	  Accept assign_op
SS = 4	CP = 591	  Deduce declaration
SS = 5	CP = 591	    Deduce term
SS = 6	CP = 591	      Deduce part
SS = 6	CP = 591	        Predict Failed in CONDITION
SS = 6	CP = 591	        Predict Failed in CONDITION
SS = 6	CP = 591	        Predict Failed in CONDITION
SS = 8	CP = 591	        Deduce simple_part
SS = 10	CP = 591	          Deduce right_non_terminal_symbol
SS = 11	CP = 591	            Deduce non_terminal_symbol
SS = 11	CP = 591	              Match  id
SS = 11	CP = 591	              Accept id
SS = 11	CP = 592	            Accept non_terminal_symbol
SS = 10	CP = 592	          Accept right_non_terminal_symbol
SS = 8	CP = 592	        Accept simple_part
SS = 6	CP = 592	      Accept part
SS = 7	CP = 592	      Match  ,
SS = 7	CP = 592	      Reject ,
SS = 7	CP = 592	      Deduce part
SS = 7	CP = 592	        Predict Failed in CONDITION
SS = 7	CP = 592	        Predict Failed in CONDITION
SS = 9	CP = 592	        Deduce alternative_part
SS = 9	CP = 592	          Match  [
SS = 9	CP = 592	          Accept [
SS = 10	CP = 593	          Deduce declaration
SS = 11	CP = 593	            Deduce term
SS = 12	CP = 593	              Deduce part
SS = 12	CP = 593	                Predict Failed in CONDITION
SS = 14	CP = 593	                Deduce declaration_part
SS = 14	CP = 593	                  Match  (
SS = 14	CP = 593	                  Accept (
SS = 15	CP = 594	                  Deduce declaration
SS = 16	CP = 594	                    Deduce term
SS = 17	CP = 594	                      Deduce part
SS = 17	CP = 594	                        Predict Failed in CONDITION
SS = 17	CP = 594	                        Predict Failed in CONDITION
SS = 17	CP = 594	                        Predict Failed in CONDITION
SS = 19	CP = 594	                        Deduce simple_part
SS = 19	CP = 594	                          Predict Failed in CONDITION
SS = 21	CP = 594	                          Deduce terminal_symbol
SS = 22	CP = 594	                            Match  slit
SS = 22	CP = 594	                            Accept slit
SS = 21	CP = 595	                          Accept terminal_symbol
SS = 19	CP = 595	                        Accept simple_part
SS = 17	CP = 595	                      Accept part
SS = 18	CP = 595	                      Match  ,
SS = 18	CP = 595	                      Reject ,
SS = 17	CP = 595	                      Predict Failed: part
SS = 16	CP = 595	                    Accept term
SS = 16	CP = 595	                    Match  |
SS = 16	CP = 595	                    Accept |
SS = 17	CP = 596	                    Deduce term
SS = 18	CP = 596	                      Deduce part
SS = 18	CP = 596	                        Predict Failed in CONDITION
SS = 18	CP = 596	                        Predict Failed in CONDITION
SS = 18	CP = 596	                        Predict Failed in CONDITION
SS = 20	CP = 596	                        Deduce simple_part
SS = 20	CP = 596	                          Predict Failed in CONDITION
SS = 22	CP = 596	                          Deduce terminal_symbol
SS = 23	CP = 596	                            Match  slit
SS = 23	CP = 596	                            Accept slit
SS = 22	CP = 597	                          Accept terminal_symbol
SS = 20	CP = 597	                        Accept simple_part
SS = 18	CP = 597	                      Accept part
SS = 19	CP = 597	                      Match  ,
SS = 19	CP = 597	                      Reject ,
SS = 18	CP = 597	                      Predict Failed: part
SS = 17	CP = 597	                    Accept term
SS = 16	CP = 597	                    Match  |
SS = 16	CP = 597	                    Reject |
SS = 15	CP = 597	                  Accept declaration
SS = 14	CP = 597	                  Match  )
SS = 14	CP = 597	                  Accept )
SS = 14	CP = 598	                Accept declaration_part
SS = 12	CP = 598	              Accept part
SS = 13	CP = 598	              Match  ,
SS = 13	CP = 598	              Reject ,
SS = 13	CP = 598	              Deduce part
SS = 13	CP = 598	                Predict Failed in CONDITION
SS = 13	CP = 598	                Predict Failed in CONDITION
SS = 13	CP = 598	                Predict Failed in CONDITION
SS = 15	CP = 598	                Deduce simple_part
SS = 17	CP = 598	                  Deduce right_non_terminal_symbol
SS = 18	CP = 598	                    Deduce non_terminal_symbol
SS = 18	CP = 598	                      Match  id
SS = 18	CP = 598	                      Accept id
SS = 18	CP = 599	                    Accept non_terminal_symbol
SS = 17	CP = 599	                  Accept right_non_terminal_symbol
SS = 15	CP = 599	                Accept simple_part
SS = 13	CP = 599	              Accept part
SS = 13	CP = 599	              Match  ,
SS = 13	CP = 599	              Reject ,
SS = 12	CP = 599	              Predict Failed: part
SS = 11	CP = 599	            Accept term
SS = 11	CP = 599	            Match  |
SS = 11	CP = 599	            Reject |
SS = 10	CP = 599	          Accept declaration
SS = 9	CP = 599	          Match  ]
SS = 9	CP = 599	          Accept ]
SS = 9	CP = 600	        Accept alternative_part
SS = 7	CP = 600	      Accept part
SS = 7	CP = 600	      Match  ,
SS = 7	CP = 600	      Reject ,
SS = 6	CP = 600	      Predict Failed: part
SS = 5	CP = 600	    Accept term
SS = 5	CP = 600	    Match  |
SS = 5	CP = 600	    Reject |
SS = 4	CP = 600	  Accept declaration
SS = 4	CP = 600	  Deduce end_op
SS = 5	CP = 600	    Match  ;
SS = 5	CP = 600	    Accept ;
SS = 4	CP = 601	  Accept end_op
SS = 3	CP = 601	Accept statement
SS = 3	CP = 601	Deduce statement
SS = 4	CP = 601	  Deduce non_terminal_symbol
SS = 4	CP = 601	    Match  id
SS = 4	CP = 601	    Accept id
SS = 4	CP = 602	  Accept non_terminal_symbol
SS = 4	CP = 602	  Deduce assign_op
SS = 5	CP = 602	    Match  ::=
SS = 5	CP = 602	    Accept ::=
SS = 4	CP = 603	  Accept assign_op
SS = 4	CP = 603	  Deduce declaration
SS = 5	CP = 603	    Deduce term
SS = 6	CP = 603	      Deduce part
SS = 6	CP = 603	        Predict Failed in CONDITION
SS = 6	CP = 603	        Predict Failed in CONDITION
SS = 6	CP = 603	        Predict Failed in CONDITION
SS = 8	CP = 603	        Deduce simple_part
SS = 10	CP = 603	          Deduce right_non_terminal_symbol
SS = 11	CP = 603	            Deduce non_terminal_symbol
SS = 11	CP = 603	              Match  id
SS = 11	CP = 603	              Accept id
SS = 11	CP = 604	            Accept non_terminal_symbol
SS = 10	CP = 604	          Accept right_non_terminal_symbol
SS = 8	CP = 604	        Accept simple_part
SS = 6	CP = 604	      Accept part
SS = 7	CP = 604	      Match  ,
SS = 7	CP = 604	      Reject ,
SS = 7	CP = 604	      Deduce part
SS = 7	CP = 604	        Predict Failed in CONDITION
SS = 7	CP = 604	        Predict Failed in CONDITION
SS = 9	CP = 604	        Deduce alternative_part
SS = 9	CP = 604	          Match  [
SS = 9	CP = 604	          Accept [
SS = 10	CP = 605	          Deduce declaration
SS = 11	CP = 605	            Deduce term
SS = 12	CP = 605	              Deduce part
SS = 12	CP = 605	                Predict Failed in CONDITION
SS = 14	CP = 605	                Deduce declaration_part
SS = 14	CP = 605	                  Match  (
SS = 14	CP = 605	                  Accept (
SS = 15	CP = 606	                  Deduce declaration
SS = 16	CP = 606	                    Deduce term
SS = 17	CP = 606	                      Deduce part
SS = 17	CP = 606	                        Predict Failed in CONDITION
SS = 17	CP = 606	                        Predict Failed in CONDITION
SS = 17	CP = 606	                        Predict Failed in CONDITION
SS = 19	CP = 606	                        Deduce simple_part
SS = 19	CP = 606	                          Predict Failed in CONDITION
SS = 21	CP = 606	                          Deduce terminal_symbol
SS = 22	CP = 606	                            Match  slit
SS = 22	CP = 606	                            Accept slit
SS = 21	CP = 607	                          Accept terminal_symbol
SS = 19	CP = 607	                        Accept simple_part
SS = 17	CP = 607	                      Accept part
SS = 18	CP = 607	                      Match  ,
SS = 18	CP = 607	                      Reject ,
SS = 17	CP = 607	                      Predict Failed: part
SS = 16	CP = 607	                    Accept term
SS = 16	CP = 607	                    Match  |
SS = 16	CP = 607	                    Accept |
SS = 17	CP = 608	                    Deduce term
SS = 18	CP = 608	                      Deduce part
SS = 18	CP = 608	                        Predict Failed in CONDITION
SS = 18	CP = 608	                        Predict Failed in CONDITION
SS = 18	CP = 608	                        Predict Failed in CONDITION
SS = 20	CP = 608	                        Deduce simple_part
SS = 20	CP = 608	                          Predict Failed in CONDITION
SS = 22	CP = 608	                          Deduce terminal_symbol
SS = 23	CP = 608	                            Match  slit
SS = 23	CP = 608	                            Accept slit
SS = 22	CP = 609	                          Accept terminal_symbol
SS = 20	CP = 609	                        Accept simple_part
SS = 18	CP = 609	                      Accept part
SS = 19	CP = 609	                      Match  ,
SS = 19	CP = 609	                      Reject ,
SS = 18	CP = 609	                      Predict Failed: part
SS = 17	CP = 609	                    Accept term
SS = 16	CP = 609	                    Match  |
SS = 16	CP = 609	                    Accept |
SS = 17	CP = 610	                    Deduce term
SS = 18	CP = 610	                      Deduce part
SS = 18	CP = 610	                        Predict Failed in CONDITION
SS = 18	CP = 610	                        Predict Failed in CONDITION
SS = 18	CP = 610	                        Predict Failed in CONDITION
SS = 20	CP = 610	                        Deduce simple_part
SS = 20	CP = 610	                          Predict Failed in CONDITION
SS = 22	CP = 610	                          Deduce terminal_symbol
SS = 23	CP = 610	                            Match  slit
SS = 23	CP = 610	                            Accept slit
SS = 22	CP = 611	                          Accept terminal_symbol
SS = 20	CP = 611	                        Accept simple_part
SS = 18	CP = 611	                      Accept part
SS = 19	CP = 611	                      Match  ,
SS = 19	CP = 611	                      Reject ,
SS = 18	CP = 611	                      Predict Failed: part
SS = 17	CP = 611	                    Accept term
SS = 16	CP = 611	                    Match  |
SS = 16	CP = 611	                    Accept |
SS = 17	CP = 612	                    Deduce term
SS = 18	CP = 612	                      Deduce part
SS = 18	CP = 612	                        Predict Failed in CONDITION
SS = 18	CP = 612	                        Predict Failed in CONDITION
SS = 18	CP = 612	                        Predict Failed in CONDITION
SS = 20	CP = 612	                        Deduce simple_part
SS = 20	CP = 612	                          Predict Failed in CONDITION
SS = 22	CP = 612	                          Deduce terminal_symbol
SS = 23	CP = 612	                            Match  slit
SS = 23	CP = 612	                            Accept slit
SS = 22	CP = 613	                          Accept terminal_symbol
SS = 20	CP = 613	                        Accept simple_part
SS = 18	CP = 613	                      Accept part
SS = 19	CP = 613	                      Match  ,
SS = 19	CP = 613	                      Reject ,
SS = 18	CP = 613	                      Predict Failed: part
SS = 17	CP = 613	                    Accept term
SS = 16	CP = 613	                    Match  |
SS = 16	CP = 613	                    Reject |
SS = 15	CP = 613	                  Accept declaration
SS = 14	CP = 613	                  Match  )
SS = 14	CP = 613	                  Accept )
SS = 14	CP = 614	                Accept declaration_part
SS = 12	CP = 614	              Accept part
SS = 13	CP = 614	              Match  ,
SS = 13	CP = 614	              Reject ,
SS = 13	CP = 614	              Deduce part
SS = 13	CP = 614	                Predict Failed in CONDITION
SS = 13	CP = 614	                Predict Failed in CONDITION
SS = 13	CP = 614	                Predict Failed in CONDITION
SS = 15	CP = 614	                Deduce simple_part
SS = 17	CP = 614	                  Deduce right_non_terminal_symbol
SS = 18	CP = 614	                    Deduce non_terminal_symbol
SS = 18	CP = 614	                      Match  id
SS = 18	CP = 614	                      Accept id
SS = 18	CP = 615	                    Accept non_terminal_symbol
SS = 17	CP = 615	                  Accept right_non_terminal_symbol
SS = 15	CP = 615	                Accept simple_part
SS = 13	CP = 615	              Accept part
SS = 13	CP = 615	              Match  ,
SS = 13	CP = 615	              Reject ,
SS = 12	CP = 615	              Predict Failed: part
SS = 11	CP = 615	            Accept term
SS = 11	CP = 615	            Match  |
SS = 11	CP = 615	            Reject |
SS = 10	CP = 615	          Accept declaration
SS = 9	CP = 615	          Match  ]
SS = 9	CP = 615	          Accept ]
SS = 9	CP = 616	        Accept alternative_part
SS = 7	CP = 616	      Accept part
SS = 7	CP = 616	      Match  ,
SS = 7	CP = 616	      Reject ,
SS = 6	CP = 616	      Predict Failed: part
SS = 5	CP = 616	    Accept term
SS = 5	CP = 616	    Match  |
SS = 5	CP = 616	    Reject |
SS = 4	CP = 616	  Accept declaration
SS = 4	CP = 616	  Deduce end_op
SS = 5	CP = 616	    Match  ;
SS = 5	CP = 616	    Accept ;
SS = 4	CP = 617	  Accept end_op
SS = 3	CP = 617	Accept statement
SS = 3	CP = 617	Deduce statement
SS = 4	CP = 617	  Deduce non_terminal_symbol
SS = 4	CP = 617	    Match  id
SS = 4	CP = 617	    Accept id
SS = 4	CP = 618	  Accept non_terminal_symbol
SS = 4	CP = 618	  Deduce assign_op
SS = 5	CP = 618	    Match  ::=
SS = 5	CP = 618	    Accept ::=
SS = 4	CP = 619	  Accept assign_op
SS = 4	CP = 619	  Deduce declaration
SS = 5	CP = 619	    Deduce term
SS = 6	CP = 619	      Deduce part
SS = 6	CP = 619	        Predict Failed in CONDITION
SS = 6	CP = 619	        Predict Failed in CONDITION
SS = 6	CP = 619	        Predict Failed in CONDITION
SS = 8	CP = 619	        Deduce simple_part
SS = 10	CP = 619	          Deduce right_non_terminal_symbol
SS = 11	CP = 619	            Deduce non_terminal_symbol
SS = 11	CP = 619	              Match  id
SS = 11	CP = 619	              Accept id
SS = 11	CP = 620	            Accept non_terminal_symbol
SS = 10	CP = 620	          Accept right_non_terminal_symbol
SS = 8	CP = 620	        Accept simple_part
SS = 6	CP = 620	      Accept part
SS = 7	CP = 620	      Match  ,
SS = 7	CP = 620	      Reject ,
SS = 7	CP = 620	      Deduce part
SS = 7	CP = 620	        Predict Failed in CONDITION
SS = 7	CP = 620	        Predict Failed in CONDITION
SS = 9	CP = 620	        Deduce alternative_part
SS = 9	CP = 620	          Match  [
SS = 9	CP = 620	          Accept [
SS = 10	CP = 621	          Deduce declaration
SS = 11	CP = 621	            Deduce term
SS = 12	CP = 621	              Deduce part
SS = 12	CP = 621	                Predict Failed in CONDITION
SS = 14	CP = 621	                Deduce declaration_part
SS = 14	CP = 621	                  Match  (
SS = 14	CP = 621	                  Accept (
SS = 15	CP = 622	                  Deduce declaration
SS = 16	CP = 622	                    Deduce term
SS = 17	CP = 622	                      Deduce part
SS = 17	CP = 622	                        Predict Failed in CONDITION
SS = 17	CP = 622	                        Predict Failed in CONDITION
SS = 17	CP = 622	                        Predict Failed in CONDITION
SS = 19	CP = 622	                        Deduce simple_part
SS = 19	CP = 622	                          Predict Failed in CONDITION
SS = 21	CP = 622	                          Deduce terminal_symbol
SS = 22	CP = 622	                            Match  slit
SS = 22	CP = 622	                            Accept slit
SS = 21	CP = 623	                          Accept terminal_symbol
SS = 19	CP = 623	                        Accept simple_part
SS = 17	CP = 623	                      Accept part
SS = 18	CP = 623	                      Match  ,
SS = 18	CP = 623	                      Reject ,
SS = 17	CP = 623	                      Predict Failed: part
SS = 16	CP = 623	                    Accept term
SS = 16	CP = 623	                    Match  |
SS = 16	CP = 623	                    Accept |
SS = 17	CP = 624	                    Deduce term
SS = 18	CP = 624	                      Deduce part
SS = 18	CP = 624	                        Predict Failed in CONDITION
SS = 18	CP = 624	                        Predict Failed in CONDITION
SS = 18	CP = 624	                        Predict Failed in CONDITION
SS = 20	CP = 624	                        Deduce simple_part
SS = 20	CP = 624	                          Predict Failed in CONDITION
SS = 22	CP = 624	                          Deduce terminal_symbol
SS = 23	CP = 624	                            Match  slit
SS = 23	CP = 624	                            Accept slit
SS = 22	CP = 625	                          Accept terminal_symbol
SS = 20	CP = 625	                        Accept simple_part
SS = 18	CP = 625	                      Accept part
SS = 19	CP = 625	                      Match  ,
SS = 19	CP = 625	                      Reject ,
SS = 18	CP = 625	                      Predict Failed: part
SS = 17	CP = 625	                    Accept term
SS = 16	CP = 625	                    Match  |
SS = 16	CP = 625	                    Accept |
SS = 17	CP = 626	                    Deduce term
SS = 18	CP = 626	                      Deduce part
SS = 18	CP = 626	                        Predict Failed in CONDITION
SS = 18	CP = 626	                        Predict Failed in CONDITION
SS = 18	CP = 626	                        Predict Failed in CONDITION
SS = 20	CP = 626	                        Deduce simple_part
SS = 20	CP = 626	                          Predict Failed in CONDITION
SS = 22	CP = 626	                          Deduce terminal_symbol
SS = 23	CP = 626	                            Match  slit
SS = 23	CP = 626	                            Accept slit
SS = 22	CP = 627	                          Accept terminal_symbol
SS = 20	CP = 627	                        Accept simple_part
SS = 18	CP = 627	                      Accept part
SS = 19	CP = 627	                      Match  ,
SS = 19	CP = 627	                      Reject ,
SS = 18	CP = 627	                      Predict Failed: part
SS = 17	CP = 627	                    Accept term
SS = 16	CP = 627	                    Match  |
SS = 16	CP = 627	                    Accept |
SS = 17	CP = 628	                    Deduce term
SS = 18	CP = 628	                      Deduce part
SS = 18	CP = 628	                        Predict Failed in CONDITION
SS = 18	CP = 628	                        Predict Failed in CONDITION
SS = 18	CP = 628	                        Predict Failed in CONDITION
SS = 20	CP = 628	                        Deduce simple_part
SS = 20	CP = 628	                          Predict Failed in CONDITION
SS = 22	CP = 628	                          Deduce terminal_symbol
SS = 23	CP = 628	                            Match  slit
SS = 23	CP = 628	                            Accept slit
SS = 22	CP = 629	                          Accept terminal_symbol
SS = 20	CP = 629	                        Accept simple_part
SS = 18	CP = 629	                      Accept part
SS = 19	CP = 629	                      Match  ,
SS = 19	CP = 629	                      Reject ,
SS = 18	CP = 629	                      Predict Failed: part
SS = 17	CP = 629	                    Accept term
SS = 16	CP = 629	                    Match  |
SS = 16	CP = 629	                    Reject |
SS = 15	CP = 629	                  Accept declaration
SS = 14	CP = 629	                  Match  )
SS = 14	CP = 629	                  Accept )
SS = 14	CP = 630	                Accept declaration_part
SS = 12	CP = 630	              Accept part
SS = 13	CP = 630	              Match  ,
SS = 13	CP = 630	              Reject ,
SS = 13	CP = 630	              Deduce part
SS = 13	CP = 630	                Predict Failed in CONDITION
SS = 13	CP = 630	                Predict Failed in CONDITION
SS = 13	CP = 630	                Predict Failed in CONDITION
SS = 15	CP = 630	                Deduce simple_part
SS = 17	CP = 630	                  Deduce right_non_terminal_symbol
SS = 18	CP = 630	                    Deduce non_terminal_symbol
SS = 18	CP = 630	                      Match  id
SS = 18	CP = 630	                      Accept id
SS = 18	CP = 631	                    Accept non_terminal_symbol
SS = 17	CP = 631	                  Accept right_non_terminal_symbol
SS = 15	CP = 631	                Accept simple_part
SS = 13	CP = 631	              Accept part
SS = 13	CP = 631	              Match  ,
SS = 13	CP = 631	              Reject ,
SS = 12	CP = 631	              Predict Failed: part
SS = 11	CP = 631	            Accept term
SS = 11	CP = 631	            Match  |
SS = 11	CP = 631	            Reject |
SS = 10	CP = 631	          Accept declaration
SS = 9	CP = 631	          Match  ]
SS = 9	CP = 631	          Accept ]
SS = 9	CP = 632	        Accept alternative_part
SS = 7	CP = 632	      Accept part
SS = 7	CP = 632	      Match  ,
SS = 7	CP = 632	      Reject ,
SS = 6	CP = 632	      Predict Failed: part
SS = 5	CP = 632	    Accept term
SS = 5	CP = 632	    Match  |
SS = 5	CP = 632	    Reject |
SS = 4	CP = 632	  Accept declaration
SS = 4	CP = 632	  Deduce end_op
SS = 5	CP = 632	    Match  ;
SS = 5	CP = 632	    Accept ;
SS = 4	CP = 633	  Accept end_op
SS = 3	CP = 633	Accept statement
SS = 3	CP = 633	Deduce statement
SS = 4	CP = 633	  Deduce non_terminal_symbol
SS = 4	CP = 633	    Match  id
SS = 4	CP = 633	    Accept id
SS = 4	CP = 634	  Accept non_terminal_symbol
SS = 4	CP = 634	  Deduce assign_op
SS = 5	CP = 634	    Match  ::=
SS = 5	CP = 634	    Accept ::=
SS = 4	CP = 635	  Accept assign_op
SS = 4	CP = 635	  Deduce declaration
SS = 5	CP = 635	    Deduce term
SS = 6	CP = 635	      Deduce part
SS = 6	CP = 635	        Predict Failed in CONDITION
SS = 6	CP = 635	        Predict Failed in CONDITION
SS = 6	CP = 635	        Predict Failed in CONDITION
SS = 8	CP = 635	        Deduce simple_part
SS = 10	CP = 635	          Deduce right_non_terminal_symbol
SS = 11	CP = 635	            Deduce non_terminal_symbol
SS = 11	CP = 635	              Match  id
SS = 11	CP = 635	              Accept id
SS = 11	CP = 636	            Accept non_terminal_symbol
SS = 10	CP = 636	          Accept right_non_terminal_symbol
SS = 8	CP = 636	        Accept simple_part
SS = 6	CP = 636	      Accept part
SS = 7	CP = 636	      Match  ,
SS = 7	CP = 636	      Reject ,
SS = 7	CP = 636	      Deduce part
SS = 7	CP = 636	        Predict Failed in CONDITION
SS = 7	CP = 636	        Predict Failed in CONDITION
SS = 9	CP = 636	        Deduce alternative_part
SS = 9	CP = 636	          Match  [
SS = 9	CP = 636	          Accept [
SS = 10	CP = 637	          Deduce declaration
SS = 11	CP = 637	            Deduce term
SS = 12	CP = 637	              Deduce part
SS = 12	CP = 637	                Predict Failed in CONDITION
SS = 14	CP = 637	                Deduce declaration_part
SS = 14	CP = 637	                  Match  (
SS = 14	CP = 637	                  Accept (
SS = 15	CP = 638	                  Deduce declaration
SS = 16	CP = 638	                    Deduce term
SS = 17	CP = 638	                      Deduce part
SS = 17	CP = 638	                        Predict Failed in CONDITION
SS = 17	CP = 638	                        Predict Failed in CONDITION
SS = 17	CP = 638	                        Predict Failed in CONDITION
SS = 19	CP = 638	                        Deduce simple_part
SS = 19	CP = 638	                          Predict Failed in CONDITION
SS = 21	CP = 638	                          Deduce terminal_symbol
SS = 22	CP = 638	                            Match  slit
SS = 22	CP = 638	                            Accept slit
SS = 21	CP = 639	                          Accept terminal_symbol
SS = 19	CP = 639	                        Accept simple_part
SS = 17	CP = 639	                      Accept part
SS = 18	CP = 639	                      Match  ,
SS = 18	CP = 639	                      Reject ,
SS = 17	CP = 639	                      Predict Failed: part
SS = 16	CP = 639	                    Accept term
SS = 16	CP = 639	                    Match  |
SS = 16	CP = 639	                    Accept |
SS = 17	CP = 640	                    Deduce term
SS = 18	CP = 640	                      Deduce part
SS = 18	CP = 640	                        Predict Failed in CONDITION
SS = 18	CP = 640	                        Predict Failed in CONDITION
SS = 18	CP = 640	                        Predict Failed in CONDITION
SS = 20	CP = 640	                        Deduce simple_part
SS = 20	CP = 640	                          Predict Failed in CONDITION
SS = 22	CP = 640	                          Deduce terminal_symbol
SS = 23	CP = 640	                            Match  slit
SS = 23	CP = 640	                            Accept slit
SS = 22	CP = 641	                          Accept terminal_symbol
SS = 20	CP = 641	                        Accept simple_part
SS = 18	CP = 641	                      Accept part
SS = 19	CP = 641	                      Match  ,
SS = 19	CP = 641	                      Reject ,
SS = 18	CP = 641	                      Predict Failed: part
SS = 17	CP = 641	                    Accept term
SS = 16	CP = 641	                    Match  |
SS = 16	CP = 641	                    Reject |
SS = 15	CP = 641	                  Accept declaration
SS = 14	CP = 641	                  Match  )
SS = 14	CP = 641	                  Accept )
SS = 14	CP = 642	                Accept declaration_part
SS = 12	CP = 642	              Accept part
SS = 13	CP = 642	              Match  ,
SS = 13	CP = 642	              Reject ,
SS = 13	CP = 642	              Deduce part
SS = 13	CP = 642	                Predict Failed in CONDITION
SS = 13	CP = 642	                Predict Failed in CONDITION
SS = 13	CP = 642	                Predict Failed in CONDITION
SS = 15	CP = 642	                Deduce simple_part
SS = 17	CP = 642	                  Deduce right_non_terminal_symbol
SS = 18	CP = 642	                    Deduce non_terminal_symbol
SS = 18	CP = 642	                      Match  id
SS = 18	CP = 642	                      Accept id
SS = 18	CP = 643	                    Accept non_terminal_symbol
SS = 17	CP = 643	                  Accept right_non_terminal_symbol
SS = 15	CP = 643	                Accept simple_part
SS = 13	CP = 643	              Accept part
SS = 13	CP = 643	              Match  ,
SS = 13	CP = 643	              Reject ,
SS = 12	CP = 643	              Predict Failed: part
SS = 11	CP = 643	            Accept term
SS = 11	CP = 643	            Match  |
SS = 11	CP = 643	            Reject |
SS = 10	CP = 643	          Accept declaration
SS = 9	CP = 643	          Match  ]
SS = 9	CP = 643	          Accept ]
SS = 9	CP = 644	        Accept alternative_part
SS = 7	CP = 644	      Accept part
SS = 7	CP = 644	      Match  ,
SS = 7	CP = 644	      Reject ,
SS = 6	CP = 644	      Predict Failed: part
SS = 5	CP = 644	    Accept term
SS = 5	CP = 644	    Match  |
SS = 5	CP = 644	    Reject |
SS = 4	CP = 644	  Accept declaration
SS = 4	CP = 644	  Deduce end_op
SS = 5	CP = 644	    Match  ;
SS = 5	CP = 644	    Accept ;
SS = 4	CP = 645	  Accept end_op
SS = 3	CP = 645	Accept statement
SS = 3	CP = 645	Deduce statement
SS = 4	CP = 645	  Deduce non_terminal_symbol
SS = 4	CP = 645	    Match  id
SS = 4	CP = 645	    Accept id
SS = 4	CP = 646	  Accept non_terminal_symbol
SS = 4	CP = 646	  Deduce assign_op
SS = 5	CP = 646	    Match  ::=
SS = 5	CP = 646	    Accept ::=
SS = 4	CP = 647	  Accept assign_op
SS = 4	CP = 647	  Deduce declaration
SS = 5	CP = 647	    Deduce term
SS = 6	CP = 647	      Deduce part
SS = 6	CP = 647	        Predict Failed in CONDITION
SS = 6	CP = 647	        Predict Failed in CONDITION
SS = 6	CP = 647	        Predict Failed in CONDITION
SS = 8	CP = 647	        Deduce simple_part
SS = 10	CP = 647	          Deduce right_non_terminal_symbol
SS = 11	CP = 647	            Deduce non_terminal_symbol
SS = 11	CP = 647	              Match  id
SS = 11	CP = 647	              Accept id
SS = 11	CP = 648	            Accept non_terminal_symbol
SS = 10	CP = 648	          Accept right_non_terminal_symbol
SS = 8	CP = 648	        Accept simple_part
SS = 6	CP = 648	      Accept part
SS = 7	CP = 648	      Match  ,
SS = 7	CP = 648	      Reject ,
SS = 7	CP = 648	      Deduce part
SS = 7	CP = 648	        Predict Failed in CONDITION
SS = 7	CP = 648	        Predict Failed in CONDITION
SS = 9	CP = 648	        Deduce alternative_part
SS = 9	CP = 648	          Match  [
SS = 9	CP = 648	          Accept [
SS = 10	CP = 649	          Deduce declaration
SS = 11	CP = 649	            Deduce term
SS = 12	CP = 649	              Deduce part
SS = 12	CP = 649	                Predict Failed in CONDITION
SS = 14	CP = 649	                Deduce declaration_part
SS = 14	CP = 649	                  Match  (
SS = 14	CP = 649	                  Accept (
SS = 15	CP = 650	                  Deduce declaration
SS = 16	CP = 650	                    Deduce term
SS = 17	CP = 650	                      Deduce part
SS = 17	CP = 650	                        Predict Failed in CONDITION
SS = 17	CP = 650	                        Predict Failed in CONDITION
SS = 17	CP = 650	                        Predict Failed in CONDITION
SS = 19	CP = 650	                        Deduce simple_part
SS = 19	CP = 650	                          Predict Failed in CONDITION
SS = 21	CP = 650	                          Deduce terminal_symbol
SS = 22	CP = 650	                            Match  slit
SS = 22	CP = 650	                            Accept slit
SS = 21	CP = 651	                          Accept terminal_symbol
SS = 19	CP = 651	                        Accept simple_part
SS = 17	CP = 651	                      Accept part
SS = 18	CP = 651	                      Match  ,
SS = 18	CP = 651	                      Reject ,
SS = 17	CP = 651	                      Predict Failed: part
SS = 16	CP = 651	                    Accept term
SS = 16	CP = 651	                    Match  |
SS = 16	CP = 651	                    Accept |
SS = 17	CP = 652	                    Deduce term
SS = 18	CP = 652	                      Deduce part
SS = 18	CP = 652	                        Predict Failed in CONDITION
SS = 18	CP = 652	                        Predict Failed in CONDITION
SS = 18	CP = 652	                        Predict Failed in CONDITION
SS = 20	CP = 652	                        Deduce simple_part
SS = 20	CP = 652	                          Predict Failed in CONDITION
SS = 22	CP = 652	                          Deduce terminal_symbol
SS = 23	CP = 652	                            Match  slit
SS = 23	CP = 652	                            Accept slit
SS = 22	CP = 653	                          Accept terminal_symbol
SS = 20	CP = 653	                        Accept simple_part
SS = 18	CP = 653	                      Accept part
SS = 19	CP = 653	                      Match  ,
SS = 19	CP = 653	                      Reject ,
SS = 18	CP = 653	                      Predict Failed: part
SS = 17	CP = 653	                    Accept term
SS = 16	CP = 653	                    Match  |
SS = 16	CP = 653	                    Accept |
SS = 17	CP = 654	                    Deduce term
SS = 18	CP = 654	                      Deduce part
SS = 18	CP = 654	                        Predict Failed in CONDITION
SS = 18	CP = 654	                        Predict Failed in CONDITION
SS = 18	CP = 654	                        Predict Failed in CONDITION
SS = 20	CP = 654	                        Deduce simple_part
SS = 20	CP = 654	                          Predict Failed in CONDITION
SS = 22	CP = 654	                          Deduce terminal_symbol
SS = 23	CP = 654	                            Match  slit
SS = 23	CP = 654	                            Accept slit
SS = 22	CP = 655	                          Accept terminal_symbol
SS = 20	CP = 655	                        Accept simple_part
SS = 18	CP = 655	                      Accept part
SS = 19	CP = 655	                      Match  ,
SS = 19	CP = 655	                      Reject ,
SS = 18	CP = 655	                      Predict Failed: part
SS = 17	CP = 655	                    Accept term
SS = 16	CP = 655	                    Match  |
SS = 16	CP = 655	                    Accept |
SS = 17	CP = 656	                    Deduce term
SS = 18	CP = 656	                      Deduce part
SS = 18	CP = 656	                        Predict Failed in CONDITION
SS = 18	CP = 656	                        Predict Failed in CONDITION
SS = 18	CP = 656	                        Predict Failed in CONDITION
SS = 20	CP = 656	                        Deduce simple_part
SS = 20	CP = 656	                          Predict Failed in CONDITION
SS = 22	CP = 656	                          Deduce terminal_symbol
SS = 23	CP = 656	                            Match  slit
SS = 23	CP = 656	                            Accept slit
SS = 22	CP = 657	                          Accept terminal_symbol
SS = 20	CP = 657	                        Accept simple_part
SS = 18	CP = 657	                      Accept part
SS = 19	CP = 657	                      Match  ,
SS = 19	CP = 657	                      Reject ,
SS = 18	CP = 657	                      Predict Failed: part
SS = 17	CP = 657	                    Accept term
SS = 16	CP = 657	                    Match  |
SS = 16	CP = 657	                    Reject |
SS = 15	CP = 657	                  Accept declaration
SS = 14	CP = 657	                  Match  )
SS = 14	CP = 657	                  Accept )
SS = 14	CP = 658	                Accept declaration_part
SS = 12	CP = 658	              Accept part
SS = 13	CP = 658	              Match  ,
SS = 13	CP = 658	              Reject ,
SS = 13	CP = 658	              Deduce part
SS = 13	CP = 658	                Predict Failed in CONDITION
SS = 13	CP = 658	                Predict Failed in CONDITION
SS = 13	CP = 658	                Predict Failed in CONDITION
SS = 15	CP = 658	                Deduce simple_part
SS = 17	CP = 658	                  Deduce right_non_terminal_symbol
SS = 18	CP = 658	                    Deduce non_terminal_symbol
SS = 18	CP = 658	                      Match  id
SS = 18	CP = 658	                      Accept id
SS = 18	CP = 659	                    Accept non_terminal_symbol
SS = 17	CP = 659	                  Accept right_non_terminal_symbol
SS = 15	CP = 659	                Accept simple_part
SS = 13	CP = 659	              Accept part
SS = 13	CP = 659	              Match  ,
SS = 13	CP = 659	              Reject ,
SS = 12	CP = 659	              Predict Failed: part
SS = 11	CP = 659	            Accept term
SS = 11	CP = 659	            Match  |
SS = 11	CP = 659	            Reject |
SS = 10	CP = 659	          Accept declaration
SS = 9	CP = 659	          Match  ]
SS = 9	CP = 659	          Accept ]
SS = 9	CP = 660	        Accept alternative_part
SS = 7	CP = 660	      Accept part
SS = 7	CP = 660	      Match  ,
SS = 7	CP = 660	      Reject ,
SS = 6	CP = 660	      Predict Failed: part
SS = 5	CP = 660	    Accept term
SS = 5	CP = 660	    Match  |
SS = 5	CP = 660	    Reject |
SS = 4	CP = 660	  Accept declaration
SS = 4	CP = 660	  Deduce end_op
SS = 5	CP = 660	    Match  ;
SS = 5	CP = 660	    Accept ;
SS = 4	CP = 661	  Accept end_op
SS = 3	CP = 661	Accept statement
SS = 3	CP = 661	Deduce statement
SS = 4	CP = 661	  Deduce non_terminal_symbol
SS = 4	CP = 661	    Match  id
SS = 4	CP = 661	    Accept id
SS = 4	CP = 662	  Accept non_terminal_symbol
SS = 4	CP = 662	  Deduce assign_op
SS = 5	CP = 662	    Match  ::=
SS = 5	CP = 662	    Accept ::=
SS = 4	CP = 663	  Accept assign_op
SS = 4	CP = 663	  Deduce declaration
SS = 5	CP = 663	    Deduce term
SS = 6	CP = 663	      Deduce part
SS = 6	CP = 663	        Predict Failed in CONDITION
SS = 6	CP = 663	        Predict Failed in CONDITION
SS = 6	CP = 663	        Predict Failed in CONDITION
SS = 8	CP = 663	        Deduce simple_part
SS = 10	CP = 663	          Deduce right_non_terminal_symbol
SS = 11	CP = 663	            Deduce non_terminal_symbol
SS = 11	CP = 663	              Match  id
SS = 11	CP = 663	              Accept id
SS = 11	CP = 664	            Accept non_terminal_symbol
SS = 10	CP = 664	          Accept right_non_terminal_symbol
SS = 8	CP = 664	        Accept simple_part
SS = 6	CP = 664	      Accept part
SS = 7	CP = 664	      Match  ,
SS = 7	CP = 664	      Reject ,
SS = 7	CP = 664	      Deduce part
SS = 7	CP = 664	        Predict Failed in CONDITION
SS = 7	CP = 664	        Predict Failed in CONDITION
SS = 7	CP = 664	        Predict Failed in CONDITION
SS = 9	CP = 664	        Deduce simple_part
SS = 11	CP = 664	          Deduce right_non_terminal_symbol
SS = 12	CP = 664	            Deduce non_terminal_symbol
SS = 12	CP = 664	              Match  id
SS = 12	CP = 664	              Accept id
SS = 12	CP = 665	            Accept non_terminal_symbol
SS = 11	CP = 665	          Accept right_non_terminal_symbol
SS = 9	CP = 665	        Accept simple_part
SS = 7	CP = 665	      Accept part
SS = 7	CP = 665	      Match  ,
SS = 7	CP = 665	      Reject ,
SS = 6	CP = 665	      Predict Failed: part
SS = 5	CP = 665	    Accept term
SS = 5	CP = 665	    Match  |
SS = 5	CP = 665	    Accept |
SS = 6	CP = 666	    Deduce term
SS = 7	CP = 666	      Deduce part
SS = 7	CP = 666	        Predict Failed in CONDITION
SS = 9	CP = 666	        Deduce declaration_part
SS = 9	CP = 666	          Match  (
SS = 9	CP = 666	          Accept (
SS = 10	CP = 667	          Deduce declaration
SS = 11	CP = 667	            Deduce term
SS = 12	CP = 667	              Deduce part
SS = 12	CP = 667	                Predict Failed in CONDITION
SS = 12	CP = 667	                Predict Failed in CONDITION
SS = 12	CP = 667	                Predict Failed in CONDITION
SS = 14	CP = 667	                Deduce simple_part
SS = 14	CP = 667	                  Predict Failed in CONDITION
SS = 16	CP = 667	                  Deduce terminal_symbol
SS = 17	CP = 667	                    Match  slit
SS = 17	CP = 667	                    Accept slit
SS = 16	CP = 668	                  Accept terminal_symbol
SS = 14	CP = 668	                Accept simple_part
SS = 12	CP = 668	              Accept part
SS = 13	CP = 668	              Match  ,
SS = 13	CP = 668	              Reject ,
SS = 12	CP = 668	              Predict Failed: part
SS = 11	CP = 668	            Accept term
SS = 11	CP = 668	            Match  |
SS = 11	CP = 668	            Accept |
SS = 12	CP = 669	            Deduce term
SS = 13	CP = 669	              Deduce part
SS = 13	CP = 669	                Predict Failed in CONDITION
SS = 13	CP = 669	                Predict Failed in CONDITION
SS = 13	CP = 669	                Predict Failed in CONDITION
SS = 15	CP = 669	                Deduce simple_part
SS = 15	CP = 669	                  Predict Failed in CONDITION
SS = 17	CP = 669	                  Deduce terminal_symbol
SS = 18	CP = 669	                    Match  slit
SS = 18	CP = 669	                    Accept slit
SS = 17	CP = 670	                  Accept terminal_symbol
SS = 15	CP = 670	                Accept simple_part
SS = 13	CP = 670	              Accept part
SS = 14	CP = 670	              Match  ,
SS = 14	CP = 670	              Reject ,
SS = 13	CP = 670	              Predict Failed: part
SS = 12	CP = 670	            Accept term
SS = 11	CP = 670	            Match  |
SS = 11	CP = 670	            Reject |
SS = 10	CP = 670	          Accept declaration
SS = 9	CP = 670	          Match  )
SS = 9	CP = 670	          Accept )
SS = 9	CP = 671	        Accept declaration_part
SS = 7	CP = 671	      Accept part
SS = 8	CP = 671	      Match  ,
SS = 8	CP = 671	      Reject ,
SS = 8	CP = 671	      Deduce part
SS = 8	CP = 671	        Predict Failed in CONDITION
SS = 8	CP = 671	        Predict Failed in CONDITION
SS = 8	CP = 671	        Predict Failed in CONDITION
SS = 10	CP = 671	        Deduce simple_part
SS = 12	CP = 671	          Deduce right_non_terminal_symbol
SS = 13	CP = 671	            Deduce non_terminal_symbol
SS = 13	CP = 671	              Match  id
SS = 13	CP = 671	              Accept id
SS = 13	CP = 672	            Accept non_terminal_symbol
SS = 12	CP = 672	          Accept right_non_terminal_symbol
SS = 10	CP = 672	        Accept simple_part
SS = 8	CP = 672	      Accept part
SS = 8	CP = 672	      Match  ,
SS = 8	CP = 672	      Reject ,
SS = 8	CP = 672	      Deduce part
SS = 8	CP = 672	        Predict Failed in CONDITION
SS = 8	CP = 672	        Predict Failed in CONDITION
SS = 10	CP = 672	        Deduce alternative_part
SS = 10	CP = 672	          Match  [
SS = 10	CP = 672	          Accept [
SS = 11	CP = 673	          Deduce declaration
SS = 12	CP = 673	            Deduce term
SS = 13	CP = 673	              Deduce part
SS = 13	CP = 673	                Predict Failed in CONDITION
SS = 13	CP = 673	                Predict Failed in CONDITION
SS = 13	CP = 673	                Predict Failed in CONDITION
SS = 15	CP = 673	                Deduce simple_part
SS = 17	CP = 673	                  Deduce right_non_terminal_symbol
SS = 18	CP = 673	                    Deduce non_terminal_symbol
SS = 18	CP = 673	                      Match  id
SS = 18	CP = 673	                      Accept id
SS = 18	CP = 674	                    Accept non_terminal_symbol
SS = 17	CP = 674	                  Accept right_non_terminal_symbol
SS = 15	CP = 674	                Accept simple_part
SS = 13	CP = 674	              Accept part
SS = 14	CP = 674	              Match  ,
SS = 14	CP = 674	              Reject ,
SS = 13	CP = 674	              Predict Failed: part
SS = 12	CP = 674	            Accept term
SS = 12	CP = 674	            Match  |
SS = 12	CP = 674	            Reject |
SS = 11	CP = 674	          Accept declaration
SS = 10	CP = 674	          Match  ]
SS = 10	CP = 674	          Accept ]
SS = 10	CP = 675	        Accept alternative_part
SS = 8	CP = 675	      Accept part
SS = 8	CP = 675	      Match  ,
SS = 8	CP = 675	      Reject ,
SS = 7	CP = 675	      Predict Failed: part
SS = 6	CP = 675	    Accept term
SS = 5	CP = 675	    Match  |
SS = 5	CP = 675	    Accept |
SS = 6	CP = 676	    Deduce term
SS = 7	CP = 676	      Deduce part
SS = 7	CP = 676	        Predict Failed in CONDITION
SS = 7	CP = 676	        Predict Failed in CONDITION
SS = 7	CP = 676	        Predict Failed in CONDITION
SS = 9	CP = 676	        Deduce simple_part
SS = 11	CP = 676	          Deduce right_non_terminal_symbol
SS = 12	CP = 676	            Deduce non_terminal_symbol
SS = 12	CP = 676	              Match  id
SS = 12	CP = 676	              Accept id
SS = 12	CP = 677	            Accept non_terminal_symbol
SS = 11	CP = 677	          Accept right_non_terminal_symbol
SS = 9	CP = 677	        Accept simple_part
SS = 7	CP = 677	      Accept part
SS = 8	CP = 677	      Match  ,
SS = 8	CP = 677	      Reject ,
SS = 8	CP = 677	      Deduce part
SS = 8	CP = 677	        Predict Failed in CONDITION
SS = 8	CP = 677	        Predict Failed in CONDITION
SS = 10	CP = 677	        Deduce alternative_part
SS = 10	CP = 677	          Match  [
SS = 10	CP = 677	          Accept [
SS = 11	CP = 678	          Deduce declaration
SS = 12	CP = 678	            Deduce term
SS = 13	CP = 678	              Deduce part
SS = 13	CP = 678	                Predict Failed in CONDITION
SS = 13	CP = 678	                Predict Failed in CONDITION
SS = 13	CP = 678	                Predict Failed in CONDITION
SS = 15	CP = 678	                Deduce simple_part
SS = 17	CP = 678	                  Deduce right_non_terminal_symbol
SS = 18	CP = 678	                    Deduce non_terminal_symbol
SS = 18	CP = 678	                      Match  id
SS = 18	CP = 678	                      Accept id
SS = 18	CP = 679	                    Accept non_terminal_symbol
SS = 17	CP = 679	                  Accept right_non_terminal_symbol
SS = 15	CP = 679	                Accept simple_part
SS = 13	CP = 679	              Accept part
SS = 14	CP = 679	              Match  ,
SS = 14	CP = 679	              Reject ,
SS = 13	CP = 679	              Predict Failed: part
SS = 12	CP = 679	            Accept term
SS = 12	CP = 679	            Match  |
SS = 12	CP = 679	            Reject |
SS = 11	CP = 679	          Accept declaration
SS = 10	CP = 679	          Match  ]
SS = 10	CP = 679	          Accept ]
SS = 10	CP = 680	        Accept alternative_part
SS = 8	CP = 680	      Accept part
SS = 8	CP = 680	      Match  ,
SS = 8	CP = 680	      Reject ,
SS = 7	CP = 680	      Predict Failed: part
SS = 6	CP = 680	    Accept term
SS = 5	CP = 680	    Match  |
SS = 5	CP = 680	    Reject |
SS = 4	CP = 680	  Accept declaration
SS = 4	CP = 680	  Deduce end_op
SS = 5	CP = 680	    Match  ;
SS = 5	CP = 680	    Accept ;
SS = 4	CP = 681	  Accept end_op
SS = 3	CP = 681	Accept statement
SS = 3	CP = 681	Deduce statement
SS = 4	CP = 681	  Deduce non_terminal_symbol
SS = 4	CP = 681	    Match  id
SS = 4	CP = 681	    Accept id
SS = 4	CP = 682	  Accept non_terminal_symbol
SS = 4	CP = 682	  Deduce assign_op
SS = 5	CP = 682	    Match  ::=
SS = 5	CP = 682	    Accept ::=
SS = 4	CP = 683	  Accept assign_op
SS = 4	CP = 683	  Deduce declaration
SS = 5	CP = 683	    Deduce term
SS = 6	CP = 683	      Deduce part
SS = 6	CP = 683	        Predict Failed in CONDITION
SS = 6	CP = 683	        Predict Failed in CONDITION
SS = 6	CP = 683	        Predict Failed in CONDITION
SS = 8	CP = 683	        Deduce simple_part
SS = 8	CP = 683	          Predict Failed in CONDITION
SS = 10	CP = 683	          Deduce terminal_symbol
SS = 11	CP = 683	            Match  slit
SS = 11	CP = 683	            Accept slit
SS = 10	CP = 684	          Accept terminal_symbol
SS = 8	CP = 684	        Accept simple_part
SS = 6	CP = 684	      Accept part
SS = 7	CP = 684	      Match  ,
SS = 7	CP = 684	      Reject ,
SS = 6	CP = 684	      Predict Failed: part
SS = 5	CP = 684	    Accept term
SS = 5	CP = 684	    Match  |
SS = 5	CP = 684	    Accept |
SS = 6	CP = 685	    Deduce term
SS = 7	CP = 685	      Deduce part
SS = 7	CP = 685	        Predict Failed in CONDITION
SS = 7	CP = 685	        Predict Failed in CONDITION
SS = 7	CP = 685	        Predict Failed in CONDITION
SS = 9	CP = 685	        Deduce simple_part
SS = 9	CP = 685	          Predict Failed in CONDITION
SS = 11	CP = 685	          Deduce terminal_symbol
SS = 12	CP = 685	            Match  slit
SS = 12	CP = 685	            Accept slit
SS = 11	CP = 686	          Accept terminal_symbol
SS = 9	CP = 686	        Accept simple_part
SS = 7	CP = 686	      Accept part
SS = 8	CP = 686	      Match  ,
SS = 8	CP = 686	      Reject ,
SS = 7	CP = 686	      Predict Failed: part
SS = 6	CP = 686	    Accept term
SS = 5	CP = 686	    Match  |
SS = 5	CP = 686	    Accept |
SS = 6	CP = 687	    Deduce term
SS = 7	CP = 687	      Deduce part
SS = 7	CP = 687	        Predict Failed in CONDITION
SS = 7	CP = 687	        Predict Failed in CONDITION
SS = 7	CP = 687	        Predict Failed in CONDITION
SS = 9	CP = 687	        Deduce simple_part
SS = 9	CP = 687	          Predict Failed in CONDITION
SS = 11	CP = 687	          Deduce terminal_symbol
SS = 12	CP = 687	            Match  slit
SS = 12	CP = 687	            Accept slit
SS = 11	CP = 688	          Accept terminal_symbol
SS = 9	CP = 688	        Accept simple_part
SS = 7	CP = 688	      Accept part
SS = 8	CP = 688	      Match  ,
SS = 8	CP = 688	      Reject ,
SS = 7	CP = 688	      Predict Failed: part
SS = 6	CP = 688	    Accept term
SS = 5	CP = 688	    Match  |
SS = 5	CP = 688	    Accept |
SS = 6	CP = 689	    Deduce term
SS = 7	CP = 689	      Deduce part
SS = 7	CP = 689	        Predict Failed in CONDITION
SS = 7	CP = 689	        Predict Failed in CONDITION
SS = 7	CP = 689	        Predict Failed in CONDITION
SS = 9	CP = 689	        Deduce simple_part
SS = 9	CP = 689	          Predict Failed in CONDITION
SS = 11	CP = 689	          Deduce terminal_symbol
SS = 12	CP = 689	            Match  slit
SS = 12	CP = 689	            Accept slit
SS = 11	CP = 690	          Accept terminal_symbol
SS = 9	CP = 690	        Accept simple_part
SS = 7	CP = 690	      Accept part
SS = 8	CP = 690	      Match  ,
SS = 8	CP = 690	      Reject ,
SS = 7	CP = 690	      Predict Failed: part
SS = 6	CP = 690	    Accept term
SS = 5	CP = 690	    Match  |
SS = 5	CP = 690	    Accept |
SS = 6	CP = 691	    Deduce term
SS = 7	CP = 691	      Deduce part
SS = 7	CP = 691	        Predict Failed in CONDITION
SS = 7	CP = 691	        Predict Failed in CONDITION
SS = 7	CP = 691	        Predict Failed in CONDITION
SS = 9	CP = 691	        Deduce simple_part
SS = 9	CP = 691	          Predict Failed in CONDITION
SS = 11	CP = 691	          Deduce terminal_symbol
SS = 12	CP = 691	            Match  slit
SS = 12	CP = 691	            Accept slit
SS = 11	CP = 692	          Accept terminal_symbol
SS = 9	CP = 692	        Accept simple_part
SS = 7	CP = 692	      Accept part
SS = 8	CP = 692	      Match  ,
SS = 8	CP = 692	      Reject ,
SS = 7	CP = 692	      Predict Failed: part
SS = 6	CP = 692	    Accept term
SS = 5	CP = 692	    Match  |
SS = 5	CP = 692	    Accept |
SS = 6	CP = 693	    Deduce term
SS = 7	CP = 693	      Deduce part
SS = 7	CP = 693	        Predict Failed in CONDITION
SS = 7	CP = 693	        Predict Failed in CONDITION
SS = 7	CP = 693	        Predict Failed in CONDITION
SS = 9	CP = 693	        Deduce simple_part
SS = 9	CP = 693	          Predict Failed in CONDITION
SS = 11	CP = 693	          Deduce terminal_symbol
SS = 12	CP = 693	            Match  slit
SS = 12	CP = 693	            Accept slit
SS = 11	CP = 694	          Accept terminal_symbol
SS = 9	CP = 694	        Accept simple_part
SS = 7	CP = 694	      Accept part
SS = 8	CP = 694	      Match  ,
SS = 8	CP = 694	      Reject ,
SS = 7	CP = 694	      Predict Failed: part
SS = 6	CP = 694	    Accept term
SS = 5	CP = 694	    Match  |
SS = 5	CP = 694	    Accept |
SS = 6	CP = 695	    Deduce term
SS = 7	CP = 695	      Deduce part
SS = 7	CP = 695	        Predict Failed in CONDITION
SS = 7	CP = 695	        Predict Failed in CONDITION
SS = 7	CP = 695	        Predict Failed in CONDITION
SS = 9	CP = 695	        Deduce simple_part
SS = 9	CP = 695	          Predict Failed in CONDITION
SS = 11	CP = 695	          Deduce terminal_symbol
SS = 12	CP = 695	            Match  slit
SS = 12	CP = 695	            Accept slit
SS = 11	CP = 696	          Accept terminal_symbol
SS = 9	CP = 696	        Accept simple_part
SS = 7	CP = 696	      Accept part
SS = 8	CP = 696	      Match  ,
SS = 8	CP = 696	      Reject ,
SS = 7	CP = 696	      Predict Failed: part
SS = 6	CP = 696	    Accept term
SS = 5	CP = 696	    Match  |
SS = 5	CP = 696	    Accept |
SS = 6	CP = 697	    Deduce term
SS = 7	CP = 697	      Deduce part
SS = 7	CP = 697	        Predict Failed in CONDITION
SS = 7	CP = 697	        Predict Failed in CONDITION
SS = 7	CP = 697	        Predict Failed in CONDITION
SS = 9	CP = 697	        Deduce simple_part
SS = 9	CP = 697	          Predict Failed in CONDITION
SS = 11	CP = 697	          Deduce terminal_symbol
SS = 12	CP = 697	            Match  slit
SS = 12	CP = 697	            Accept slit
SS = 11	CP = 698	          Accept terminal_symbol
SS = 9	CP = 698	        Accept simple_part
SS = 7	CP = 698	      Accept part
SS = 8	CP = 698	      Match  ,
SS = 8	CP = 698	      Reject ,
SS = 7	CP = 698	      Predict Failed: part
SS = 6	CP = 698	    Accept term
SS = 5	CP = 698	    Match  |
SS = 5	CP = 698	    Reject |
SS = 4	CP = 698	  Accept declaration
SS = 4	CP = 698	  Deduce end_op
SS = 5	CP = 698	    Match  ;
SS = 5	CP = 698	    Accept ;
SS = 4	CP = 699	  Accept end_op
SS = 3	CP = 699	Accept statement
SS = 3	CP = 699	Deduce statement
SS = 4	CP = 699	  Deduce non_terminal_symbol
SS = 4	CP = 699	    Match  id
SS = 4	CP = 699	    Accept id
SS = 4	CP = 700	  Accept non_terminal_symbol
SS = 4	CP = 700	  Deduce assign_op
SS = 5	CP = 700	    Match  ::=
SS = 5	CP = 700	    Accept ::=
SS = 4	CP = 701	  Accept assign_op
SS = 4	CP = 701	  Deduce declaration
SS = 5	CP = 701	    Deduce term
SS = 6	CP = 701	      Deduce part
SS = 6	CP = 701	        Predict Failed in CONDITION
SS = 8	CP = 701	        Deduce declaration_part
SS = 8	CP = 701	          Match  (
SS = 8	CP = 701	          Accept (
SS = 9	CP = 702	          Deduce declaration
SS = 10	CP = 702	            Deduce term
SS = 11	CP = 702	              Deduce part
SS = 11	CP = 702	                Predict Failed in CONDITION
SS = 11	CP = 702	                Predict Failed in CONDITION
SS = 11	CP = 702	                Predict Failed in CONDITION
SS = 13	CP = 702	                Deduce simple_part
SS = 13	CP = 702	                  Predict Failed in CONDITION
SS = 15	CP = 702	                  Deduce terminal_symbol
SS = 16	CP = 702	                    Match  slit
SS = 16	CP = 702	                    Accept slit
SS = 15	CP = 703	                  Accept terminal_symbol
SS = 13	CP = 703	                Accept simple_part
SS = 11	CP = 703	              Accept part
SS = 12	CP = 703	              Match  ,
SS = 12	CP = 703	              Reject ,
SS = 11	CP = 703	              Predict Failed: part
SS = 10	CP = 703	            Accept term
SS = 10	CP = 703	            Match  |
SS = 10	CP = 703	            Accept |
SS = 11	CP = 704	            Deduce term
SS = 12	CP = 704	              Deduce part
SS = 12	CP = 704	                Predict Failed in CONDITION
SS = 12	CP = 704	                Predict Failed in CONDITION
SS = 12	CP = 704	                Predict Failed in CONDITION
SS = 14	CP = 704	                Deduce simple_part
SS = 14	CP = 704	                  Predict Failed in CONDITION
SS = 16	CP = 704	                  Deduce terminal_symbol
SS = 17	CP = 704	                    Match  slit
SS = 17	CP = 704	                    Accept slit
SS = 16	CP = 705	                  Accept terminal_symbol
SS = 14	CP = 705	                Accept simple_part
SS = 12	CP = 705	              Accept part
SS = 13	CP = 705	              Match  ,
SS = 13	CP = 705	              Reject ,
SS = 12	CP = 705	              Predict Failed: part
SS = 11	CP = 705	            Accept term
SS = 10	CP = 705	            Match  |
SS = 10	CP = 705	            Accept |
SS = 11	CP = 706	            Deduce term
SS = 12	CP = 706	              Deduce part
SS = 12	CP = 706	                Predict Failed in CONDITION
SS = 12	CP = 706	                Predict Failed in CONDITION
SS = 12	CP = 706	                Predict Failed in CONDITION
SS = 14	CP = 706	                Deduce simple_part
SS = 14	CP = 706	                  Predict Failed in CONDITION
SS = 16	CP = 706	                  Deduce terminal_symbol
SS = 17	CP = 706	                    Match  slit
SS = 17	CP = 706	                    Accept slit
SS = 16	CP = 707	                  Accept terminal_symbol
SS = 14	CP = 707	                Accept simple_part
SS = 12	CP = 707	              Accept part
SS = 13	CP = 707	              Match  ,
SS = 13	CP = 707	              Reject ,
SS = 12	CP = 707	              Predict Failed: part
SS = 11	CP = 707	            Accept term
SS = 10	CP = 707	            Match  |
SS = 10	CP = 707	            Reject |
SS = 9	CP = 707	          Accept declaration
SS = 8	CP = 707	          Match  )
SS = 8	CP = 707	          Accept )
SS = 8	CP = 708	        Accept declaration_part
SS = 6	CP = 708	      Accept part
SS = 7	CP = 708	      Match  ,
SS = 7	CP = 708	      Reject ,
SS = 7	CP = 708	      Deduce part
SS = 7	CP = 708	        Predict Failed in CONDITION
SS = 7	CP = 708	        Predict Failed in CONDITION
SS = 9	CP = 708	        Deduce alternative_part
SS = 9	CP = 708	          Match  [
SS = 9	CP = 708	          Accept [
SS = 10	CP = 709	          Deduce declaration
SS = 11	CP = 709	            Deduce term
SS = 12	CP = 709	              Deduce part
SS = 12	CP = 709	                Predict Failed in CONDITION
SS = 12	CP = 709	                Predict Failed in CONDITION
SS = 12	CP = 709	                Predict Failed in CONDITION
SS = 14	CP = 709	                Deduce simple_part
SS = 16	CP = 709	                  Deduce right_non_terminal_symbol
SS = 17	CP = 709	                    Deduce non_terminal_symbol
SS = 17	CP = 709	                      Match  id
SS = 17	CP = 709	                      Accept id
SS = 17	CP = 710	                    Accept non_terminal_symbol
SS = 16	CP = 710	                  Accept right_non_terminal_symbol
SS = 14	CP = 710	                Accept simple_part
SS = 12	CP = 710	              Accept part
SS = 13	CP = 710	              Match  ,
SS = 13	CP = 710	              Reject ,
SS = 12	CP = 710	              Predict Failed: part
SS = 11	CP = 710	            Accept term
SS = 11	CP = 710	            Match  |
SS = 11	CP = 710	            Reject |
SS = 10	CP = 710	          Accept declaration
SS = 9	CP = 710	          Match  ]
SS = 9	CP = 710	          Accept ]
SS = 9	CP = 711	        Accept alternative_part
SS = 7	CP = 711	      Accept part
SS = 7	CP = 711	      Match  ,
SS = 7	CP = 711	      Reject ,
SS = 6	CP = 711	      Predict Failed: part
SS = 5	CP = 711	    Accept term
SS = 5	CP = 711	    Match  |
SS = 5	CP = 711	    Reject |
SS = 4	CP = 711	  Accept declaration
SS = 4	CP = 711	  Deduce end_op
SS = 5	CP = 711	    Match  ;
SS = 5	CP = 711	    Accept ;
SS = 4	CP = 712	  Accept end_op
SS = 3	CP = 712	Accept statement
SS = 3	CP = 712	Deduce statement
SS = 4	CP = 712	  Deduce non_terminal_symbol
SS = 4	CP = 712	    Match  id
SS = 4	CP = 712	    Accept id
SS = 4	CP = 713	  Accept non_terminal_symbol
SS = 4	CP = 713	  Deduce assign_op
SS = 5	CP = 713	    Match  ::=
SS = 5	CP = 713	    Accept ::=
SS = 4	CP = 714	  Accept assign_op
SS = 4	CP = 714	  Deduce declaration
SS = 5	CP = 714	    Deduce term
SS = 6	CP = 714	      Deduce part
SS = 6	CP = 714	        Predict Failed in CONDITION
SS = 6	CP = 714	        Predict Failed in CONDITION
SS = 6	CP = 714	        Predict Failed in CONDITION
SS = 8	CP = 714	        Deduce simple_part
SS = 10	CP = 714	          Deduce right_non_terminal_symbol
SS = 11	CP = 714	            Deduce non_terminal_symbol
SS = 11	CP = 714	              Match  id
SS = 11	CP = 714	              Accept id
SS = 11	CP = 715	            Accept non_terminal_symbol
SS = 10	CP = 715	          Accept right_non_terminal_symbol
SS = 8	CP = 715	        Accept simple_part
SS = 6	CP = 715	      Accept part
SS = 7	CP = 715	      Match  ,
SS = 7	CP = 715	      Reject ,
SS = 6	CP = 715	      Predict Failed: part
SS = 5	CP = 715	    Accept term
SS = 5	CP = 715	    Match  |
SS = 5	CP = 715	    Accept |
SS = 6	CP = 716	    Deduce term
SS = 7	CP = 716	      Deduce part
SS = 7	CP = 716	        Predict Failed in CONDITION
SS = 7	CP = 716	        Predict Failed in CONDITION
SS = 7	CP = 716	        Predict Failed in CONDITION
SS = 9	CP = 716	        Deduce simple_part
SS = 11	CP = 716	          Deduce right_non_terminal_symbol
SS = 12	CP = 716	            Deduce non_terminal_symbol
SS = 12	CP = 716	              Match  id
SS = 12	CP = 716	              Accept id
SS = 12	CP = 717	            Accept non_terminal_symbol
SS = 11	CP = 717	          Accept right_non_terminal_symbol
SS = 9	CP = 717	        Accept simple_part
SS = 7	CP = 717	      Accept part
SS = 8	CP = 717	      Match  ,
SS = 8	CP = 717	      Reject ,
SS = 7	CP = 717	      Predict Failed: part
SS = 6	CP = 717	    Accept term
SS = 5	CP = 717	    Match  |
SS = 5	CP = 717	    Reject |
SS = 4	CP = 717	  Accept declaration
SS = 4	CP = 717	  Deduce end_op
SS = 5	CP = 717	    Match  ;
SS = 5	CP = 717	    Accept ;
SS = 4	CP = 718	  Accept end_op
SS = 3	CP = 718	Accept statement
SS = 3	CP = 718	Deduce statement
SS = 4	CP = 718	  Deduce non_terminal_symbol
SS = 4	CP = 718	    Match  id
SS = 4	CP = 718	    Accept id
SS = 4	CP = 719	  Accept non_terminal_symbol
SS = 4	CP = 719	  Deduce assign_op
SS = 5	CP = 719	    Match  ::=
SS = 5	CP = 719	    Accept ::=
SS = 4	CP = 720	  Accept assign_op
SS = 4	CP = 720	  Deduce declaration
SS = 5	CP = 720	    Deduce term
SS = 6	CP = 720	      Deduce part
SS = 6	CP = 720	        Predict Failed in CONDITION
SS = 6	CP = 720	        Predict Failed in CONDITION
SS = 6	CP = 720	        Predict Failed in CONDITION
SS = 8	CP = 720	        Deduce simple_part
SS = 10	CP = 720	          Deduce right_non_terminal_symbol
SS = 11	CP = 720	            Deduce non_terminal_symbol
SS = 11	CP = 720	              Match  id
SS = 11	CP = 720	              Accept id
SS = 11	CP = 721	            Accept non_terminal_symbol
SS = 10	CP = 721	          Accept right_non_terminal_symbol
SS = 8	CP = 721	        Accept simple_part
SS = 6	CP = 721	      Accept part
SS = 7	CP = 721	      Match  ,
SS = 7	CP = 721	      Reject ,
SS = 7	CP = 721	      Deduce part
SS = 7	CP = 721	        Predict Failed in CONDITION
SS = 7	CP = 721	        Predict Failed in CONDITION
SS = 9	CP = 721	        Deduce alternative_part
SS = 9	CP = 721	          Match  [
SS = 9	CP = 721	          Accept [
SS = 10	CP = 722	          Deduce declaration
SS = 11	CP = 722	            Deduce term
SS = 12	CP = 722	              Deduce part
SS = 12	CP = 722	                Predict Failed in CONDITION
SS = 14	CP = 722	                Deduce declaration_part
SS = 14	CP = 722	                  Match  (
SS = 14	CP = 722	                  Accept (
SS = 15	CP = 723	                  Deduce declaration
SS = 16	CP = 723	                    Deduce term
SS = 17	CP = 723	                      Deduce part
SS = 17	CP = 723	                        Predict Failed in CONDITION
SS = 17	CP = 723	                        Predict Failed in CONDITION
SS = 17	CP = 723	                        Predict Failed in CONDITION
SS = 19	CP = 723	                        Deduce simple_part
SS = 19	CP = 723	                          Predict Failed in CONDITION
SS = 21	CP = 723	                          Deduce terminal_symbol
SS = 22	CP = 723	                            Match  slit
SS = 22	CP = 723	                            Accept slit
SS = 21	CP = 724	                          Accept terminal_symbol
SS = 19	CP = 724	                        Accept simple_part
SS = 17	CP = 724	                      Accept part
SS = 18	CP = 724	                      Match  ,
SS = 18	CP = 724	                      Reject ,
SS = 17	CP = 724	                      Predict Failed: part
SS = 16	CP = 724	                    Accept term
SS = 16	CP = 724	                    Match  |
SS = 16	CP = 724	                    Accept |
SS = 17	CP = 725	                    Deduce term
SS = 18	CP = 725	                      Deduce part
SS = 18	CP = 725	                        Predict Failed in CONDITION
SS = 18	CP = 725	                        Predict Failed in CONDITION
SS = 18	CP = 725	                        Predict Failed in CONDITION
SS = 20	CP = 725	                        Deduce simple_part
SS = 20	CP = 725	                          Predict Failed in CONDITION
SS = 22	CP = 725	                          Deduce terminal_symbol
SS = 23	CP = 725	                            Match  slit
SS = 23	CP = 725	                            Accept slit
SS = 22	CP = 726	                          Accept terminal_symbol
SS = 20	CP = 726	                        Accept simple_part
SS = 18	CP = 726	                      Accept part
SS = 19	CP = 726	                      Match  ,
SS = 19	CP = 726	                      Reject ,
SS = 18	CP = 726	                      Predict Failed: part
SS = 17	CP = 726	                    Accept term
SS = 16	CP = 726	                    Match  |
SS = 16	CP = 726	                    Reject |
SS = 15	CP = 726	                  Accept declaration
SS = 14	CP = 726	                  Match  )
SS = 14	CP = 726	                  Accept )
SS = 14	CP = 727	                Accept declaration_part
SS = 12	CP = 727	              Accept part
SS = 13	CP = 727	              Match  ,
SS = 13	CP = 727	              Reject ,
SS = 13	CP = 727	              Deduce part
SS = 13	CP = 727	                Predict Failed in CONDITION
SS = 13	CP = 727	                Predict Failed in CONDITION
SS = 13	CP = 727	                Predict Failed in CONDITION
SS = 15	CP = 727	                Deduce simple_part
SS = 17	CP = 727	                  Deduce right_non_terminal_symbol
SS = 18	CP = 727	                    Deduce non_terminal_symbol
SS = 18	CP = 727	                      Match  id
SS = 18	CP = 727	                      Accept id
SS = 18	CP = 728	                    Accept non_terminal_symbol
SS = 17	CP = 728	                  Accept right_non_terminal_symbol
SS = 15	CP = 728	                Accept simple_part
SS = 13	CP = 728	              Accept part
SS = 13	CP = 728	              Match  ,
SS = 13	CP = 728	              Reject ,
SS = 12	CP = 728	              Predict Failed: part
SS = 11	CP = 728	            Accept term
SS = 11	CP = 728	            Match  |
SS = 11	CP = 728	            Reject |
SS = 10	CP = 728	          Accept declaration
SS = 9	CP = 728	          Match  ]
SS = 9	CP = 728	          Accept ]
SS = 9	CP = 729	        Accept alternative_part
SS = 7	CP = 729	      Accept part
SS = 7	CP = 729	      Match  ,
SS = 7	CP = 729	      Reject ,
SS = 6	CP = 729	      Predict Failed: part
SS = 5	CP = 729	    Accept term
SS = 5	CP = 729	    Match  |
SS = 5	CP = 729	    Reject |
SS = 4	CP = 729	  Accept declaration
SS = 4	CP = 729	  Deduce end_op
SS = 5	CP = 729	    Match  ;
SS = 5	CP = 729	    Accept ;
SS = 4	CP = 730	  Accept end_op
SS = 3	CP = 730	Accept statement
SS = 3	CP = 730	Deduce statement
SS = 4	CP = 730	  Deduce non_terminal_symbol
SS = 4	CP = 730	    Match  id
SS = 4	CP = 730	    Accept id
SS = 4	CP = 731	  Accept non_terminal_symbol
SS = 4	CP = 731	  Deduce assign_op
SS = 5	CP = 731	    Match  ::=
SS = 5	CP = 731	    Accept ::=
SS = 4	CP = 732	  Accept assign_op
SS = 4	CP = 732	  Deduce declaration
SS = 5	CP = 732	    Deduce term
SS = 6	CP = 732	      Deduce part
SS = 6	CP = 732	        Predict Failed in CONDITION
SS = 6	CP = 732	        Predict Failed in CONDITION
SS = 6	CP = 732	        Predict Failed in CONDITION
SS = 8	CP = 732	        Deduce simple_part
SS = 10	CP = 732	          Deduce right_non_terminal_symbol
SS = 11	CP = 732	            Deduce non_terminal_symbol
SS = 11	CP = 732	              Match  id
SS = 11	CP = 732	              Accept id
SS = 11	CP = 733	            Accept non_terminal_symbol
SS = 10	CP = 733	          Accept right_non_terminal_symbol
SS = 8	CP = 733	        Accept simple_part
SS = 6	CP = 733	      Accept part
SS = 7	CP = 733	      Match  ,
SS = 7	CP = 733	      Reject ,
SS = 7	CP = 733	      Deduce part
SS = 7	CP = 733	        Predict Failed in CONDITION
SS = 7	CP = 733	        Predict Failed in CONDITION
SS = 9	CP = 733	        Deduce alternative_part
SS = 9	CP = 733	          Match  [
SS = 9	CP = 733	          Accept [
SS = 10	CP = 734	          Deduce declaration
SS = 11	CP = 734	            Deduce term
SS = 12	CP = 734	              Deduce part
SS = 12	CP = 734	                Predict Failed in CONDITION
SS = 12	CP = 734	                Predict Failed in CONDITION
SS = 12	CP = 734	                Predict Failed in CONDITION
SS = 14	CP = 734	                Deduce simple_part
SS = 16	CP = 734	                  Deduce right_non_terminal_symbol
SS = 17	CP = 734	                    Deduce non_terminal_symbol
SS = 17	CP = 734	                      Match  id
SS = 17	CP = 734	                      Accept id
SS = 17	CP = 735	                    Accept non_terminal_symbol
SS = 16	CP = 735	                  Accept right_non_terminal_symbol
SS = 14	CP = 735	                Accept simple_part
SS = 12	CP = 735	              Accept part
SS = 13	CP = 735	              Match  ,
SS = 13	CP = 735	              Reject ,
SS = 12	CP = 735	              Predict Failed: part
SS = 11	CP = 735	            Accept term
SS = 11	CP = 735	            Match  |
SS = 11	CP = 735	            Reject |
SS = 10	CP = 735	          Accept declaration
SS = 9	CP = 735	          Match  ]
SS = 9	CP = 735	          Accept ]
SS = 9	CP = 736	        Accept alternative_part
SS = 7	CP = 736	      Accept part
SS = 7	CP = 736	      Match  ,
SS = 7	CP = 736	      Reject ,
SS = 6	CP = 736	      Predict Failed: part
SS = 5	CP = 736	    Accept term
SS = 5	CP = 736	    Match  |
SS = 5	CP = 736	    Accept |
SS = 6	CP = 737	    Deduce term
SS = 7	CP = 737	      Deduce part
SS = 7	CP = 737	        Predict Failed in CONDITION
SS = 7	CP = 737	        Predict Failed in CONDITION
SS = 7	CP = 737	        Predict Failed in CONDITION
SS = 9	CP = 737	        Deduce simple_part
SS = 9	CP = 737	          Predict Failed in CONDITION
SS = 11	CP = 737	          Deduce terminal_symbol
SS = 11	CP = 737	            Predict Failed in CONDITION
SS = 11	CP = 737	            Predict Failed in CONDITION
SS = 12	CP = 737	            Match  token
SS = 12	CP = 737	            Accept token
SS = 11	CP = 738	          Accept terminal_symbol
SS = 9	CP = 738	        Accept simple_part
SS = 7	CP = 738	      Accept part
SS = 8	CP = 738	      Match  ,
SS = 8	CP = 738	      Reject ,
SS = 8	CP = 738	      Deduce part
SS = 8	CP = 738	        Predict Failed in CONDITION
SS = 8	CP = 738	        Predict Failed in CONDITION
SS = 10	CP = 738	        Deduce alternative_part
SS = 10	CP = 738	          Match  [
SS = 10	CP = 738	          Accept [
SS = 11	CP = 739	          Deduce declaration
SS = 12	CP = 739	            Deduce term
SS = 13	CP = 739	              Deduce part
SS = 13	CP = 739	                Predict Failed in CONDITION
SS = 13	CP = 739	                Predict Failed in CONDITION
SS = 13	CP = 739	                Predict Failed in CONDITION
SS = 15	CP = 739	                Deduce simple_part
SS = 17	CP = 739	                  Deduce right_non_terminal_symbol
SS = 18	CP = 739	                    Deduce non_terminal_symbol
SS = 18	CP = 739	                      Match  id
SS = 18	CP = 739	                      Accept id
SS = 18	CP = 740	                    Accept non_terminal_symbol
SS = 17	CP = 740	                  Accept right_non_terminal_symbol
SS = 15	CP = 740	                Accept simple_part
SS = 13	CP = 740	              Accept part
SS = 14	CP = 740	              Match  ,
SS = 14	CP = 740	              Reject ,
SS = 13	CP = 740	              Predict Failed: part
SS = 12	CP = 740	            Accept term
SS = 12	CP = 740	            Match  |
SS = 12	CP = 740	            Reject |
SS = 11	CP = 740	          Accept declaration
SS = 10	CP = 740	          Match  ]
SS = 10	CP = 740	          Accept ]
SS = 10	CP = 741	        Accept alternative_part
SS = 8	CP = 741	      Accept part
SS = 8	CP = 741	      Match  ,
SS = 8	CP = 741	      Reject ,
SS = 7	CP = 741	      Predict Failed: part
SS = 6	CP = 741	    Accept term
SS = 5	CP = 741	    Match  |
SS = 5	CP = 741	    Accept |
SS = 6	CP = 742	    Deduce term
SS = 7	CP = 742	      Deduce part
SS = 7	CP = 742	        Predict Failed in CONDITION
SS = 7	CP = 742	        Predict Failed in CONDITION
SS = 7	CP = 742	        Predict Failed in CONDITION
SS = 9	CP = 742	        Deduce simple_part
SS = 9	CP = 742	          Predict Failed in CONDITION
SS = 11	CP = 742	          Deduce terminal_symbol
SS = 12	CP = 742	            Match  slit
SS = 12	CP = 742	            Accept slit
SS = 11	CP = 743	          Accept terminal_symbol
SS = 9	CP = 743	        Accept simple_part
SS = 7	CP = 743	      Accept part
SS = 8	CP = 743	      Match  ,
SS = 8	CP = 743	      Reject ,
SS = 7	CP = 743	      Predict Failed: part
SS = 6	CP = 743	    Accept term
SS = 5	CP = 743	    Match  |
SS = 5	CP = 743	    Accept |
SS = 6	CP = 744	    Deduce term
SS = 7	CP = 744	      Deduce part
SS = 7	CP = 744	        Predict Failed in CONDITION
SS = 7	CP = 744	        Predict Failed in CONDITION
SS = 7	CP = 744	        Predict Failed in CONDITION
SS = 9	CP = 744	        Deduce simple_part
SS = 9	CP = 744	          Predict Failed in CONDITION
SS = 11	CP = 744	          Deduce terminal_symbol
SS = 12	CP = 744	            Match  slit
SS = 12	CP = 744	            Accept slit
SS = 11	CP = 745	          Accept terminal_symbol
SS = 9	CP = 745	        Accept simple_part
SS = 7	CP = 745	      Accept part
SS = 8	CP = 745	      Match  ,
SS = 8	CP = 745	      Reject ,
SS = 7	CP = 745	      Predict Failed: part
SS = 6	CP = 745	    Accept term
SS = 5	CP = 745	    Match  |
SS = 5	CP = 745	    Accept |
SS = 6	CP = 746	    Deduce term
SS = 7	CP = 746	      Deduce part
SS = 7	CP = 746	        Predict Failed in CONDITION
SS = 7	CP = 746	        Predict Failed in CONDITION
SS = 7	CP = 746	        Predict Failed in CONDITION
SS = 9	CP = 746	        Deduce simple_part
SS = 11	CP = 746	          Deduce right_non_terminal_symbol
SS = 12	CP = 746	            Deduce non_terminal_symbol
SS = 12	CP = 746	              Match  id
SS = 12	CP = 746	              Accept id
SS = 12	CP = 747	            Accept non_terminal_symbol
SS = 11	CP = 747	          Accept right_non_terminal_symbol
SS = 9	CP = 747	        Accept simple_part
SS = 7	CP = 747	      Accept part
SS = 8	CP = 747	      Match  ,
SS = 8	CP = 747	      Reject ,
SS = 7	CP = 747	      Predict Failed: part
SS = 6	CP = 747	    Accept term
SS = 5	CP = 747	    Match  |
SS = 5	CP = 747	    Accept |
SS = 6	CP = 748	    Deduce term
SS = 7	CP = 748	      Deduce part
SS = 7	CP = 748	        Predict Failed in CONDITION
SS = 7	CP = 748	        Predict Failed in CONDITION
SS = 7	CP = 748	        Predict Failed in CONDITION
SS = 9	CP = 748	        Deduce simple_part
SS = 9	CP = 748	          Predict Failed in CONDITION
SS = 11	CP = 748	          Deduce terminal_symbol
SS = 11	CP = 748	            Predict Failed in CONDITION
SS = 11	CP = 748	            Predict Failed in CONDITION
SS = 12	CP = 748	            Match  token
SS = 12	CP = 748	            Accept token
SS = 11	CP = 749	          Accept terminal_symbol
SS = 9	CP = 749	        Accept simple_part
SS = 7	CP = 749	      Accept part
SS = 8	CP = 749	      Match  ,
SS = 8	CP = 749	      Reject ,
SS = 7	CP = 749	      Predict Failed: part
SS = 6	CP = 749	    Accept term
SS = 5	CP = 749	    Match  |
SS = 5	CP = 749	    Reject |
SS = 4	CP = 749	  Accept declaration
SS = 4	CP = 749	  Deduce end_op
SS = 5	CP = 749	    Match  ;
SS = 5	CP = 749	    Accept ;
SS = 4	CP = 750	  Accept end_op
SS = 3	CP = 750	Accept statement
SS = 3	CP = 750	Deduce statement
SS = 4	CP = 750	  Deduce non_terminal_symbol
SS = 4	CP = 750	    Match  id
SS = 4	CP = 750	    Accept id
SS = 4	CP = 751	  Accept non_terminal_symbol
SS = 4	CP = 751	  Deduce assign_op
SS = 5	CP = 751	    Match  ::=
SS = 5	CP = 751	    Accept ::=
SS = 4	CP = 752	  Accept assign_op
SS = 4	CP = 752	  Deduce declaration
SS = 5	CP = 752	    Deduce term
SS = 6	CP = 752	      Deduce part
SS = 6	CP = 752	        Predict Failed in CONDITION
SS = 8	CP = 752	        Deduce declaration_part
SS = 8	CP = 752	          Match  (
SS = 8	CP = 752	          Accept (
SS = 9	CP = 753	          Deduce declaration
SS = 10	CP = 753	            Deduce term
SS = 11	CP = 753	              Deduce part
SS = 11	CP = 753	                Predict Failed in CONDITION
SS = 11	CP = 753	                Predict Failed in CONDITION
SS = 11	CP = 753	                Predict Failed in CONDITION
SS = 13	CP = 753	                Deduce simple_part
SS = 13	CP = 753	                  Predict Failed in CONDITION
SS = 15	CP = 753	                  Deduce terminal_symbol
SS = 15	CP = 753	                    Predict Failed in CONDITION
SS = 15	CP = 753	                    Predict Failed in CONDITION
SS = 16	CP = 753	                    Match  token
SS = 16	CP = 753	                    Accept token
SS = 15	CP = 754	                  Accept terminal_symbol
SS = 13	CP = 754	                Accept simple_part
SS = 11	CP = 754	              Accept part
SS = 12	CP = 754	              Match  ,
SS = 12	CP = 754	              Reject ,
SS = 11	CP = 754	              Predict Failed: part
SS = 10	CP = 754	            Accept term
SS = 10	CP = 754	            Match  |
SS = 10	CP = 754	            Accept |
SS = 11	CP = 755	            Deduce term
SS = 12	CP = 755	              Deduce part
SS = 12	CP = 755	                Predict Failed in CONDITION
SS = 12	CP = 755	                Predict Failed in CONDITION
SS = 12	CP = 755	                Predict Failed in CONDITION
SS = 14	CP = 755	                Deduce simple_part
SS = 14	CP = 755	                  Predict Failed in CONDITION
SS = 16	CP = 755	                  Deduce terminal_symbol
SS = 17	CP = 755	                    Match  slit
SS = 17	CP = 755	                    Accept slit
SS = 16	CP = 756	                  Accept terminal_symbol
SS = 14	CP = 756	                Accept simple_part
SS = 12	CP = 756	              Accept part
SS = 13	CP = 756	              Match  ,
SS = 13	CP = 756	              Reject ,
SS = 13	CP = 756	              Deduce part
SS = 13	CP = 756	                Predict Failed in CONDITION
SS = 13	CP = 756	                Predict Failed in CONDITION
SS = 13	CP = 756	                Predict Failed in CONDITION
SS = 15	CP = 756	                Deduce simple_part
SS = 17	CP = 756	                  Deduce right_non_terminal_symbol
SS = 18	CP = 756	                    Deduce non_terminal_symbol
SS = 18	CP = 756	                      Match  id
SS = 18	CP = 756	                      Accept id
SS = 18	CP = 757	                    Accept non_terminal_symbol
SS = 17	CP = 757	                  Accept right_non_terminal_symbol
SS = 15	CP = 757	                Accept simple_part
SS = 13	CP = 757	              Accept part
SS = 13	CP = 757	              Match  ,
SS = 13	CP = 757	              Reject ,
SS = 13	CP = 757	              Deduce part
SS = 13	CP = 757	                Predict Failed in CONDITION
SS = 13	CP = 757	                Predict Failed in CONDITION
SS = 13	CP = 757	                Predict Failed in CONDITION
SS = 15	CP = 757	                Deduce simple_part
SS = 15	CP = 757	                  Predict Failed in CONDITION
SS = 17	CP = 757	                  Deduce terminal_symbol
SS = 18	CP = 757	                    Match  slit
SS = 18	CP = 757	                    Accept slit
SS = 17	CP = 758	                  Accept terminal_symbol
SS = 15	CP = 758	                Accept simple_part
SS = 13	CP = 758	              Accept part
SS = 13	CP = 758	              Match  ,
SS = 13	CP = 758	              Reject ,
SS = 12	CP = 758	              Predict Failed: part
SS = 11	CP = 758	            Accept term
SS = 10	CP = 758	            Match  |
SS = 10	CP = 758	            Reject |
SS = 9	CP = 758	          Accept declaration
SS = 8	CP = 758	          Match  )
SS = 8	CP = 758	          Accept )
SS = 8	CP = 759	        Accept declaration_part
SS = 6	CP = 759	      Accept part
SS = 7	CP = 759	      Match  ,
SS = 7	CP = 759	      Reject ,
SS = 7	CP = 759	      Deduce part
SS = 9	CP = 759	        Deduce repeat_part
SS = 9	CP = 759	          Match  {
SS = 9	CP = 759	          Accept {
SS = 10	CP = 760	          Deduce declaration
SS = 11	CP = 760	            Deduce term
SS = 12	CP = 760	              Deduce part
SS = 12	CP = 760	                Predict Failed in CONDITION
SS = 12	CP = 760	                Predict Failed in CONDITION
SS = 12	CP = 760	                Predict Failed in CONDITION
SS = 14	CP = 760	                Deduce simple_part
SS = 16	CP = 760	                  Deduce right_non_terminal_symbol
SS = 17	CP = 760	                    Deduce non_terminal_symbol
SS = 17	CP = 760	                      Match  id
SS = 17	CP = 760	                      Accept id
SS = 17	CP = 761	                    Accept non_terminal_symbol
SS = 16	CP = 761	                  Accept right_non_terminal_symbol
SS = 14	CP = 761	                Accept simple_part
SS = 12	CP = 761	              Accept part
SS = 13	CP = 761	              Match  ,
SS = 13	CP = 761	              Reject ,
SS = 12	CP = 761	              Predict Failed: part
SS = 11	CP = 761	            Accept term
SS = 11	CP = 761	            Match  |
SS = 11	CP = 761	            Accept |
SS = 12	CP = 762	            Deduce term
SS = 13	CP = 762	              Deduce part
SS = 13	CP = 762	                Predict Failed in CONDITION
SS = 13	CP = 762	                Predict Failed in CONDITION
SS = 13	CP = 762	                Predict Failed in CONDITION
SS = 15	CP = 762	                Deduce simple_part
SS = 17	CP = 762	                  Deduce right_non_terminal_symbol
SS = 18	CP = 762	                    Deduce non_terminal_symbol
SS = 18	CP = 762	                      Match  id
SS = 18	CP = 762	                      Accept id
SS = 18	CP = 763	                    Accept non_terminal_symbol
SS = 17	CP = 763	                  Accept right_non_terminal_symbol
SS = 15	CP = 763	                Accept simple_part
SS = 13	CP = 763	              Accept part
SS = 14	CP = 763	              Match  ,
SS = 14	CP = 763	              Reject ,
SS = 13	CP = 763	              Predict Failed: part
SS = 12	CP = 763	            Accept term
SS = 11	CP = 763	            Match  |
SS = 11	CP = 763	            Reject |
SS = 10	CP = 763	          Accept declaration
SS = 9	CP = 763	          Match  }
SS = 9	CP = 763	          Accept }
SS = 9	CP = 764	        Accept repeat_part
SS = 7	CP = 764	      Accept part
SS = 7	CP = 764	      Match  ,
SS = 7	CP = 764	      Reject ,
SS = 6	CP = 764	      Predict Failed: part
SS = 5	CP = 764	    Accept term
SS = 5	CP = 764	    Match  |
SS = 5	CP = 764	    Reject |
SS = 4	CP = 764	  Accept declaration
SS = 4	CP = 764	  Deduce end_op
SS = 5	CP = 764	    Match  ;
SS = 5	CP = 764	    Accept ;
SS = 4	CP = 765	  Accept end_op
SS = 3	CP = 765	Accept statement
SS = 3	CP = 765	Deduce statement
SS = 4	CP = 765	  Deduce non_terminal_symbol
SS = 4	CP = 765	    Match  id
SS = 4	CP = 765	    Accept id
SS = 4	CP = 766	  Accept non_terminal_symbol
SS = 4	CP = 766	  Deduce assign_op
SS = 5	CP = 766	    Match  ::=
SS = 5	CP = 766	    Accept ::=
SS = 4	CP = 767	  Accept assign_op
SS = 4	CP = 767	  Deduce declaration
SS = 5	CP = 767	    Deduce term
SS = 6	CP = 767	      Deduce part
SS = 6	CP = 767	        Predict Failed in CONDITION
SS = 6	CP = 767	        Predict Failed in CONDITION
SS = 6	CP = 767	        Predict Failed in CONDITION
SS = 8	CP = 767	        Deduce simple_part
SS = 8	CP = 767	          Predict Failed in CONDITION
SS = 10	CP = 767	          Deduce terminal_symbol
SS = 10	CP = 767	            Predict Failed in CONDITION
SS = 10	CP = 767	            Predict Failed in CONDITION
SS = 11	CP = 767	            Match  token
SS = 11	CP = 767	            Accept token
SS = 10	CP = 768	          Accept terminal_symbol
SS = 8	CP = 768	        Accept simple_part
SS = 6	CP = 768	      Accept part
SS = 7	CP = 768	      Match  ,
SS = 7	CP = 768	      Reject ,
SS = 6	CP = 768	      Predict Failed: part
SS = 5	CP = 768	    Accept term
SS = 5	CP = 768	    Match  |
SS = 5	CP = 768	    Accept |
SS = 6	CP = 769	    Deduce term
SS = 7	CP = 769	      Deduce part
SS = 7	CP = 769	        Predict Failed in CONDITION
SS = 7	CP = 769	        Predict Failed in CONDITION
SS = 7	CP = 769	        Predict Failed in CONDITION
SS = 9	CP = 769	        Deduce simple_part
SS = 9	CP = 769	          Predict Failed in CONDITION
SS = 11	CP = 769	          Deduce terminal_symbol
SS = 12	CP = 769	            Match  slit
SS = 12	CP = 769	            Accept slit
SS = 11	CP = 770	          Accept terminal_symbol
SS = 9	CP = 770	        Accept simple_part
SS = 7	CP = 770	      Accept part
SS = 8	CP = 770	      Match  ,
SS = 8	CP = 770	      Reject ,
SS = 7	CP = 770	      Predict Failed: part
SS = 6	CP = 770	    Accept term
SS = 5	CP = 770	    Match  |
SS = 5	CP = 770	    Accept |
SS = 6	CP = 771	    Deduce term
SS = 7	CP = 771	      Deduce part
SS = 7	CP = 771	        Predict Failed in CONDITION
SS = 7	CP = 771	        Predict Failed in CONDITION
SS = 7	CP = 771	        Predict Failed in CONDITION
SS = 9	CP = 771	        Deduce simple_part
SS = 9	CP = 771	          Predict Failed in CONDITION
SS = 11	CP = 771	          Deduce terminal_symbol
SS = 12	CP = 771	            Match  slit
SS = 12	CP = 771	            Accept slit
SS = 11	CP = 772	          Accept terminal_symbol
SS = 9	CP = 772	        Accept simple_part
SS = 7	CP = 772	      Accept part
SS = 8	CP = 772	      Match  ,
SS = 8	CP = 772	      Reject ,
SS = 7	CP = 772	      Predict Failed: part
SS = 6	CP = 772	    Accept term
SS = 5	CP = 772	    Match  |
SS = 5	CP = 772	    Accept |
SS = 6	CP = 773	    Deduce term
SS = 7	CP = 773	      Deduce part
SS = 7	CP = 773	        Predict Failed in CONDITION
SS = 7	CP = 773	        Predict Failed in CONDITION
SS = 7	CP = 773	        Predict Failed in CONDITION
SS = 9	CP = 773	        Deduce simple_part
SS = 9	CP = 773	          Predict Failed in CONDITION
SS = 11	CP = 773	          Deduce terminal_symbol
SS = 12	CP = 773	            Match  slit
SS = 12	CP = 773	            Accept slit
SS = 11	CP = 774	          Accept terminal_symbol
SS = 9	CP = 774	        Accept simple_part
SS = 7	CP = 774	      Accept part
SS = 8	CP = 774	      Match  ,
SS = 8	CP = 774	      Reject ,
SS = 7	CP = 774	      Predict Failed: part
SS = 6	CP = 774	    Accept term
SS = 5	CP = 774	    Match  |
SS = 5	CP = 774	    Reject |
SS = 4	CP = 774	  Accept declaration
SS = 4	CP = 774	  Deduce end_op
SS = 5	CP = 774	    Match  ;
SS = 5	CP = 774	    Accept ;
SS = 4	CP = 775	  Accept end_op
SS = 3	CP = 775	Accept statement
SS = 3	CP = 775	Deduce statement
SS = 4	CP = 775	  Deduce non_terminal_symbol
SS = 4	CP = 775	    Match  id
SS = 4	CP = 775	    Accept id
SS = 4	CP = 776	  Accept non_terminal_symbol
SS = 4	CP = 776	  Deduce assign_op
SS = 5	CP = 776	    Match  ::=
SS = 5	CP = 776	    Accept ::=
SS = 4	CP = 777	  Accept assign_op
SS = 4	CP = 777	  Deduce declaration
SS = 5	CP = 777	    Deduce term
SS = 6	CP = 777	      Deduce part
SS = 6	CP = 777	        Predict Failed in CONDITION
SS = 6	CP = 777	        Predict Failed in CONDITION
SS = 6	CP = 777	        Predict Failed in CONDITION
SS = 8	CP = 777	        Deduce simple_part
SS = 8	CP = 777	          Predict Failed in CONDITION
SS = 10	CP = 777	          Deduce terminal_symbol
SS = 11	CP = 777	            Match  slit
SS = 11	CP = 777	            Accept slit
SS = 10	CP = 778	          Accept terminal_symbol
SS = 8	CP = 778	        Accept simple_part
SS = 6	CP = 778	      Accept part
SS = 7	CP = 778	      Match  ,
SS = 7	CP = 778	      Reject ,
SS = 7	CP = 778	      Deduce part
SS = 7	CP = 778	        Predict Failed in CONDITION
SS = 7	CP = 778	        Predict Failed in CONDITION
SS = 9	CP = 778	        Deduce alternative_part
SS = 9	CP = 778	          Match  [
SS = 9	CP = 778	          Accept [
SS = 10	CP = 779	          Deduce declaration
SS = 11	CP = 779	            Deduce term
SS = 12	CP = 779	              Deduce part
SS = 12	CP = 779	                Predict Failed in CONDITION
SS = 12	CP = 779	                Predict Failed in CONDITION
SS = 12	CP = 779	                Predict Failed in CONDITION
SS = 14	CP = 779	                Deduce simple_part
SS = 16	CP = 779	                  Deduce right_non_terminal_symbol
SS = 17	CP = 779	                    Deduce non_terminal_symbol
SS = 17	CP = 779	                      Match  id
SS = 17	CP = 779	                      Accept id
SS = 17	CP = 780	                    Accept non_terminal_symbol
SS = 16	CP = 780	                  Accept right_non_terminal_symbol
SS = 14	CP = 780	                Accept simple_part
SS = 12	CP = 780	              Accept part
SS = 13	CP = 780	              Match  ,
SS = 13	CP = 780	              Reject ,
SS = 12	CP = 780	              Predict Failed: part
SS = 11	CP = 780	            Accept term
SS = 11	CP = 780	            Match  |
SS = 11	CP = 780	            Reject |
SS = 10	CP = 780	          Accept declaration
SS = 9	CP = 780	          Match  ]
SS = 9	CP = 780	          Accept ]
SS = 9	CP = 781	        Accept alternative_part
SS = 7	CP = 781	      Accept part
SS = 7	CP = 781	      Match  ,
SS = 7	CP = 781	      Reject ,
SS = 7	CP = 781	      Deduce part
SS = 7	CP = 781	        Predict Failed in CONDITION
SS = 7	CP = 781	        Predict Failed in CONDITION
SS = 7	CP = 781	        Predict Failed in CONDITION
SS = 9	CP = 781	        Deduce simple_part
SS = 9	CP = 781	          Predict Failed in CONDITION
SS = 11	CP = 781	          Deduce terminal_symbol
SS = 12	CP = 781	            Match  slit
SS = 12	CP = 781	            Accept slit
SS = 11	CP = 782	          Accept terminal_symbol
SS = 9	CP = 782	        Accept simple_part
SS = 7	CP = 782	      Accept part
SS = 7	CP = 782	      Match  ,
SS = 7	CP = 782	      Reject ,
SS = 6	CP = 782	      Predict Failed: part
SS = 5	CP = 782	    Accept term
SS = 5	CP = 782	    Match  |
SS = 5	CP = 782	    Reject |
SS = 4	CP = 782	  Accept declaration
SS = 4	CP = 782	  Deduce end_op
SS = 5	CP = 782	    Match  ;
SS = 5	CP = 782	    Accept ;
SS = 4	CP = 783	  Accept end_op
SS = 3	CP = 783	Accept statement
SS = 3	CP = 783	Deduce statement
SS = 4	CP = 783	  Deduce non_terminal_symbol
SS = 4	CP = 783	    Match  id
SS = 4	CP = 783	    Accept id
SS = 4	CP = 784	  Accept non_terminal_symbol
SS = 4	CP = 784	  Deduce assign_op
SS = 5	CP = 784	    Match  ::=
SS = 5	CP = 784	    Accept ::=
SS = 4	CP = 785	  Accept assign_op
SS = 4	CP = 785	  Deduce declaration
SS = 5	CP = 785	    Deduce term
SS = 6	CP = 785	      Deduce part
SS = 6	CP = 785	        Predict Failed in CONDITION
SS = 6	CP = 785	        Predict Failed in CONDITION
SS = 6	CP = 785	        Predict Failed in CONDITION
SS = 8	CP = 785	        Deduce simple_part
SS = 8	CP = 785	          Predict Failed in CONDITION
SS = 10	CP = 785	          Deduce terminal_symbol
SS = 11	CP = 785	            Match  slit
SS = 11	CP = 785	            Accept slit
SS = 10	CP = 786	          Accept terminal_symbol
SS = 8	CP = 786	        Accept simple_part
SS = 6	CP = 786	      Accept part
SS = 7	CP = 786	      Match  ,
SS = 7	CP = 786	      Reject ,
SS = 7	CP = 786	      Deduce part
SS = 7	CP = 786	        Predict Failed in CONDITION
SS = 7	CP = 786	        Predict Failed in CONDITION
SS = 9	CP = 786	        Deduce alternative_part
SS = 9	CP = 786	          Match  [
SS = 9	CP = 786	          Accept [
SS = 10	CP = 787	          Deduce declaration
SS = 11	CP = 787	            Deduce term
SS = 12	CP = 787	              Deduce part
SS = 12	CP = 787	                Predict Failed in CONDITION
SS = 12	CP = 787	                Predict Failed in CONDITION
SS = 12	CP = 787	                Predict Failed in CONDITION
SS = 14	CP = 787	                Deduce simple_part
SS = 16	CP = 787	                  Deduce right_non_terminal_symbol
SS = 17	CP = 787	                    Deduce non_terminal_symbol
SS = 17	CP = 787	                      Match  id
SS = 17	CP = 787	                      Accept id
SS = 17	CP = 788	                    Accept non_terminal_symbol
SS = 16	CP = 788	                  Accept right_non_terminal_symbol
SS = 14	CP = 788	                Accept simple_part
SS = 12	CP = 788	              Accept part
SS = 13	CP = 788	              Match  ,
SS = 13	CP = 788	              Reject ,
SS = 12	CP = 788	              Predict Failed: part
SS = 11	CP = 788	            Accept term
SS = 11	CP = 788	            Match  |
SS = 11	CP = 788	            Reject |
SS = 10	CP = 788	          Accept declaration
SS = 9	CP = 788	          Match  ]
SS = 9	CP = 788	          Accept ]
SS = 9	CP = 789	        Accept alternative_part
SS = 7	CP = 789	      Accept part
SS = 7	CP = 789	      Match  ,
SS = 7	CP = 789	      Reject ,
SS = 7	CP = 789	      Deduce part
SS = 7	CP = 789	        Predict Failed in CONDITION
SS = 7	CP = 789	        Predict Failed in CONDITION
SS = 7	CP = 789	        Predict Failed in CONDITION
SS = 9	CP = 789	        Deduce simple_part
SS = 9	CP = 789	          Predict Failed in CONDITION
SS = 11	CP = 789	          Deduce terminal_symbol
SS = 12	CP = 789	            Match  slit
SS = 12	CP = 789	            Accept slit
SS = 11	CP = 790	          Accept terminal_symbol
SS = 9	CP = 790	        Accept simple_part
SS = 7	CP = 790	      Accept part
SS = 7	CP = 790	      Match  ,
SS = 7	CP = 790	      Reject ,
SS = 6	CP = 790	      Predict Failed: part
SS = 5	CP = 790	    Accept term
SS = 5	CP = 790	    Match  |
SS = 5	CP = 790	    Reject |
SS = 4	CP = 790	  Accept declaration
SS = 4	CP = 790	  Deduce end_op
SS = 5	CP = 790	    Match  ;
SS = 5	CP = 790	    Accept ;
SS = 4	CP = 791	  Accept end_op
SS = 3	CP = 791	Accept statement
SS = 3	CP = 791	Deduce statement
SS = 4	CP = 791	  Deduce non_terminal_symbol
SS = 4	CP = 791	    Match  id
SS = 4	CP = 791	    Accept id
SS = 4	CP = 792	  Accept non_terminal_symbol
SS = 4	CP = 792	  Deduce assign_op
SS = 5	CP = 792	    Match  ::=
SS = 5	CP = 792	    Accept ::=
SS = 4	CP = 793	  Accept assign_op
SS = 4	CP = 793	  Deduce declaration
SS = 5	CP = 793	    Deduce term
SS = 6	CP = 793	      Deduce part
SS = 6	CP = 793	        Predict Failed in CONDITION
SS = 6	CP = 793	        Predict Failed in CONDITION
SS = 6	CP = 793	        Predict Failed in CONDITION
SS = 8	CP = 793	        Deduce simple_part
SS = 8	CP = 793	          Predict Failed in CONDITION
SS = 10	CP = 793	          Deduce terminal_symbol
SS = 11	CP = 793	            Match  slit
SS = 11	CP = 793	            Accept slit
SS = 10	CP = 794	          Accept terminal_symbol
SS = 8	CP = 794	        Accept simple_part
SS = 6	CP = 794	      Accept part
SS = 7	CP = 794	      Match  ,
SS = 7	CP = 794	      Reject ,
SS = 7	CP = 794	      Deduce part
SS = 7	CP = 794	        Predict Failed in CONDITION
SS = 7	CP = 794	        Predict Failed in CONDITION
SS = 7	CP = 794	        Predict Failed in CONDITION
SS = 9	CP = 794	        Deduce simple_part
SS = 11	CP = 794	          Deduce right_non_terminal_symbol
SS = 12	CP = 794	            Deduce non_terminal_symbol
SS = 12	CP = 794	              Match  id
SS = 12	CP = 794	              Accept id
SS = 12	CP = 795	            Accept non_terminal_symbol
SS = 11	CP = 795	          Accept right_non_terminal_symbol
SS = 9	CP = 795	        Accept simple_part
SS = 7	CP = 795	      Accept part
SS = 7	CP = 795	      Match  ,
SS = 7	CP = 795	      Reject ,
SS = 7	CP = 795	      Deduce part
SS = 7	CP = 795	        Predict Failed in CONDITION
SS = 7	CP = 795	        Predict Failed in CONDITION
SS = 7	CP = 795	        Predict Failed in CONDITION
SS = 9	CP = 795	        Deduce simple_part
SS = 9	CP = 795	          Predict Failed in CONDITION
SS = 11	CP = 795	          Deduce terminal_symbol
SS = 12	CP = 795	            Match  slit
SS = 12	CP = 795	            Accept slit
SS = 11	CP = 796	          Accept terminal_symbol
SS = 9	CP = 796	        Accept simple_part
SS = 7	CP = 796	      Accept part
SS = 7	CP = 796	      Match  ,
SS = 7	CP = 796	      Reject ,
SS = 6	CP = 796	      Predict Failed: part
SS = 5	CP = 796	    Accept term
SS = 5	CP = 796	    Match  |
SS = 5	CP = 796	    Reject |
SS = 4	CP = 796	  Accept declaration
SS = 4	CP = 796	  Deduce end_op
SS = 5	CP = 796	    Match  ;
SS = 5	CP = 796	    Accept ;
SS = 4	CP = 797	  Accept end_op
SS = 3	CP = 797	Accept statement
SS = 2	CP = 797	End Of File
show ast
begin
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "begin"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "ignore"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "endline"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "';'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "stmts"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "statement"
                term -> part
                  part -> repeat_part
                    repeat_part -> "{"
                    repeat_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "ENDL"
                    repeat_part -> "}"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "decl-stmts"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "declaration"
                term -> part
                  part -> repeat_part
                    repeat_part -> "{"
                    repeat_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "ENDL"
                    repeat_part -> "}"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "endblock"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "end-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "else-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "until-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "catch-stmt"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "statement"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "prep-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "package-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "import-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "block-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "namespace-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "using-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "if-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "switch-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "while-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "loop-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "for-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "foreach-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "control-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "function-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "return-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "try-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "throw-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "class-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expr-stmt"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "declaration"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "prep-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "namespace-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "using-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "function-stmt"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "class-stmt"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "prep-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "PREP"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "package-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'package'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "import-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'import'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "import-list"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "module-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'.'"
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'*'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> right_non_terminal_symbol
                              right_non_terminal_symbol -> non_terminal_symbol
                                non_terminal_symbol -> "module-list"
                    declaration_part -> ")"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "import-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "module-list"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'as'"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ID"
            alternative_part -> "]"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "import-list"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "var-def"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-bind"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'='"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-list"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "var-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'var'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'link'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'constant'"
            declaration_part -> ")"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-def"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "var-bind"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-bind-list"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "var-bind-list"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "var-bind-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'...'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-bind"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "var-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'='"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "single-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "var-list"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "block-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'block'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "namespace-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'namespace'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "decl-stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "using-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'using'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "using-list"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "using-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "module-list"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "using-list"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "if-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'if'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "else-stmt"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "stmts"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "else-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'else'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'if'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "basic-expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "switch-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'switch'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "switch-stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "switch-stmts"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "switch-case"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "switch-default"
            repeat_part -> "}"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "switch-case"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'case'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "logic-or-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "switch-default"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'default'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "while-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'while'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "loop-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'loop'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "until-stmt"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'end'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
            declaration_part -> ")"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "until-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'until'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "for-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'for'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "var-def"
            alternative_part -> "]"
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "';'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
            declaration_part -> ")"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "basic-expr"
            alternative_part -> "]"
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "';'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
            declaration_part -> ")"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "basic-expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "for-body"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "foreach-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'foreach'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'in'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "for-body"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "for-body"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'do'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "basic-expr"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "endline"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "stmts"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'end'"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
            declaration_part -> ")"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "function-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'function'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "argument-list"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'override'"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "function-body"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "function-body"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> alternative_part
                    alternative_part -> "["
                    alternative_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "ENDL"
                    alternative_part -> "]"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'{'"
                term -> part
                  part -> alternative_part
                    alternative_part -> "["
                    alternative_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "ENDL"
                    alternative_part -> "]"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "stmts"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'}'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "stmts"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'end'"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ENDL"
            declaration_part -> ")"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "return-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'return'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "try-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'try'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "stmts"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "catch-stmt"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "stmts"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "catch-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'catch'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "':'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "visit-expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "throw-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'throw'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "class-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'class'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'struct'"
            declaration_part -> ")"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'extends'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "visit-expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "decl-stmts"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "control-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'break'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'continue'"
            declaration_part -> ")"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "expr-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "expr"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "endline"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "end-stmt"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'end'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ENDL"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "single-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "single-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "lambda-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "basic-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "var-bind"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'='"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "cond-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "cond-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "asi-op"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "single-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "asi-op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "':='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'+='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'-='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'*='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'/='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'%='"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'^='"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "lambda-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'['"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "capture-list"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "']'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "argument-list"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "lambda-body"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "capture-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'='"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "capture-list"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "argument-list"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'...'"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'='"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "ID"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "':'"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "visit-expr"
            alternative_part -> "]"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "','"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "argument-list"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "lambda-body"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'{'"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "statement"
                term -> part
                  part -> repeat_part
                    repeat_part -> "{"
                    repeat_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "ENDL"
                    repeat_part -> "}"
            repeat_part -> "}"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'}'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'->'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "cond-expr"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "cond-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "logic-or-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "cond-postfix"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "cond-postfix"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'?'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "logic-or-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "':'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "cond-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "':'"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "logic-or-expr"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "logic-or-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "logic-and-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'||'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'or'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "logic-or-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "logic-and-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "equal-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'&&'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'and'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "logic-and-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "equal-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "relat-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'=='"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'!='"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'is'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'not'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "equal-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "relat-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "add-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'>'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'<'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'>='"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'<='"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "relat-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "add-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "mul-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'+'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'-'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "add-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "mul-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'*'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'/'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'%'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'^'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "mul-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "unary-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary-op"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'new'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'gcnew'"
            declaration_part -> ")"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "unary-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "array"
            alternative_part -> "]"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "prim-expr"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "postfix-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "unary-op"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'typeid'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'++'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'--'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'*'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'&'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'-'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'!'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'not'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "postfix-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'++'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'--'"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'...'"
            declaration_part -> ")"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "postfix-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "prim-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "visit-expr"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "constant"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "visit-expr"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "object"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> declaration_part
                    declaration_part -> "("
                    declaration_part -> declaration
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'->'"
                      declaration -> "|"
                      declaration -> term
                        term -> part
                          part -> simple_part
                            simple_part -> terminal_symbol
                              terminal_symbol -> "'.'"
                    declaration_part -> ")"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "visit-expr"
            alternative_part -> "]"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "object"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "array"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "index"
            alternative_part -> "]"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "STR"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "index"
            alternative_part -> "]"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'local'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'global'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "element"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "CHAR"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "element"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> declaration_part
            declaration_part -> "("
            declaration_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "ID"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "'('"
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "single-expr"
                term -> part
                  part -> simple_part
                    simple_part -> terminal_symbol
                      terminal_symbol -> "')'"
            declaration_part -> ")"
        term -> part
          part -> repeat_part
            repeat_part -> "{"
            repeat_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "fcall"
              declaration -> "|"
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "index"
            repeat_part -> "}"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "constant"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "NUM"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'null'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'true'"
      declaration -> "|"
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'false'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "array"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'{'"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'}'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "fcall"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'('"
        term -> part
          part -> alternative_part
            alternative_part -> "["
            alternative_part -> declaration
              declaration -> term
                term -> part
                  part -> simple_part
                    simple_part -> right_non_terminal_symbol
                      right_non_terminal_symbol -> non_terminal_symbol
                        non_terminal_symbol -> "expr"
            alternative_part -> "]"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "')'"
    statement -> end_op
      end_op -> ";"
  begin -> statement
    statement -> non_terminal_symbol
      non_terminal_symbol -> "index"
    statement -> assign_op
      assign_op -> "::="
    statement -> declaration
      declaration -> term
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "'['"
        term -> part
          part -> simple_part
            simple_part -> right_non_terminal_symbol
              right_non_terminal_symbol -> non_terminal_symbol
                non_terminal_symbol -> "basic-expr"
        term -> part
          part -> simple_part
            simple_part -> terminal_symbol
              terminal_symbol -> "']'"
    statement -> end_op
      end_op -> ";"
build successfully
parse ebnf end
print ebnf: 
begin
	stmts
ignore
	ignore@0_rep_1
ignore@0_rep_1
	NULL
ignore@0_rep_1
	ENDL
	ignore@0_rep_1
endline
	';'
endline
	ENDL
stmts
	stmts@0_rep_1
stmts@0_rep_1
	NULL
stmts@0_rep_1
	statement
	stmts@0_rep_1@0_rep_2
	stmts@0_rep_1
stmts@0_rep_1@0_rep_2
	NULL
stmts@0_rep_1@0_rep_2
	ENDL
	stmts@0_rep_1@0_rep_2
decl-stmts
	decl-stmts@0_rep_1
decl-stmts@0_rep_1
	NULL
decl-stmts@0_rep_1
	declaration
	decl-stmts@0_rep_1@0_rep_2
	decl-stmts@0_rep_1
decl-stmts@0_rep_1@0_rep_2
	NULL
decl-stmts@0_rep_1@0_rep_2
	ENDL
	decl-stmts@0_rep_1@0_rep_2
endblock
	catch-stmt
endblock
	until-stmt
endblock
	else-stmt
endblock
	end-stmt
statement
	expr-stmt
statement
	class-stmt
statement
	throw-stmt
statement
	try-stmt
statement
	return-stmt
statement
	function-stmt
statement
	control-stmt
statement
	foreach-stmt
statement
	for-stmt
statement
	loop-stmt
statement
	while-stmt
statement
	switch-stmt
statement
	if-stmt
statement
	using-stmt
statement
	namespace-stmt
statement
	block-stmt
statement
	var-stmt
statement
	import-stmt
statement
	package-stmt
statement
	prep-stmt
declaration
	class-stmt
declaration
	function-stmt
declaration
	using-stmt
declaration
	var-stmt
declaration
	namespace-stmt
declaration
	prep-stmt
prep-stmt
	PREP
	ENDL
package-stmt
	'package'
	ID
	endline
import-stmt
	'import'
	import-list
	endline
module-list
	ID
	module-list@0_opt_2
module-list@0_opt_2
	NULL
module-list@0_opt_2
	'.'
	module-list@0_opt_2@0_decl_2
module-list@0_opt_2@0_decl_2
	module-list
module-list@0_opt_2@0_decl_2
	'*'
import-list
	module-list
	import-list@0_opt_2
	import-list@0_opt_3
import-list@0_opt_3
	NULL
import-list@0_opt_3
	','
	import-list
import-list@0_opt_2
	NULL
import-list@0_opt_2
	'as'
	ID
var-def
	var-list
var-def
	var-bind
	'='
	basic-expr
var-stmt
	var-stmt@0_decl_1
	var-def
	endline
var-stmt@0_decl_1
	'constant'
var-stmt@0_decl_1
	'link'
var-stmt@0_decl_1
	'var'
var-bind
	'('
	var-bind-list
	var-bind@0_rep_3
	')'
var-bind@0_rep_3
	NULL
var-bind@0_rep_3
	','
	var-bind-list
	var-bind@0_rep_3
var-bind-list
	var-bind
var-bind-list
	'...'
var-bind-list
	ID
var-list
	ID
	'='
	single-expr
	var-list@0_opt_4
var-list@0_opt_4
	NULL
var-list@0_opt_4
	','
	var-list
block-stmt
	'block'
	ENDL
	stmts
	'end'
	ENDL
namespace-stmt
	'namespace'
	ID
	ENDL
	decl-stmts
	'end'
	ENDL
using-stmt
	'using'
	using-list
	endline
using-list
	module-list
	using-list@0_opt_2
using-list@0_opt_2
	NULL
using-list@0_opt_2
	','
	using-list
if-stmt
	'if'
	basic-expr
	ENDL
	stmts
	if-stmt@0_rep_5
	'end'
	ENDL
if-stmt@0_rep_5
	NULL
if-stmt@0_rep_5
	else-stmt
	stmts
	if-stmt@0_rep_5
else-stmt
	'else'
	else-stmt@0_opt_2
	ENDL
else-stmt@0_opt_2
	NULL
else-stmt@0_opt_2
	'if'
	basic-expr
switch-stmt
	'switch'
	basic-expr
	ENDL
	switch-stmts
	'end'
	ENDL
switch-stmts
	switch-stmts@0_rep_1
	switch-stmts@0_rep_2
switch-stmts@0_rep_2
	NULL
switch-stmts@0_rep_2
	ENDL
	switch-stmts@0_rep_2
switch-stmts@0_rep_1
	NULL
switch-stmts@0_rep_1
	switch-default
	switch-stmts@0_rep_1
switch-stmts@0_rep_1
	switch-case
	switch-stmts@0_rep_1
switch-case
	'case'
	logic-or-expr
	ENDL
	stmts
	'end'
	ENDL
switch-default
	'default'
	ENDL
	stmts
	'end'
	ENDL
while-stmt
	'while'
	basic-expr
	ENDL
	stmts
	'end'
	ENDL
loop-stmt
	'loop'
	ENDL
	stmts
	loop-stmt@0_decl_4
loop-stmt@0_decl_4
	ENDL
loop-stmt@0_decl_4
	'end'
loop-stmt@0_decl_4
	until-stmt
until-stmt
	'until'
	basic-expr
	ENDL
for-stmt
	'for'
	for-stmt@0_opt_2
	for-stmt@0_decl_3
	for-stmt@0_opt_4
	for-stmt@0_decl_5
	for-stmt@0_opt_6
	for-body
for-stmt@0_opt_6
	NULL
for-stmt@0_opt_6
	basic-expr
for-stmt@0_decl_5
	','
for-stmt@0_decl_5
	';'
for-stmt@0_opt_4
	NULL
for-stmt@0_opt_4
	basic-expr
for-stmt@0_decl_3
	','
for-stmt@0_decl_3
	';'
for-stmt@0_opt_2
	NULL
for-stmt@0_opt_2
	var-def
foreach-stmt
	'foreach'
	ID
	'in'
	basic-expr
	for-body
for-body
	for-body@0_decl_1
for-body@0_decl_1
	ENDL
	stmts
	'end'
	ENDL
for-body@0_decl_1
	'do'
	basic-expr
	endline
function-stmt
	'function'
	ID
	'('
	function-stmt@0_opt_4
	')'
	function-stmt@0_opt_6
	function-body
function-stmt@0_opt_6
	NULL
function-stmt@0_opt_6
	'override'
function-stmt@0_opt_4
	NULL
function-stmt@0_opt_4
	argument-list
function-body
	function-body@0_decl_1
function-body@0_decl_1
	ENDL
	stmts
	'end'
	ENDL
function-body@0_decl_1
	function-body@0_decl_1@0_opt_1
	'{'
	function-body@0_decl_1@0_opt_3
	stmts
	'}'
function-body@0_decl_1@0_opt_3
	NULL
function-body@0_decl_1@0_opt_3
	ENDL
function-body@0_decl_1@0_opt_1
	NULL
function-body@0_decl_1@0_opt_1
	ENDL
return-stmt
	'return'
	return-stmt@0_opt_2
	endline
return-stmt@0_opt_2
	NULL
return-stmt@0_opt_2
	expr
try-stmt
	'try'
	ENDL
	stmts
	try-stmt@0_rep_4
	'end'
	ENDL
try-stmt@0_rep_4
	NULL
try-stmt@0_rep_4
	catch-stmt
	stmts
	try-stmt@0_rep_4
catch-stmt
	'catch'
	ID
	catch-stmt@0_opt_3
	ENDL
catch-stmt@0_opt_3
	NULL
catch-stmt@0_opt_3
	':'
	visit-expr
throw-stmt
	'throw'
	throw-stmt@0_opt_2
	endline
throw-stmt@0_opt_2
	NULL
throw-stmt@0_opt_2
	expr
class-stmt
	class-stmt@0_decl_1
	ID
	class-stmt@0_opt_3
	ENDL
	decl-stmts
	'end'
	ENDL
class-stmt@0_opt_3
	NULL
class-stmt@0_opt_3
	'extends'
	visit-expr
class-stmt@0_decl_1
	'struct'
class-stmt@0_decl_1
	'class'
control-stmt
	control-stmt@0_decl_1
	endline
control-stmt@0_decl_1
	'continue'
control-stmt@0_decl_1
	'break'
expr-stmt
	expr
	endline
end-stmt
	'end'
	ENDL
expr
	single-expr
	expr@0_opt_2
expr@0_opt_2
	NULL
expr@0_opt_2
	','
	expr
single-expr
	basic-expr
single-expr
	lambda-expr
basic-expr
	cond-expr
	basic-expr@1_opt_2
basic-expr
	var-bind
	'='
	cond-expr
basic-expr@1_opt_2
	NULL
basic-expr@1_opt_2
	asi-op
	single-expr
asi-op
	'^='
asi-op
	'%='
asi-op
	'/='
asi-op
	'*='
asi-op
	'-='
asi-op
	'+='
asi-op
	':='
asi-op
	'='
lambda-expr
	'['
	lambda-expr@0_opt_2
	']'
	'('
	lambda-expr@0_opt_5
	')'
	lambda-body
lambda-expr@0_opt_5
	NULL
lambda-expr@0_opt_5
	argument-list
lambda-expr@0_opt_2
	NULL
lambda-expr@0_opt_2
	capture-list
capture-list
	capture-list@0_opt_1
	ID
	capture-list@0_rep_3
capture-list@0_rep_3
	NULL
capture-list@0_rep_3
	','
	capture-list
	capture-list@0_rep_3
capture-list@0_opt_1
	NULL
capture-list@0_opt_1
	'='
argument-list
	argument-list@1_opt_1
	ID
	argument-list@1_opt_3
	argument-list@1_rep_4
argument-list
	'...'
	ID
argument-list@1_rep_4
	NULL
argument-list@1_rep_4
	','
	argument-list
	argument-list@1_rep_4
argument-list@1_opt_3
	NULL
argument-list@1_opt_3
	':'
	visit-expr
argument-list@1_opt_1
	NULL
argument-list@1_opt_1
	'='
lambda-body
	'->'
	cond-expr
lambda-body
	'{'
	lambda-body@0_rep_2
	'}'
lambda-body@0_rep_2
	NULL
lambda-body@0_rep_2
	statement
	lambda-body@0_rep_2@0_rep_2
	lambda-body@0_rep_2
lambda-body@0_rep_2@0_rep_2
	NULL
lambda-body@0_rep_2@0_rep_2
	ENDL
	lambda-body@0_rep_2@0_rep_2
cond-expr
	logic-or-expr
	cond-expr@0_opt_2
cond-expr@0_opt_2
	NULL
cond-expr@0_opt_2
	cond-postfix
cond-postfix
	':'
	logic-or-expr
cond-postfix
	'?'
	logic-or-expr
	':'
	cond-expr
logic-or-expr
	logic-and-expr
	logic-or-expr@0_opt_2
logic-or-expr@0_opt_2
	NULL
logic-or-expr@0_opt_2
	logic-or-expr@0_opt_2@0_decl_1
	logic-or-expr
logic-or-expr@0_opt_2@0_decl_1
	'or'
logic-or-expr@0_opt_2@0_decl_1
	'||'
logic-and-expr
	equal-expr
	logic-and-expr@0_opt_2
logic-and-expr@0_opt_2
	NULL
logic-and-expr@0_opt_2
	logic-and-expr@0_opt_2@0_decl_1
	logic-and-expr
logic-and-expr@0_opt_2@0_decl_1
	'and'
logic-and-expr@0_opt_2@0_decl_1
	'&&'
equal-expr
	relat-expr
	equal-expr@0_opt_2
equal-expr@0_opt_2
	NULL
equal-expr@0_opt_2
	equal-expr@0_opt_2@0_decl_1
	equal-expr
equal-expr@0_opt_2@0_decl_1
	'not'
equal-expr@0_opt_2@0_decl_1
	'is'
equal-expr@0_opt_2@0_decl_1
	'!='
equal-expr@0_opt_2@0_decl_1
	'=='
relat-expr
	add-expr
	relat-expr@0_opt_2
relat-expr@0_opt_2
	NULL
relat-expr@0_opt_2
	relat-expr@0_opt_2@0_decl_1
	relat-expr
relat-expr@0_opt_2@0_decl_1
	'<='
relat-expr@0_opt_2@0_decl_1
	'>='
relat-expr@0_opt_2@0_decl_1
	'<'
relat-expr@0_opt_2@0_decl_1
	'>'
add-expr
	mul-expr
	add-expr@0_opt_2
add-expr@0_opt_2
	NULL
add-expr@0_opt_2
	add-expr@0_opt_2@0_decl_1
	add-expr
add-expr@0_opt_2@0_decl_1
	'-'
add-expr@0_opt_2@0_decl_1
	'+'
mul-expr
	unary-expr
	mul-expr@0_opt_2
mul-expr@0_opt_2
	NULL
mul-expr@0_opt_2
	mul-expr@0_opt_2@0_decl_1
	mul-expr
mul-expr@0_opt_2@0_decl_1
	'^'
mul-expr@0_opt_2@0_decl_1
	'%'
mul-expr@0_opt_2@0_decl_1
	'/'
mul-expr@0_opt_2@0_decl_1
	'*'
unary-expr
	prim-expr
	unary-expr@2_opt_2
unary-expr
	unary-expr@1_decl_1
	unary-expr
	unary-expr@1_opt_3
unary-expr
	unary-op
	unary-expr
unary-expr@2_opt_2
	NULL
unary-expr@2_opt_2
	postfix-expr
unary-expr@1_opt_3
	NULL
unary-expr@1_opt_3
	array
unary-expr@1_decl_1
	'gcnew'
unary-expr@1_decl_1
	'new'
unary-op
	'not'
unary-op
	'!'
unary-op
	'-'
unary-op
	'&'
unary-op
	'*'
unary-op
	'--'
unary-op
	'++'
unary-op
	'typeid'
postfix-expr
	postfix-expr@0_decl_1
	postfix-expr@0_opt_2
postfix-expr@0_opt_2
	NULL
postfix-expr@0_opt_2
	postfix-expr
postfix-expr@0_decl_1
	'...'
postfix-expr@0_decl_1
	'--'
postfix-expr@0_decl_1
	'++'
prim-expr
	constant
prim-expr
	visit-expr
visit-expr
	object
	visit-expr@0_opt_2
visit-expr@0_opt_2
	NULL
visit-expr@0_opt_2
	visit-expr@0_opt_2@0_decl_1
	visit-expr
visit-expr@0_opt_2@0_decl_1
	'.'
visit-expr@0_opt_2@0_decl_1
	'->'
object
	CHAR
object
	element
object
	'global'
object
	'local'
object
	STR
	object@1_opt_2
object
	array
	object@0_opt_2
object@1_opt_2
	NULL
object@1_opt_2
	index
object@0_opt_2
	NULL
object@0_opt_2
	index
element
	element@0_decl_1
	element@0_rep_2
element@0_rep_2
	NULL
element@0_rep_2
	index
	element@0_rep_2
element@0_rep_2
	fcall
	element@0_rep_2
element@0_decl_1
	'('
	single-expr
	')'
element@0_decl_1
	ID
constant
	'false'
constant
	'true'
constant
	'null'
constant
	NUM
array
	'{'
	array@0_opt_2
	'}'
array@0_opt_2
	NULL
array@0_opt_2
	expr
fcall
	'('
	fcall@0_opt_2
	')'
fcall@0_opt_2
	NULL
fcall@0_opt_2
	expr
index
	'['
	basic-expr
	']'
print ebnf end



######################
show origin terms info
######################
begin ::= stmts 
ignore ::= ignore@0_rep_1 
ignore@0_rep_1 ::= NULL 
ignore@0_rep_1 ::= ENDL ignore@0_rep_1 
endline ::= ';' 
endline ::= ENDL 
stmts ::= stmts@0_rep_1 
stmts@0_rep_1 ::= NULL 
stmts@0_rep_1 ::= statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1 
stmts@0_rep_1@0_rep_2 ::= NULL 
stmts@0_rep_1@0_rep_2 ::= ENDL stmts@0_rep_1@0_rep_2 
decl-stmts ::= decl-stmts@0_rep_1 
decl-stmts@0_rep_1 ::= NULL 
decl-stmts@0_rep_1 ::= declaration decl-stmts@0_rep_1@0_rep_2 decl-stmts@0_rep_1 
decl-stmts@0_rep_1@0_rep_2 ::= NULL 
decl-stmts@0_rep_1@0_rep_2 ::= ENDL decl-stmts@0_rep_1@0_rep_2 
endblock ::= catch-stmt 
endblock ::= until-stmt 
endblock ::= else-stmt 
endblock ::= end-stmt 
statement ::= expr-stmt 
statement ::= class-stmt 
statement ::= throw-stmt 
statement ::= try-stmt 
statement ::= return-stmt 
statement ::= function-stmt 
statement ::= control-stmt 
statement ::= foreach-stmt 
statement ::= for-stmt 
statement ::= loop-stmt 
statement ::= while-stmt 
statement ::= switch-stmt 
statement ::= if-stmt 
statement ::= using-stmt 
statement ::= namespace-stmt 
statement ::= block-stmt 
statement ::= var-stmt 
statement ::= import-stmt 
statement ::= package-stmt 
statement ::= prep-stmt 
declaration ::= class-stmt 
declaration ::= function-stmt 
declaration ::= using-stmt 
declaration ::= var-stmt 
declaration ::= namespace-stmt 
declaration ::= prep-stmt 
prep-stmt ::= PREP ENDL 
package-stmt ::= 'package' ID endline 
import-stmt ::= 'import' import-list endline 
module-list ::= ID module-list@0_opt_2 
module-list@0_opt_2 ::= NULL 
module-list@0_opt_2 ::= '.' module-list@0_opt_2@0_decl_2 
module-list@0_opt_2@0_decl_2 ::= module-list 
module-list@0_opt_2@0_decl_2 ::= '*' 
import-list ::= module-list import-list@0_opt_2 import-list@0_opt_3 
import-list@0_opt_3 ::= NULL 
import-list@0_opt_3 ::= ',' import-list 
import-list@0_opt_2 ::= NULL 
import-list@0_opt_2 ::= 'as' ID 
var-def ::= var-list 
var-def ::= var-bind '=' basic-expr 
var-stmt ::= var-stmt@0_decl_1 var-def endline 
var-stmt@0_decl_1 ::= 'constant' 
var-stmt@0_decl_1 ::= 'link' 
var-stmt@0_decl_1 ::= 'var' 
var-bind ::= '(' var-bind-list var-bind@0_rep_3 ')' 
var-bind@0_rep_3 ::= NULL 
var-bind@0_rep_3 ::= ',' var-bind-list var-bind@0_rep_3 
var-bind-list ::= var-bind 
var-bind-list ::= '...' 
var-bind-list ::= ID 
var-list ::= ID '=' single-expr var-list@0_opt_4 
var-list@0_opt_4 ::= NULL 
var-list@0_opt_4 ::= ',' var-list 
block-stmt ::= 'block' ENDL stmts 'end' ENDL 
namespace-stmt ::= 'namespace' ID ENDL decl-stmts 'end' ENDL 
using-stmt ::= 'using' using-list endline 
using-list ::= module-list using-list@0_opt_2 
using-list@0_opt_2 ::= NULL 
using-list@0_opt_2 ::= ',' using-list 
if-stmt ::= 'if' basic-expr ENDL stmts if-stmt@0_rep_5 'end' ENDL 
if-stmt@0_rep_5 ::= NULL 
if-stmt@0_rep_5 ::= else-stmt stmts if-stmt@0_rep_5 
else-stmt ::= 'else' else-stmt@0_opt_2 ENDL 
else-stmt@0_opt_2 ::= NULL 
else-stmt@0_opt_2 ::= 'if' basic-expr 
switch-stmt ::= 'switch' basic-expr ENDL switch-stmts 'end' ENDL 
switch-stmts ::= switch-stmts@0_rep_1 switch-stmts@0_rep_2 
switch-stmts@0_rep_2 ::= NULL 
switch-stmts@0_rep_2 ::= ENDL switch-stmts@0_rep_2 
switch-stmts@0_rep_1 ::= NULL 
switch-stmts@0_rep_1 ::= switch-default switch-stmts@0_rep_1 
switch-stmts@0_rep_1 ::= switch-case switch-stmts@0_rep_1 
switch-case ::= 'case' logic-or-expr ENDL stmts 'end' ENDL 
switch-default ::= 'default' ENDL stmts 'end' ENDL 
while-stmt ::= 'while' basic-expr ENDL stmts 'end' ENDL 
loop-stmt ::= 'loop' ENDL stmts loop-stmt@0_decl_4 
loop-stmt@0_decl_4 ::= ENDL 
loop-stmt@0_decl_4 ::= 'end' 
loop-stmt@0_decl_4 ::= until-stmt 
until-stmt ::= 'until' basic-expr ENDL 
for-stmt ::= 'for' for-stmt@0_opt_2 for-stmt@0_decl_3 for-stmt@0_opt_4 for-stmt@0_decl_5 for-stmt@0_opt_6 for-body 
for-stmt@0_opt_6 ::= NULL 
for-stmt@0_opt_6 ::= basic-expr 
for-stmt@0_decl_5 ::= ',' 
for-stmt@0_decl_5 ::= ';' 
for-stmt@0_opt_4 ::= NULL 
for-stmt@0_opt_4 ::= basic-expr 
for-stmt@0_decl_3 ::= ',' 
for-stmt@0_decl_3 ::= ';' 
for-stmt@0_opt_2 ::= NULL 
for-stmt@0_opt_2 ::= var-def 
foreach-stmt ::= 'foreach' ID 'in' basic-expr for-body 
for-body ::= for-body@0_decl_1 
for-body@0_decl_1 ::= ENDL stmts 'end' ENDL 
for-body@0_decl_1 ::= 'do' basic-expr endline 
function-stmt ::= 'function' ID '(' function-stmt@0_opt_4 ')' function-stmt@0_opt_6 function-body 
function-stmt@0_opt_6 ::= NULL 
function-stmt@0_opt_6 ::= 'override' 
function-stmt@0_opt_4 ::= NULL 
function-stmt@0_opt_4 ::= argument-list 
function-body ::= function-body@0_decl_1 
function-body@0_decl_1 ::= ENDL stmts 'end' ENDL 
function-body@0_decl_1 ::= function-body@0_decl_1@0_opt_1 '{' function-body@0_decl_1@0_opt_3 stmts '}' 
function-body@0_decl_1@0_opt_3 ::= NULL 
function-body@0_decl_1@0_opt_3 ::= ENDL 
function-body@0_decl_1@0_opt_1 ::= NULL 
function-body@0_decl_1@0_opt_1 ::= ENDL 
return-stmt ::= 'return' return-stmt@0_opt_2 endline 
return-stmt@0_opt_2 ::= NULL 
return-stmt@0_opt_2 ::= expr 
try-stmt ::= 'try' ENDL stmts try-stmt@0_rep_4 'end' ENDL 
try-stmt@0_rep_4 ::= NULL 
try-stmt@0_rep_4 ::= catch-stmt stmts try-stmt@0_rep_4 
catch-stmt ::= 'catch' ID catch-stmt@0_opt_3 ENDL 
catch-stmt@0_opt_3 ::= NULL 
catch-stmt@0_opt_3 ::= ':' visit-expr 
throw-stmt ::= 'throw' throw-stmt@0_opt_2 endline 
throw-stmt@0_opt_2 ::= NULL 
throw-stmt@0_opt_2 ::= expr 
class-stmt ::= class-stmt@0_decl_1 ID class-stmt@0_opt_3 ENDL decl-stmts 'end' ENDL 
class-stmt@0_opt_3 ::= NULL 
class-stmt@0_opt_3 ::= 'extends' visit-expr 
class-stmt@0_decl_1 ::= 'struct' 
class-stmt@0_decl_1 ::= 'class' 
control-stmt ::= control-stmt@0_decl_1 endline 
control-stmt@0_decl_1 ::= 'continue' 
control-stmt@0_decl_1 ::= 'break' 
expr-stmt ::= expr endline 
end-stmt ::= 'end' ENDL 
expr ::= single-expr expr@0_opt_2 
expr@0_opt_2 ::= NULL 
expr@0_opt_2 ::= ',' expr 
single-expr ::= basic-expr 
single-expr ::= lambda-expr 
basic-expr ::= cond-expr basic-expr@1_opt_2 
basic-expr ::= var-bind '=' cond-expr 
basic-expr@1_opt_2 ::= NULL 
basic-expr@1_opt_2 ::= asi-op single-expr 
asi-op ::= '^=' 
asi-op ::= '%=' 
asi-op ::= '/=' 
asi-op ::= '*=' 
asi-op ::= '-=' 
asi-op ::= '+=' 
asi-op ::= ':=' 
asi-op ::= '=' 
lambda-expr ::= '[' lambda-expr@0_opt_2 ']' '(' lambda-expr@0_opt_5 ')' lambda-body 
lambda-expr@0_opt_5 ::= NULL 
lambda-expr@0_opt_5 ::= argument-list 
lambda-expr@0_opt_2 ::= NULL 
lambda-expr@0_opt_2 ::= capture-list 
capture-list ::= capture-list@0_opt_1 ID capture-list@0_rep_3 
capture-list@0_rep_3 ::= NULL 
capture-list@0_rep_3 ::= ',' capture-list capture-list@0_rep_3 
capture-list@0_opt_1 ::= NULL 
capture-list@0_opt_1 ::= '=' 
argument-list ::= argument-list@1_opt_1 ID argument-list@1_opt_3 argument-list@1_rep_4 
argument-list ::= '...' ID 
argument-list@1_rep_4 ::= NULL 
argument-list@1_rep_4 ::= ',' argument-list argument-list@1_rep_4 
argument-list@1_opt_3 ::= NULL 
argument-list@1_opt_3 ::= ':' visit-expr 
argument-list@1_opt_1 ::= NULL 
argument-list@1_opt_1 ::= '=' 
lambda-body ::= '->' cond-expr 
lambda-body ::= '{' lambda-body@0_rep_2 '}' 
lambda-body@0_rep_2 ::= NULL 
lambda-body@0_rep_2 ::= statement lambda-body@0_rep_2@0_rep_2 lambda-body@0_rep_2 
lambda-body@0_rep_2@0_rep_2 ::= NULL 
lambda-body@0_rep_2@0_rep_2 ::= ENDL lambda-body@0_rep_2@0_rep_2 
cond-expr ::= logic-or-expr cond-expr@0_opt_2 
cond-expr@0_opt_2 ::= NULL 
cond-expr@0_opt_2 ::= cond-postfix 
cond-postfix ::= ':' logic-or-expr 
cond-postfix ::= '?' logic-or-expr ':' cond-expr 
logic-or-expr ::= logic-and-expr logic-or-expr@0_opt_2 
logic-or-expr@0_opt_2 ::= NULL 
logic-or-expr@0_opt_2 ::= logic-or-expr@0_opt_2@0_decl_1 logic-or-expr 
logic-or-expr@0_opt_2@0_decl_1 ::= 'or' 
logic-or-expr@0_opt_2@0_decl_1 ::= '||' 
logic-and-expr ::= equal-expr logic-and-expr@0_opt_2 
logic-and-expr@0_opt_2 ::= NULL 
logic-and-expr@0_opt_2 ::= logic-and-expr@0_opt_2@0_decl_1 logic-and-expr 
logic-and-expr@0_opt_2@0_decl_1 ::= 'and' 
logic-and-expr@0_opt_2@0_decl_1 ::= '&&' 
equal-expr ::= relat-expr equal-expr@0_opt_2 
equal-expr@0_opt_2 ::= NULL 
equal-expr@0_opt_2 ::= equal-expr@0_opt_2@0_decl_1 equal-expr 
equal-expr@0_opt_2@0_decl_1 ::= 'not' 
equal-expr@0_opt_2@0_decl_1 ::= 'is' 
equal-expr@0_opt_2@0_decl_1 ::= '!=' 
equal-expr@0_opt_2@0_decl_1 ::= '==' 
relat-expr ::= add-expr relat-expr@0_opt_2 
relat-expr@0_opt_2 ::= NULL 
relat-expr@0_opt_2 ::= relat-expr@0_opt_2@0_decl_1 relat-expr 
relat-expr@0_opt_2@0_decl_1 ::= '<=' 
relat-expr@0_opt_2@0_decl_1 ::= '>=' 
relat-expr@0_opt_2@0_decl_1 ::= '<' 
relat-expr@0_opt_2@0_decl_1 ::= '>' 
add-expr ::= mul-expr add-expr@0_opt_2 
add-expr@0_opt_2 ::= NULL 
add-expr@0_opt_2 ::= add-expr@0_opt_2@0_decl_1 add-expr 
add-expr@0_opt_2@0_decl_1 ::= '-' 
add-expr@0_opt_2@0_decl_1 ::= '+' 
mul-expr ::= unary-expr mul-expr@0_opt_2 
mul-expr@0_opt_2 ::= NULL 
mul-expr@0_opt_2 ::= mul-expr@0_opt_2@0_decl_1 mul-expr 
mul-expr@0_opt_2@0_decl_1 ::= '^' 
mul-expr@0_opt_2@0_decl_1 ::= '%' 
mul-expr@0_opt_2@0_decl_1 ::= '/' 
mul-expr@0_opt_2@0_decl_1 ::= '*' 
unary-expr ::= prim-expr unary-expr@2_opt_2 
unary-expr ::= unary-expr@1_decl_1 unary-expr unary-expr@1_opt_3 
unary-expr ::= unary-op unary-expr 
unary-expr@2_opt_2 ::= NULL 
unary-expr@2_opt_2 ::= postfix-expr 
unary-expr@1_opt_3 ::= NULL 
unary-expr@1_opt_3 ::= array 
unary-expr@1_decl_1 ::= 'gcnew' 
unary-expr@1_decl_1 ::= 'new' 
unary-op ::= 'not' 
unary-op ::= '!' 
unary-op ::= '-' 
unary-op ::= '&' 
unary-op ::= '*' 
unary-op ::= '--' 
unary-op ::= '++' 
unary-op ::= 'typeid' 
postfix-expr ::= postfix-expr@0_decl_1 postfix-expr@0_opt_2 
postfix-expr@0_opt_2 ::= NULL 
postfix-expr@0_opt_2 ::= postfix-expr 
postfix-expr@0_decl_1 ::= '...' 
postfix-expr@0_decl_1 ::= '--' 
postfix-expr@0_decl_1 ::= '++' 
prim-expr ::= constant 
prim-expr ::= visit-expr 
visit-expr ::= object visit-expr@0_opt_2 
visit-expr@0_opt_2 ::= NULL 
visit-expr@0_opt_2 ::= visit-expr@0_opt_2@0_decl_1 visit-expr 
visit-expr@0_opt_2@0_decl_1 ::= '.' 
visit-expr@0_opt_2@0_decl_1 ::= '->' 
object ::= CHAR 
object ::= element 
object ::= 'global' 
object ::= 'local' 
object ::= STR object@1_opt_2 
object ::= array object@0_opt_2 
object@1_opt_2 ::= NULL 
object@1_opt_2 ::= index 
object@0_opt_2 ::= NULL 
object@0_opt_2 ::= index 
element ::= element@0_decl_1 element@0_rep_2 
element@0_rep_2 ::= NULL 
element@0_rep_2 ::= index element@0_rep_2 
element@0_rep_2 ::= fcall element@0_rep_2 
element@0_decl_1 ::= '(' single-expr ')' 
element@0_decl_1 ::= ID 
constant ::= 'false' 
constant ::= 'true' 
constant ::= 'null' 
constant ::= NUM 
array ::= '{' array@0_opt_2 '}' 
array@0_opt_2 ::= NULL 
array@0_opt_2 ::= expr 
fcall ::= '(' fcall@0_opt_2 ')' 
fcall@0_opt_2 ::= NULL 
fcall@0_opt_2 ::= expr 
index ::= '[' basic-expr ']' 



##############################
show info after add start node
##############################
%start% ::= begin ;
begin ::= stmts ;
ignore ::= ignore@0_rep_1 ;
ignore@0_rep_1 ::= NULL ;
ignore@0_rep_1 ::= ENDL ignore@0_rep_1 ;
endline ::= ';' ;
endline ::= ENDL ;
stmts ::= stmts@0_rep_1 ;
stmts@0_rep_1 ::= NULL ;
stmts@0_rep_1 ::= statement stmts@0_rep_1@0_rep_2 stmts@0_rep_1 ;
stmts@0_rep_1@0_rep_2 ::= NULL ;
stmts@0_rep_1@0_rep_2 ::= ENDL stmts@0_rep_1@0_rep_2 ;
decl-stmts ::= decl-stmts@0_rep_1 ;
decl-stmts@0_rep_1 ::= NULL ;
decl-stmts@0_rep_1 ::= declaration decl-stmts@0_rep_1@0_rep_2 decl-stmts@0_rep_1 ;
decl-stmts@0_rep_1@0_rep_2 ::= NULL ;
decl-stmts@0_rep_1@0_rep_2 ::= ENDL decl-stmts@0_rep_1@0_rep_2 ;
endblock ::= catch-stmt ;
endblock ::= until-stmt ;
endblock ::= else-stmt ;
endblock ::= end-stmt ;
statement ::= expr-stmt ;
statement ::= class-stmt ;
statement ::= throw-stmt ;
statement ::= try-stmt ;
statement ::= return-stmt ;
statement ::= function-stmt ;
statement ::= control-stmt ;
statement ::= foreach-stmt ;
statement ::= for-stmt ;
statement ::= loop-stmt ;
statement ::= while-stmt ;
statement ::= switch-stmt ;
statement ::= if-stmt ;
statement ::= using-stmt ;
statement ::= namespace-stmt ;
statement ::= block-stmt ;
statement ::= var-stmt ;
statement ::= import-stmt ;
statement ::= package-stmt ;
statement ::= prep-stmt ;
declaration ::= class-stmt ;
declaration ::= function-stmt ;
declaration ::= using-stmt ;
declaration ::= var-stmt ;
declaration ::= namespace-stmt ;
declaration ::= prep-stmt ;
prep-stmt ::= PREP ENDL ;
package-stmt ::= 'package' ID endline ;
import-stmt ::= 'import' import-list endline ;
module-list ::= ID module-list@0_opt_2 ;
module-list@0_opt_2 ::= NULL ;
module-list@0_opt_2 ::= '.' module-list@0_opt_2@0_decl_2 ;
module-list@0_opt_2@0_decl_2 ::= module-list ;
module-list@0_opt_2@0_decl_2 ::= '*' ;
import-list ::= module-list import-list@0_opt_2 import-list@0_opt_3 ;
import-list@0_opt_3 ::= NULL ;
import-list@0_opt_3 ::= ',' import-list ;
import-list@0_opt_2 ::= NULL ;
import-list@0_opt_2 ::= 'as' ID ;
var-def ::= var-list ;
var-def ::= var-bind '=' basic-expr ;
var-stmt ::= var-stmt@0_decl_1 var-def endline ;
var-stmt@0_decl_1 ::= 'constant' ;
var-stmt@0_decl_1 ::= 'link' ;
var-stmt@0_decl_1 ::= 'var' ;
var-bind ::= '(' var-bind-list var-bind@0_rep_3 ')' ;
var-bind@0_rep_3 ::= NULL ;
var-bind@0_rep_3 ::= ',' var-bind-list var-bind@0_rep_3 ;
var-bind-list ::= var-bind ;
var-bind-list ::= '...' ;
var-bind-list ::= ID ;
var-list ::= ID '=' single-expr var-list@0_opt_4 ;
var-list@0_opt_4 ::= NULL ;
var-list@0_opt_4 ::= ',' var-list ;
block-stmt ::= 'block' ENDL stmts 'end' ENDL ;
namespace-stmt ::= 'namespace' ID ENDL decl-stmts 'end' ENDL ;
using-stmt ::= 'using' using-list endline ;
using-list ::= module-list using-list@0_opt_2 ;
using-list@0_opt_2 ::= NULL ;
using-list@0_opt_2 ::= ',' using-list ;
if-stmt ::= 'if' basic-expr ENDL stmts if-stmt@0_rep_5 'end' ENDL ;
if-stmt@0_rep_5 ::= NULL ;
if-stmt@0_rep_5 ::= else-stmt stmts if-stmt@0_rep_5 ;
else-stmt ::= 'else' else-stmt@0_opt_2 ENDL ;
else-stmt@0_opt_2 ::= NULL ;
else-stmt@0_opt_2 ::= 'if' basic-expr ;
switch-stmt ::= 'switch' basic-expr ENDL switch-stmts 'end' ENDL ;
switch-stmts ::= switch-stmts@0_rep_1 switch-stmts@0_rep_2 ;
switch-stmts@0_rep_2 ::= NULL ;
switch-stmts@0_rep_2 ::= ENDL switch-stmts@0_rep_2 ;
switch-stmts@0_rep_1 ::= NULL ;
switch-stmts@0_rep_1 ::= switch-default switch-stmts@0_rep_1 ;
switch-stmts@0_rep_1 ::= switch-case switch-stmts@0_rep_1 ;
switch-case ::= 'case' logic-or-expr ENDL stmts 'end' ENDL ;
switch-default ::= 'default' ENDL stmts 'end' ENDL ;
while-stmt ::= 'while' basic-expr ENDL stmts 'end' ENDL ;
loop-stmt ::= 'loop' ENDL stmts loop-stmt@0_decl_4 ;
loop-stmt@0_decl_4 ::= ENDL ;
loop-stmt@0_decl_4 ::= 'end' ;
loop-stmt@0_decl_4 ::= until-stmt ;
until-stmt ::= 'until' basic-expr ENDL ;
for-stmt ::= 'for' for-stmt@0_opt_2 for-stmt@0_decl_3 for-stmt@0_opt_4 for-stmt@0_decl_5 for-stmt@0_opt_6 for-body ;
for-stmt@0_opt_6 ::= NULL ;
for-stmt@0_opt_6 ::= basic-expr ;
for-stmt@0_decl_5 ::= ',' ;
for-stmt@0_decl_5 ::= ';' ;
for-stmt@0_opt_4 ::= NULL ;
for-stmt@0_opt_4 ::= basic-expr ;
for-stmt@0_decl_3 ::= ',' ;
for-stmt@0_decl_3 ::= ';' ;
for-stmt@0_opt_2 ::= NULL ;
for-stmt@0_opt_2 ::= var-def ;
foreach-stmt ::= 'foreach' ID 'in' basic-expr for-body ;
for-body ::= for-body@0_decl_1 ;
for-body@0_decl_1 ::= ENDL stmts 'end' ENDL ;
for-body@0_decl_1 ::= 'do' basic-expr endline ;
function-stmt ::= 'function' ID '(' function-stmt@0_opt_4 ')' function-stmt@0_opt_6 function-body ;
function-stmt@0_opt_6 ::= NULL ;
function-stmt@0_opt_6 ::= 'override' ;
function-stmt@0_opt_4 ::= NULL ;
function-stmt@0_opt_4 ::= argument-list ;
function-body ::= function-body@0_decl_1 ;
function-body@0_decl_1 ::= ENDL stmts 'end' ENDL ;
function-body@0_decl_1 ::= function-body@0_decl_1@0_opt_1 '{' function-body@0_decl_1@0_opt_3 stmts '}' ;
function-body@0_decl_1@0_opt_3 ::= NULL ;
function-body@0_decl_1@0_opt_3 ::= ENDL ;
function-body@0_decl_1@0_opt_1 ::= NULL ;
function-body@0_decl_1@0_opt_1 ::= ENDL ;
return-stmt ::= 'return' return-stmt@0_opt_2 endline ;
return-stmt@0_opt_2 ::= NULL ;
return-stmt@0_opt_2 ::= expr ;
try-stmt ::= 'try' ENDL stmts try-stmt@0_rep_4 'end' ENDL ;
try-stmt@0_rep_4 ::= NULL ;
try-stmt@0_rep_4 ::= catch-stmt stmts try-stmt@0_rep_4 ;
catch-stmt ::= 'catch' ID catch-stmt@0_opt_3 ENDL ;
catch-stmt@0_opt_3 ::= NULL ;
catch-stmt@0_opt_3 ::= ':' visit-expr ;
throw-stmt ::= 'throw' throw-stmt@0_opt_2 endline ;
throw-stmt@0_opt_2 ::= NULL ;
throw-stmt@0_opt_2 ::= expr ;
class-stmt ::= class-stmt@0_decl_1 ID class-stmt@0_opt_3 ENDL decl-stmts 'end' ENDL ;
class-stmt@0_opt_3 ::= NULL ;
class-stmt@0_opt_3 ::= 'extends' visit-expr ;
class-stmt@0_decl_1 ::= 'struct' ;
class-stmt@0_decl_1 ::= 'class' ;
control-stmt ::= control-stmt@0_decl_1 endline ;
control-stmt@0_decl_1 ::= 'continue' ;
control-stmt@0_decl_1 ::= 'break' ;
expr-stmt ::= expr endline ;
end-stmt ::= 'end' ENDL ;
expr ::= single-expr expr@0_opt_2 ;
expr@0_opt_2 ::= NULL ;
expr@0_opt_2 ::= ',' expr ;
single-expr ::= basic-expr ;
single-expr ::= lambda-expr ;
basic-expr ::= cond-expr basic-expr@1_opt_2 ;
basic-expr ::= var-bind '=' cond-expr ;
basic-expr@1_opt_2 ::= NULL ;
basic-expr@1_opt_2 ::= asi-op single-expr ;
asi-op ::= '^=' ;
asi-op ::= '%=' ;
asi-op ::= '/=' ;
asi-op ::= '*=' ;
asi-op ::= '-=' ;
asi-op ::= '+=' ;
asi-op ::= ':=' ;
asi-op ::= '=' ;
lambda-expr ::= '[' lambda-expr@0_opt_2 ']' '(' lambda-expr@0_opt_5 ')' lambda-body ;
lambda-expr@0_opt_5 ::= NULL ;
lambda-expr@0_opt_5 ::= argument-list ;
lambda-expr@0_opt_2 ::= NULL ;
lambda-expr@0_opt_2 ::= capture-list ;
capture-list ::= capture-list@0_opt_1 ID capture-list@0_rep_3 ;
capture-list@0_rep_3 ::= NULL ;
capture-list@0_rep_3 ::= ',' capture-list capture-list@0_rep_3 ;
capture-list@0_opt_1 ::= NULL ;
capture-list@0_opt_1 ::= '=' ;
argument-list ::= argument-list@1_opt_1 ID argument-list@1_opt_3 argument-list@1_rep_4 ;
argument-list ::= '...' ID ;
argument-list@1_rep_4 ::= NULL ;
argument-list@1_rep_4 ::= ',' argument-list argument-list@1_rep_4 ;
argument-list@1_opt_3 ::= NULL ;
argument-list@1_opt_3 ::= ':' visit-expr ;
argument-list@1_opt_1 ::= NULL ;
argument-list@1_opt_1 ::= '=' ;
lambda-body ::= '->' cond-expr ;
lambda-body ::= '{' lambda-body@0_rep_2 '}' ;
lambda-body@0_rep_2 ::= NULL ;
lambda-body@0_rep_2 ::= statement lambda-body@0_rep_2@0_rep_2 lambda-body@0_rep_2 ;
lambda-body@0_rep_2@0_rep_2 ::= NULL ;
lambda-body@0_rep_2@0_rep_2 ::= ENDL lambda-body@0_rep_2@0_rep_2 ;
cond-expr ::= logic-or-expr cond-expr@0_opt_2 ;
cond-expr@0_opt_2 ::= NULL ;
cond-expr@0_opt_2 ::= cond-postfix ;
cond-postfix ::= ':' logic-or-expr ;
cond-postfix ::= '?' logic-or-expr ':' cond-expr ;
logic-or-expr ::= logic-and-expr logic-or-expr@0_opt_2 ;
logic-or-expr@0_opt_2 ::= NULL ;
logic-or-expr@0_opt_2 ::= logic-or-expr@0_opt_2@0_decl_1 logic-or-expr ;
logic-or-expr@0_opt_2@0_decl_1 ::= 'or' ;
logic-or-expr@0_opt_2@0_decl_1 ::= '||' ;
logic-and-expr ::= equal-expr logic-and-expr@0_opt_2 ;
logic-and-expr@0_opt_2 ::= NULL ;
logic-and-expr@0_opt_2 ::= logic-and-expr@0_opt_2@0_decl_1 logic-and-expr ;
logic-and-expr@0_opt_2@0_decl_1 ::= 'and' ;
logic-and-expr@0_opt_2@0_decl_1 ::= '&&' ;
equal-expr ::= relat-expr equal-expr@0_opt_2 ;
equal-expr@0_opt_2 ::= NULL ;
equal-expr@0_opt_2 ::= equal-expr@0_opt_2@0_decl_1 equal-expr ;
equal-expr@0_opt_2@0_decl_1 ::= 'not' ;
equal-expr@0_opt_2@0_decl_1 ::= 'is' ;
equal-expr@0_opt_2@0_decl_1 ::= '!=' ;
equal-expr@0_opt_2@0_decl_1 ::= '==' ;
relat-expr ::= add-expr relat-expr@0_opt_2 ;
relat-expr@0_opt_2 ::= NULL ;
relat-expr@0_opt_2 ::= relat-expr@0_opt_2@0_decl_1 relat-expr ;
relat-expr@0_opt_2@0_decl_1 ::= '<=' ;
relat-expr@0_opt_2@0_decl_1 ::= '>=' ;
relat-expr@0_opt_2@0_decl_1 ::= '<' ;
relat-expr@0_opt_2@0_decl_1 ::= '>' ;
add-expr ::= mul-expr add-expr@0_opt_2 ;
add-expr@0_opt_2 ::= NULL ;
add-expr@0_opt_2 ::= add-expr@0_opt_2@0_decl_1 add-expr ;
add-expr@0_opt_2@0_decl_1 ::= '-' ;
add-expr@0_opt_2@0_decl_1 ::= '+' ;
mul-expr ::= unary-expr mul-expr@0_opt_2 ;
mul-expr@0_opt_2 ::= NULL ;
mul-expr@0_opt_2 ::= mul-expr@0_opt_2@0_decl_1 mul-expr ;
mul-expr@0_opt_2@0_decl_1 ::= '^' ;
mul-expr@0_opt_2@0_decl_1 ::= '%' ;
mul-expr@0_opt_2@0_decl_1 ::= '/' ;
mul-expr@0_opt_2@0_decl_1 ::= '*' ;
unary-expr ::= prim-expr unary-expr@2_opt_2 ;
unary-expr ::= unary-expr@1_decl_1 unary-expr unary-expr@1_opt_3 ;
unary-expr ::= unary-op unary-expr ;
unary-expr@2_opt_2 ::= NULL ;
unary-expr@2_opt_2 ::= postfix-expr ;
unary-expr@1_opt_3 ::= NULL ;
unary-expr@1_opt_3 ::= array ;
unary-expr@1_decl_1 ::= 'gcnew' ;
unary-expr@1_decl_1 ::= 'new' ;
unary-op ::= 'not' ;
unary-op ::= '!' ;
unary-op ::= '-' ;
unary-op ::= '&' ;
unary-op ::= '*' ;
unary-op ::= '--' ;
unary-op ::= '++' ;
unary-op ::= 'typeid' ;
postfix-expr ::= postfix-expr@0_decl_1 postfix-expr@0_opt_2 ;
postfix-expr@0_opt_2 ::= NULL ;
postfix-expr@0_opt_2 ::= postfix-expr ;
postfix-expr@0_decl_1 ::= '...' ;
postfix-expr@0_decl_1 ::= '--' ;
postfix-expr@0_decl_1 ::= '++' ;
prim-expr ::= constant ;
prim-expr ::= visit-expr ;
visit-expr ::= object visit-expr@0_opt_2 ;
visit-expr@0_opt_2 ::= NULL ;
visit-expr@0_opt_2 ::= visit-expr@0_opt_2@0_decl_1 visit-expr ;
visit-expr@0_opt_2@0_decl_1 ::= '.' ;
visit-expr@0_opt_2@0_decl_1 ::= '->' ;
object ::= CHAR ;
object ::= element ;
object ::= 'global' ;
object ::= 'local' ;
object ::= STR object@1_opt_2 ;
object ::= array object@0_opt_2 ;
object@1_opt_2 ::= NULL ;
object@1_opt_2 ::= index ;
object@0_opt_2 ::= NULL ;
object@0_opt_2 ::= index ;
element ::= element@0_decl_1 element@0_rep_2 ;
element@0_rep_2 ::= NULL ;
element@0_rep_2 ::= index element@0_rep_2 ;
element@0_rep_2 ::= fcall element@0_rep_2 ;
element@0_decl_1 ::= '(' single-expr ')' ;
element@0_decl_1 ::= ID ;
constant ::= 'false' ;
constant ::= 'true' ;
constant ::= 'null' ;
constant ::= NUM ;
array ::= '{' array@0_opt_2 '}' ;
array@0_opt_2 ::= NULL ;
array@0_opt_2 ::= expr ;
fcall ::= '(' fcall@0_opt_2 ')' ;
fcall@0_opt_2 ::= NULL ;
fcall@0_opt_2 ::= expr ;
index ::= '[' basic-expr ']' ;
show   first_map
ignore@0_rep_1:
ENDL NULL 
module-list:
ID 
switch-stmts@0_rep_2:
ENDL NULL 
declaration:
PREP 'struct' 'var' 'using' 'class' 'namespace' 'constant' 'function' 'link' 
capture-list:
ID '=' 
block-stmt:
'block' 
for-stmt:
'for' 
for-stmt@0_decl_5:
';' ',' 
stmts:
'(' CHAR 'gcnew' 'return' '*' 'using' NULL NUM 'for' 'null' 'foreach' 'false' 'while' 'local' 'not' STR '{' 'package' '-' 'import' 'block' 'function' PREP '--' '[' 'switch' 'true' 'global' 'namespace' 'new' '++' 'link' 'break' 'continue' 'typeid' 'struct' 'try' '!' ID 'var' '&' 'class' 'loop' 'constant' 'throw' 'if' 
lambda-expr@0_opt_5:
NULL '=' ID '...' 
var-bind-list:
ID '(' '...' 
unary-expr@1_opt_3:
'{' NULL 
statement:
'(' CHAR 'gcnew' 'return' '*' 'using' NUM 'for' 'null' 'foreach' 'false' 'while' 'local' 'not' STR '{' 'package' '-' 'import' 'block' 'function' PREP '--' '[' 'switch' 'true' 'global' 'namespace' 'new' '++' 'link' 'break' 'continue' 'typeid' 'struct' 'try' '!' ID 'var' '&' 'class' 'loop' 'constant' 'throw' 'if' 
for-body:
ENDL 'do' 
single-expr:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
function-stmt@0_opt_4:
NULL '=' ID '...' 
catch-stmt:
'catch' 
control-stmt@0_decl_1:
'continue' 'break' 
for-stmt@0_decl_3:
';' ',' 
begin:
CHAR '(' 'gcnew' 'return' '*' 'using' NULL 'false' NUM 'null' 'foreach' 'for' 'local' 'not' 'while' STR '{' 'package' '-' 'function' 'block' 'import' PREP '[' '--' 'switch' 'true' 'global' 'namespace' 'new' '++' 'break' 'link' 'continue' 'typeid' 'struct' 'try' '!' ID '&' 'var' 'class' 'loop' 'throw' 'constant' 'if' 
postfix-expr:
'++' '...' '--' 
import-stmt:
'import' 
switch-stmts@0_rep_1:
'case' NULL 'default' 
catch-stmt@0_opt_3:
NULL ':' 
relat-expr@0_opt_2:
'<' NULL '<=' '>=' '>' 
postfix-expr@0_opt_2:
NULL '--' '++' '...' 
argument-list@1_rep_4:
NULL ',' 
equal-expr@0_opt_2@0_decl_1:
'is' 'not' '!=' '==' 
mul-expr:
'(' CHAR 'gcnew' '--' 'true' 'global' 'false' NUM 'null' 'new' '*' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
decl-stmts@0_rep_1:
PREP 'struct' 'var' 'using' 'class' 'namespace' NULL 'function' 'constant' 'link' 
unary-expr@2_opt_2:
NULL '--' '++' '...' 
index:
'[' 
if-stmt:
'if' 
stmts@0_rep_1@0_rep_2:
ENDL NULL 
function-body@0_decl_1@0_opt_3:
ENDL NULL 
unary-expr@1_decl_1:
'new' 'gcnew' 
cond-postfix:
'?' ':' 
foreach-stmt:
'foreach' 
for-stmt@0_opt_6:
CHAR '(' 'gcnew' '--' 'true' '*' 'global' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
loop-stmt@0_decl_4:
'end' 'until' ENDL 
return-stmt:
'return' 
import-list@0_opt_2:
'as' NULL 
switch-stmt:
'switch' 
add-expr@0_opt_2@0_decl_1:
'+' '-' 
element:
'(' ID 
namespace-stmt:
'namespace' 
cond-expr@0_opt_2:
'?' ':' NULL 
function-body@0_decl_1:
'{' ENDL 
var-list@0_opt_4:
NULL ',' 
cond-expr:
'(' CHAR 'gcnew' '--' '*' 'global' 'false' NUM 'null' 'new' 'true' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
module-list@0_opt_2@0_decl_2:
ID '*' 
for-stmt@0_opt_4:
CHAR '(' 'gcnew' '--' 'true' '*' 'global' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
function-body:
ENDL '{' 
function-stmt@0_opt_6:
NULL 'override' 
import-list:
ID 
visit-expr@0_opt_2:
'->' NULL '.' 
endline:
ENDL ';' 
try-stmt:
'try' 
add-expr@0_opt_2:
'+' NULL '-' 
else-stmt@0_opt_2:
NULL 'if' 
loop-stmt:
'loop' 
control-stmt:
'continue' 'break' 
unary-op:
'typeid' 'not' '--' '!' '*' '&' '-' '++' 
equal-expr:
CHAR '(' '--' 'gcnew' '*' 'true' NUM 'null' 'new' 'false' 'global' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
for-stmt@0_opt_2:
ID '(' NULL 
array@0_opt_2:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
fcall:
'(' 
end-stmt:
'end' 
object@1_opt_2:
NULL '[' 
expr-stmt:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
mul-expr@0_opt_2@0_decl_1:
'/' '^' '*' '%' 
logic-and-expr:
'(' CHAR 'gcnew' '--' 'true' 'global' 'false' NUM 'null' 'new' '*' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
class-stmt@0_opt_3:
NULL 'extends' 
expr:
'(' CHAR '--' 'gcnew' '[' '*' 'true' NUM 'null' 'new' 'false' 'global' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
%start%:
'(' CHAR 'gcnew' 'return' '*' 'using' NULL NUM 'for' 'null' 'foreach' 'false' 'while' 'local' 'not' STR '{' 'package' '-' 'import' 'block' 'function' PREP '--' '[' 'switch' 'true' 'global' 'namespace' 'new' '++' 'link' 'break' 'continue' 'typeid' 'struct' 'try' '!' ID 'var' '&' 'class' 'loop' 'constant' 'throw' 'if' 
class-stmt@0_decl_1:
'class' 'struct' 
logic-or-expr@0_opt_2:
'||' 'or' NULL 
module-list@0_opt_2:
NULL '.' 
capture-list@0_rep_3:
NULL ',' 
endblock:
'until' 'catch' 'end' 'else' 
postfix-expr@0_decl_1:
'++' '...' '--' 
class-stmt:
'class' 'struct' 
unary-expr:
CHAR '(' '--' 'gcnew' '*' 'global' 'true' NUM 'null' 'new' 'false' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
constant:
NUM 'null' 'false' 'true' 
return-stmt@0_opt_2:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
visit-expr@0_opt_2@0_decl_1:
'->' '.' 
else-stmt:
'else' 
var-bind:
'(' 
lambda-expr:
'[' 
relat-expr:
'(' CHAR 'gcnew' '--' '*' 'global' 'false' NUM 'null' 'new' 'true' '++' 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
lambda-body:
'{' '->' 
asi-op:
'=' '-=' '%=' '+=' '^=' ':=' '*=' '/=' 
lambda-body@0_rep_2:
CHAR '(' 'gcnew' 'return' '*' 'using' 'false' NUM 'null' 'foreach' 'for' NULL 'local' 'not' 'while' STR '{' 'package' '-' 'function' 'block' 'import' PREP '[' '--' 'switch' 'true' 'global' 'namespace' 'new' '++' 'break' 'link' 'continue' 'typeid' 'struct' 'try' '!' ID '&' 'var' 'class' 'loop' 'throw' 'constant' 'if' 
prep-stmt:
PREP 
if-stmt@0_rep_5:
'else' NULL 
argument-list:
ID '...' '=' 
visit-expr:
CHAR '(' 'local' STR ID '{' 'global' 
function-body@0_decl_1@0_opt_1:
ENDL NULL 
logic-and-expr@0_opt_2@0_decl_1:
'&&' 'and' 
fcall@0_opt_2:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
basic-expr:
'(' CHAR '--' 'gcnew' '*' 'true' NUM 'null' 'new' 'false' 'global' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
lambda-body@0_rep_2@0_rep_2:
ENDL NULL 
capture-list@0_opt_1:
'=' NULL 
element@0_rep_2:
'(' NULL '[' 
lambda-expr@0_opt_2:
'=' ID NULL 
try-stmt@0_rep_4:
NULL 'catch' 
switch-stmts:
NULL ENDL 'case' 'default' 
var-bind@0_rep_3:
NULL ',' 
var-list:
ID 
for-body@0_decl_1:
'do' ENDL 
switch-case:
'case' 
stmts@0_rep_1:
CHAR '(' 'gcnew' 'return' '*' 'using' 'false' NUM 'null' 'foreach' 'for' NULL 'local' 'not' 'while' STR '{' 'package' '-' 'function' 'block' 'import' PREP '[' '--' 'switch' 'true' 'global' 'namespace' 'new' '++' 'break' 'link' 'continue' 'typeid' 'struct' 'try' '!' ID '&' 'var' 'class' 'loop' 'throw' 'constant' 'if' 
mul-expr@0_opt_2:
'/' NULL '^' '%' '*' 
var-stmt:
'constant' 'link' 'var' 
object:
'local' '(' STR CHAR '{' ID 'global' 
using-stmt:
'using' 
decl-stmts@0_rep_1@0_rep_2:
ENDL NULL 
element@0_decl_1:
ID '(' 
logic-and-expr@0_opt_2:
NULL '&&' 'and' 
while-stmt:
'while' 
prim-expr:
'local' '(' STR CHAR '{' ID 'global' 'true' 'false' NUM 'null' 
add-expr:
CHAR '(' '--' 'gcnew' 'true' '*' NUM 'null' 'new' 'false' 'global' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
throw-stmt@0_opt_2:
CHAR '(' '[' 'gcnew' '--' 'true' 'global' '*' 'false' NUM 'null' 'new' '++' NULL 'local' 'typeid' 'not' STR '!' '{' ID '&' '-' 
array:
'{' 
using-list@0_opt_2:
NULL ',' 
argument-list@1_opt_3:
NULL ':' 
logic-or-expr@0_opt_2@0_decl_1:
'||' 'or' 
ignore:
NULL ENDL 
switch-default:
'default' 
var-stmt@0_decl_1:
'constant' 'var' 'link' 
using-list:
ID 
expr@0_opt_2:
NULL ',' 
relat-expr@0_opt_2@0_decl_1:
'<' '>=' '<=' '>' 
decl-stmts:
PREP 'struct' 'var' 'using' NULL 'class' 'namespace' 'constant' 'function' 'link' 
basic-expr@1_opt_2:
'=' '%=' '-=' '+=' '^=' NULL ':=' '*=' '/=' 
import-list@0_opt_3:
NULL ',' 
throw-stmt:
'throw' 
equal-expr@0_opt_2:
'not' 'is' '!=' NULL '==' 
argument-list@1_opt_1:
'=' NULL 
object@0_opt_2:
NULL '[' 
function-stmt:
'function' 
logic-or-expr:
CHAR '(' '--' 'gcnew' 'true' '*' NUM 'null' 'new' 'false' 'global' '++' 'local' 'not' 'typeid' STR '!' ID '&' '{' '-' 
package-stmt:
'package' 
until-stmt:
'until' 
var-def:
'(' ID 



########
DFA TERM
########
%start%  :  %MARK%  begin  
 index is: 0, source_index: 0, before: %NULL%, after: begin
%start%  :  begin  %MARK%  
 index is: 1, source_index: 0, before: begin, after: %NULL%
begin  :  %MARK%  stmts  
 index is: 2, source_index: 1, before: %NULL%, after: stmts
begin  :  stmts  %MARK%  
 index is: 3, source_index: 1, before: stmts, after: %NULL%
ignore  :  %MARK%  ignore@0_rep_1  
 index is: 4, source_index: 2, before: %NULL%, after: ignore@0_rep_1
ignore  :  ignore@0_rep_1  %MARK%  
 index is: 5, source_index: 2, before: ignore@0_rep_1, after: %NULL%
ignore@0_rep_1  :  %MARK%  
 index is: 6, source_index: 3, before: %NULL%, after: %NULL%
ignore@0_rep_1  :  %MARK%  ENDL  ignore@0_rep_1  
 index is: 7, source_index: 4, before: %NULL%, after: ENDL
ignore@0_rep_1  :  ENDL  %MARK%  ignore@0_rep_1  
 index is: 8, source_index: 4, before: ENDL, after: ignore@0_rep_1
ignore@0_rep_1  :  ENDL  ignore@0_rep_1  %MARK%  
 index is: 9, source_index: 4, before: ignore@0_rep_1, after: %NULL%
endline  :  %MARK%  ';'  
 index is: 10, source_index: 5, before: %NULL%, after: ';'
endline  :  ';'  %MARK%  
 index is: 11, source_index: 5, before: ';', after: %NULL%
endline  :  %MARK%  ENDL  
 index is: 12, source_index: 6, before: %NULL%, after: ENDL
endline  :  ENDL  %MARK%  
 index is: 13, source_index: 6, before: ENDL, after: %NULL%
stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, source_index: 7, before: %NULL%, after: stmts@0_rep_1
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, source_index: 7, before: stmts@0_rep_1, after: %NULL%
stmts@0_rep_1  :  %MARK%  
 index is: 16, source_index: 8, before: %NULL%, after: %NULL%
stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, source_index: 9, before: %NULL%, after: statement
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, source_index: 9, before: statement, after: stmts@0_rep_1@0_rep_2
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, source_index: 9, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, source_index: 9, before: stmts@0_rep_1, after: %NULL%
stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, source_index: 10, before: %NULL%, after: %NULL%
stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, source_index: 11, before: %NULL%, after: ENDL
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, source_index: 11, before: ENDL, after: stmts@0_rep_1@0_rep_2
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, source_index: 11, before: stmts@0_rep_1@0_rep_2, after: %NULL%
decl-stmts  :  %MARK%  decl-stmts@0_rep_1  
 index is: 25, source_index: 12, before: %NULL%, after: decl-stmts@0_rep_1
decl-stmts  :  decl-stmts@0_rep_1  %MARK%  
 index is: 26, source_index: 12, before: decl-stmts@0_rep_1, after: %NULL%
decl-stmts@0_rep_1  :  %MARK%  
 index is: 27, source_index: 13, before: %NULL%, after: %NULL%
decl-stmts@0_rep_1  :  %MARK%  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 28, source_index: 14, before: %NULL%, after: declaration
decl-stmts@0_rep_1  :  declaration  %MARK%  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 29, source_index: 14, before: declaration, after: decl-stmts@0_rep_1@0_rep_2
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  %MARK%  decl-stmts@0_rep_1  
 index is: 30, source_index: 14, before: decl-stmts@0_rep_1@0_rep_2, after: decl-stmts@0_rep_1
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  %MARK%  
 index is: 31, source_index: 14, before: decl-stmts@0_rep_1, after: %NULL%
decl-stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, source_index: 15, before: %NULL%, after: %NULL%
decl-stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl-stmts@0_rep_1@0_rep_2  
 index is: 33, source_index: 16, before: %NULL%, after: ENDL
decl-stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl-stmts@0_rep_1@0_rep_2  
 index is: 34, source_index: 16, before: ENDL, after: decl-stmts@0_rep_1@0_rep_2
decl-stmts@0_rep_1@0_rep_2  :  ENDL  decl-stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, source_index: 16, before: decl-stmts@0_rep_1@0_rep_2, after: %NULL%
endblock  :  %MARK%  catch-stmt  
 index is: 36, source_index: 17, before: %NULL%, after: catch-stmt
endblock  :  catch-stmt  %MARK%  
 index is: 37, source_index: 17, before: catch-stmt, after: %NULL%
endblock  :  %MARK%  until-stmt  
 index is: 38, source_index: 18, before: %NULL%, after: until-stmt
endblock  :  until-stmt  %MARK%  
 index is: 39, source_index: 18, before: until-stmt, after: %NULL%
endblock  :  %MARK%  else-stmt  
 index is: 40, source_index: 19, before: %NULL%, after: else-stmt
endblock  :  else-stmt  %MARK%  
 index is: 41, source_index: 19, before: else-stmt, after: %NULL%
endblock  :  %MARK%  end-stmt  
 index is: 42, source_index: 20, before: %NULL%, after: end-stmt
endblock  :  end-stmt  %MARK%  
 index is: 43, source_index: 20, before: end-stmt, after: %NULL%
statement  :  %MARK%  expr-stmt  
 index is: 44, source_index: 21, before: %NULL%, after: expr-stmt
statement  :  expr-stmt  %MARK%  
 index is: 45, source_index: 21, before: expr-stmt, after: %NULL%
statement  :  %MARK%  class-stmt  
 index is: 46, source_index: 22, before: %NULL%, after: class-stmt
statement  :  class-stmt  %MARK%  
 index is: 47, source_index: 22, before: class-stmt, after: %NULL%
statement  :  %MARK%  throw-stmt  
 index is: 48, source_index: 23, before: %NULL%, after: throw-stmt
statement  :  throw-stmt  %MARK%  
 index is: 49, source_index: 23, before: throw-stmt, after: %NULL%
statement  :  %MARK%  try-stmt  
 index is: 50, source_index: 24, before: %NULL%, after: try-stmt
statement  :  try-stmt  %MARK%  
 index is: 51, source_index: 24, before: try-stmt, after: %NULL%
statement  :  %MARK%  return-stmt  
 index is: 52, source_index: 25, before: %NULL%, after: return-stmt
statement  :  return-stmt  %MARK%  
 index is: 53, source_index: 25, before: return-stmt, after: %NULL%
statement  :  %MARK%  function-stmt  
 index is: 54, source_index: 26, before: %NULL%, after: function-stmt
statement  :  function-stmt  %MARK%  
 index is: 55, source_index: 26, before: function-stmt, after: %NULL%
statement  :  %MARK%  control-stmt  
 index is: 56, source_index: 27, before: %NULL%, after: control-stmt
statement  :  control-stmt  %MARK%  
 index is: 57, source_index: 27, before: control-stmt, after: %NULL%
statement  :  %MARK%  foreach-stmt  
 index is: 58, source_index: 28, before: %NULL%, after: foreach-stmt
statement  :  foreach-stmt  %MARK%  
 index is: 59, source_index: 28, before: foreach-stmt, after: %NULL%
statement  :  %MARK%  for-stmt  
 index is: 60, source_index: 29, before: %NULL%, after: for-stmt
statement  :  for-stmt  %MARK%  
 index is: 61, source_index: 29, before: for-stmt, after: %NULL%
statement  :  %MARK%  loop-stmt  
 index is: 62, source_index: 30, before: %NULL%, after: loop-stmt
statement  :  loop-stmt  %MARK%  
 index is: 63, source_index: 30, before: loop-stmt, after: %NULL%
statement  :  %MARK%  while-stmt  
 index is: 64, source_index: 31, before: %NULL%, after: while-stmt
statement  :  while-stmt  %MARK%  
 index is: 65, source_index: 31, before: while-stmt, after: %NULL%
statement  :  %MARK%  switch-stmt  
 index is: 66, source_index: 32, before: %NULL%, after: switch-stmt
statement  :  switch-stmt  %MARK%  
 index is: 67, source_index: 32, before: switch-stmt, after: %NULL%
statement  :  %MARK%  if-stmt  
 index is: 68, source_index: 33, before: %NULL%, after: if-stmt
statement  :  if-stmt  %MARK%  
 index is: 69, source_index: 33, before: if-stmt, after: %NULL%
statement  :  %MARK%  using-stmt  
 index is: 70, source_index: 34, before: %NULL%, after: using-stmt
statement  :  using-stmt  %MARK%  
 index is: 71, source_index: 34, before: using-stmt, after: %NULL%
statement  :  %MARK%  namespace-stmt  
 index is: 72, source_index: 35, before: %NULL%, after: namespace-stmt
statement  :  namespace-stmt  %MARK%  
 index is: 73, source_index: 35, before: namespace-stmt, after: %NULL%
statement  :  %MARK%  block-stmt  
 index is: 74, source_index: 36, before: %NULL%, after: block-stmt
statement  :  block-stmt  %MARK%  
 index is: 75, source_index: 36, before: block-stmt, after: %NULL%
statement  :  %MARK%  var-stmt  
 index is: 76, source_index: 37, before: %NULL%, after: var-stmt
statement  :  var-stmt  %MARK%  
 index is: 77, source_index: 37, before: var-stmt, after: %NULL%
statement  :  %MARK%  import-stmt  
 index is: 78, source_index: 38, before: %NULL%, after: import-stmt
statement  :  import-stmt  %MARK%  
 index is: 79, source_index: 38, before: import-stmt, after: %NULL%
statement  :  %MARK%  package-stmt  
 index is: 80, source_index: 39, before: %NULL%, after: package-stmt
statement  :  package-stmt  %MARK%  
 index is: 81, source_index: 39, before: package-stmt, after: %NULL%
statement  :  %MARK%  prep-stmt  
 index is: 82, source_index: 40, before: %NULL%, after: prep-stmt
statement  :  prep-stmt  %MARK%  
 index is: 83, source_index: 40, before: prep-stmt, after: %NULL%
declaration  :  %MARK%  class-stmt  
 index is: 84, source_index: 41, before: %NULL%, after: class-stmt
declaration  :  class-stmt  %MARK%  
 index is: 85, source_index: 41, before: class-stmt, after: %NULL%
declaration  :  %MARK%  function-stmt  
 index is: 86, source_index: 42, before: %NULL%, after: function-stmt
declaration  :  function-stmt  %MARK%  
 index is: 87, source_index: 42, before: function-stmt, after: %NULL%
declaration  :  %MARK%  using-stmt  
 index is: 88, source_index: 43, before: %NULL%, after: using-stmt
declaration  :  using-stmt  %MARK%  
 index is: 89, source_index: 43, before: using-stmt, after: %NULL%
declaration  :  %MARK%  var-stmt  
 index is: 90, source_index: 44, before: %NULL%, after: var-stmt
declaration  :  var-stmt  %MARK%  
 index is: 91, source_index: 44, before: var-stmt, after: %NULL%
declaration  :  %MARK%  namespace-stmt  
 index is: 92, source_index: 45, before: %NULL%, after: namespace-stmt
declaration  :  namespace-stmt  %MARK%  
 index is: 93, source_index: 45, before: namespace-stmt, after: %NULL%
declaration  :  %MARK%  prep-stmt  
 index is: 94, source_index: 46, before: %NULL%, after: prep-stmt
declaration  :  prep-stmt  %MARK%  
 index is: 95, source_index: 46, before: prep-stmt, after: %NULL%
prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, source_index: 47, before: %NULL%, after: PREP
prep-stmt  :  PREP  %MARK%  ENDL  
 index is: 97, source_index: 47, before: PREP, after: ENDL
prep-stmt  :  PREP  ENDL  %MARK%  
 index is: 98, source_index: 47, before: ENDL, after: %NULL%
package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, source_index: 48, before: %NULL%, after: 'package'
package-stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, source_index: 48, before: 'package', after: ID
package-stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, source_index: 48, before: ID, after: endline
package-stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, source_index: 48, before: endline, after: %NULL%
import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, source_index: 49, before: %NULL%, after: 'import'
import-stmt  :  'import'  %MARK%  import-list  endline  
 index is: 104, source_index: 49, before: 'import', after: import-list
import-stmt  :  'import'  import-list  %MARK%  endline  
 index is: 105, source_index: 49, before: import-list, after: endline
import-stmt  :  'import'  import-list  endline  %MARK%  
 index is: 106, source_index: 49, before: endline, after: %NULL%
module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, source_index: 50, before: %NULL%, after: ID
module-list  :  ID  %MARK%  module-list@0_opt_2  
 index is: 108, source_index: 50, before: ID, after: module-list@0_opt_2
module-list  :  ID  module-list@0_opt_2  %MARK%  
 index is: 109, source_index: 50, before: module-list@0_opt_2, after: %NULL%
module-list@0_opt_2  :  %MARK%  
 index is: 110, source_index: 51, before: %NULL%, after: %NULL%
module-list@0_opt_2  :  %MARK%  '.'  module-list@0_opt_2@0_decl_2  
 index is: 111, source_index: 52, before: %NULL%, after: '.'
module-list@0_opt_2  :  '.'  %MARK%  module-list@0_opt_2@0_decl_2  
 index is: 112, source_index: 52, before: '.', after: module-list@0_opt_2@0_decl_2
module-list@0_opt_2  :  '.'  module-list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, source_index: 52, before: module-list@0_opt_2@0_decl_2, after: %NULL%
module-list@0_opt_2@0_decl_2  :  %MARK%  module-list  
 index is: 114, source_index: 53, before: %NULL%, after: module-list
module-list@0_opt_2@0_decl_2  :  module-list  %MARK%  
 index is: 115, source_index: 53, before: module-list, after: %NULL%
module-list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, source_index: 54, before: %NULL%, after: '*'
module-list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, source_index: 54, before: '*', after: %NULL%
import-list  :  %MARK%  module-list  import-list@0_opt_2  import-list@0_opt_3  
 index is: 118, source_index: 55, before: %NULL%, after: module-list
import-list  :  module-list  %MARK%  import-list@0_opt_2  import-list@0_opt_3  
 index is: 119, source_index: 55, before: module-list, after: import-list@0_opt_2
import-list  :  module-list  import-list@0_opt_2  %MARK%  import-list@0_opt_3  
 index is: 120, source_index: 55, before: import-list@0_opt_2, after: import-list@0_opt_3
import-list  :  module-list  import-list@0_opt_2  import-list@0_opt_3  %MARK%  
 index is: 121, source_index: 55, before: import-list@0_opt_3, after: %NULL%
import-list@0_opt_3  :  %MARK%  
 index is: 122, source_index: 56, before: %NULL%, after: %NULL%
import-list@0_opt_3  :  %MARK%  ','  import-list  
 index is: 123, source_index: 57, before: %NULL%, after: ','
import-list@0_opt_3  :  ','  %MARK%  import-list  
 index is: 124, source_index: 57, before: ',', after: import-list
import-list@0_opt_3  :  ','  import-list  %MARK%  
 index is: 125, source_index: 57, before: import-list, after: %NULL%
import-list@0_opt_2  :  %MARK%  
 index is: 126, source_index: 58, before: %NULL%, after: %NULL%
import-list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, source_index: 59, before: %NULL%, after: 'as'
import-list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, source_index: 59, before: 'as', after: ID
import-list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, source_index: 59, before: ID, after: %NULL%
var-def  :  %MARK%  var-list  
 index is: 130, source_index: 60, before: %NULL%, after: var-list
var-def  :  var-list  %MARK%  
 index is: 131, source_index: 60, before: var-list, after: %NULL%
var-def  :  %MARK%  var-bind  '='  basic-expr  
 index is: 132, source_index: 61, before: %NULL%, after: var-bind
var-def  :  var-bind  %MARK%  '='  basic-expr  
 index is: 133, source_index: 61, before: var-bind, after: '='
var-def  :  var-bind  '='  %MARK%  basic-expr  
 index is: 134, source_index: 61, before: '=', after: basic-expr
var-def  :  var-bind  '='  basic-expr  %MARK%  
 index is: 135, source_index: 61, before: basic-expr, after: %NULL%
var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, source_index: 62, before: %NULL%, after: var-stmt@0_decl_1
var-stmt  :  var-stmt@0_decl_1  %MARK%  var-def  endline  
 index is: 137, source_index: 62, before: var-stmt@0_decl_1, after: var-def
var-stmt  :  var-stmt@0_decl_1  var-def  %MARK%  endline  
 index is: 138, source_index: 62, before: var-def, after: endline
var-stmt  :  var-stmt@0_decl_1  var-def  endline  %MARK%  
 index is: 139, source_index: 62, before: endline, after: %NULL%
var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, source_index: 63, before: %NULL%, after: 'constant'
var-stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, source_index: 63, before: 'constant', after: %NULL%
var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, source_index: 64, before: %NULL%, after: 'link'
var-stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, source_index: 64, before: 'link', after: %NULL%
var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, source_index: 65, before: %NULL%, after: 'var'
var-stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, source_index: 65, before: 'var', after: %NULL%
var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, source_index: 66, before: %NULL%, after: '('
var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, source_index: 66, before: '(', after: var-bind-list
var-bind  :  '('  var-bind-list  %MARK%  var-bind@0_rep_3  ')'  
 index is: 148, source_index: 66, before: var-bind-list, after: var-bind@0_rep_3
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  %MARK%  ')'  
 index is: 149, source_index: 66, before: var-bind@0_rep_3, after: ')'
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  ')'  %MARK%  
 index is: 150, source_index: 66, before: ')', after: %NULL%
var-bind@0_rep_3  :  %MARK%  
 index is: 151, source_index: 67, before: %NULL%, after: %NULL%
var-bind@0_rep_3  :  %MARK%  ','  var-bind-list  var-bind@0_rep_3  
 index is: 152, source_index: 68, before: %NULL%, after: ','
var-bind@0_rep_3  :  ','  %MARK%  var-bind-list  var-bind@0_rep_3  
 index is: 153, source_index: 68, before: ',', after: var-bind-list
var-bind@0_rep_3  :  ','  var-bind-list  %MARK%  var-bind@0_rep_3  
 index is: 154, source_index: 68, before: var-bind-list, after: var-bind@0_rep_3
var-bind@0_rep_3  :  ','  var-bind-list  var-bind@0_rep_3  %MARK%  
 index is: 155, source_index: 68, before: var-bind@0_rep_3, after: %NULL%
var-bind-list  :  %MARK%  var-bind  
 index is: 156, source_index: 69, before: %NULL%, after: var-bind
var-bind-list  :  var-bind  %MARK%  
 index is: 157, source_index: 69, before: var-bind, after: %NULL%
var-bind-list  :  %MARK%  '...'  
 index is: 158, source_index: 70, before: %NULL%, after: '...'
var-bind-list  :  '...'  %MARK%  
 index is: 159, source_index: 70, before: '...', after: %NULL%
var-bind-list  :  %MARK%  ID  
 index is: 160, source_index: 71, before: %NULL%, after: ID
var-bind-list  :  ID  %MARK%  
 index is: 161, source_index: 71, before: ID, after: %NULL%
var-list  :  %MARK%  ID  '='  single-expr  var-list@0_opt_4  
 index is: 162, source_index: 72, before: %NULL%, after: ID
var-list  :  ID  %MARK%  '='  single-expr  var-list@0_opt_4  
 index is: 163, source_index: 72, before: ID, after: '='
var-list  :  ID  '='  %MARK%  single-expr  var-list@0_opt_4  
 index is: 164, source_index: 72, before: '=', after: single-expr
var-list  :  ID  '='  single-expr  %MARK%  var-list@0_opt_4  
 index is: 165, source_index: 72, before: single-expr, after: var-list@0_opt_4
var-list  :  ID  '='  single-expr  var-list@0_opt_4  %MARK%  
 index is: 166, source_index: 72, before: var-list@0_opt_4, after: %NULL%
var-list@0_opt_4  :  %MARK%  
 index is: 167, source_index: 73, before: %NULL%, after: %NULL%
var-list@0_opt_4  :  %MARK%  ','  var-list  
 index is: 168, source_index: 74, before: %NULL%, after: ','
var-list@0_opt_4  :  ','  %MARK%  var-list  
 index is: 169, source_index: 74, before: ',', after: var-list
var-list@0_opt_4  :  ','  var-list  %MARK%  
 index is: 170, source_index: 74, before: var-list, after: %NULL%
block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, source_index: 75, before: %NULL%, after: 'block'
block-stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, source_index: 75, before: 'block', after: ENDL
block-stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, source_index: 75, before: ENDL, after: stmts
block-stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, source_index: 75, before: stmts, after: 'end'
block-stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, source_index: 75, before: 'end', after: ENDL
block-stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, source_index: 75, before: ENDL, after: %NULL%
namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, source_index: 76, before: %NULL%, after: 'namespace'
namespace-stmt  :  'namespace'  %MARK%  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 178, source_index: 76, before: 'namespace', after: ID
namespace-stmt  :  'namespace'  ID  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 179, source_index: 76, before: ID, after: ENDL
namespace-stmt  :  'namespace'  ID  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 180, source_index: 76, before: ENDL, after: decl-stmts
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 181, source_index: 76, before: decl-stmts, after: 'end'
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 182, source_index: 76, before: 'end', after: ENDL
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 183, source_index: 76, before: ENDL, after: %NULL%
using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, source_index: 77, before: %NULL%, after: 'using'
using-stmt  :  'using'  %MARK%  using-list  endline  
 index is: 185, source_index: 77, before: 'using', after: using-list
using-stmt  :  'using'  using-list  %MARK%  endline  
 index is: 186, source_index: 77, before: using-list, after: endline
using-stmt  :  'using'  using-list  endline  %MARK%  
 index is: 187, source_index: 77, before: endline, after: %NULL%
using-list  :  %MARK%  module-list  using-list@0_opt_2  
 index is: 188, source_index: 78, before: %NULL%, after: module-list
using-list  :  module-list  %MARK%  using-list@0_opt_2  
 index is: 189, source_index: 78, before: module-list, after: using-list@0_opt_2
using-list  :  module-list  using-list@0_opt_2  %MARK%  
 index is: 190, source_index: 78, before: using-list@0_opt_2, after: %NULL%
using-list@0_opt_2  :  %MARK%  
 index is: 191, source_index: 79, before: %NULL%, after: %NULL%
using-list@0_opt_2  :  %MARK%  ','  using-list  
 index is: 192, source_index: 80, before: %NULL%, after: ','
using-list@0_opt_2  :  ','  %MARK%  using-list  
 index is: 193, source_index: 80, before: ',', after: using-list
using-list@0_opt_2  :  ','  using-list  %MARK%  
 index is: 194, source_index: 80, before: using-list, after: %NULL%
if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, source_index: 81, before: %NULL%, after: 'if'
if-stmt  :  'if'  %MARK%  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 196, source_index: 81, before: 'if', after: basic-expr
if-stmt  :  'if'  basic-expr  %MARK%  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 197, source_index: 81, before: basic-expr, after: ENDL
if-stmt  :  'if'  basic-expr  ENDL  %MARK%  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 198, source_index: 81, before: ENDL, after: stmts
if-stmt  :  'if'  basic-expr  ENDL  stmts  %MARK%  if-stmt@0_rep_5  'end'  ENDL  
 index is: 199, source_index: 81, before: stmts, after: if-stmt@0_rep_5
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  %MARK%  'end'  ENDL  
 index is: 200, source_index: 81, before: if-stmt@0_rep_5, after: 'end'
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  %MARK%  ENDL  
 index is: 201, source_index: 81, before: 'end', after: ENDL
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  %MARK%  
 index is: 202, source_index: 81, before: ENDL, after: %NULL%
if-stmt@0_rep_5  :  %MARK%  
 index is: 203, source_index: 82, before: %NULL%, after: %NULL%
if-stmt@0_rep_5  :  %MARK%  else-stmt  stmts  if-stmt@0_rep_5  
 index is: 204, source_index: 83, before: %NULL%, after: else-stmt
if-stmt@0_rep_5  :  else-stmt  %MARK%  stmts  if-stmt@0_rep_5  
 index is: 205, source_index: 83, before: else-stmt, after: stmts
if-stmt@0_rep_5  :  else-stmt  stmts  %MARK%  if-stmt@0_rep_5  
 index is: 206, source_index: 83, before: stmts, after: if-stmt@0_rep_5
if-stmt@0_rep_5  :  else-stmt  stmts  if-stmt@0_rep_5  %MARK%  
 index is: 207, source_index: 83, before: if-stmt@0_rep_5, after: %NULL%
else-stmt  :  %MARK%  'else'  else-stmt@0_opt_2  ENDL  
 index is: 208, source_index: 84, before: %NULL%, after: 'else'
else-stmt  :  'else'  %MARK%  else-stmt@0_opt_2  ENDL  
 index is: 209, source_index: 84, before: 'else', after: else-stmt@0_opt_2
else-stmt  :  'else'  else-stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, source_index: 84, before: else-stmt@0_opt_2, after: ENDL
else-stmt  :  'else'  else-stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, source_index: 84, before: ENDL, after: %NULL%
else-stmt@0_opt_2  :  %MARK%  
 index is: 212, source_index: 85, before: %NULL%, after: %NULL%
else-stmt@0_opt_2  :  %MARK%  'if'  basic-expr  
 index is: 213, source_index: 86, before: %NULL%, after: 'if'
else-stmt@0_opt_2  :  'if'  %MARK%  basic-expr  
 index is: 214, source_index: 86, before: 'if', after: basic-expr
else-stmt@0_opt_2  :  'if'  basic-expr  %MARK%  
 index is: 215, source_index: 86, before: basic-expr, after: %NULL%
switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, source_index: 87, before: %NULL%, after: 'switch'
switch-stmt  :  'switch'  %MARK%  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 217, source_index: 87, before: 'switch', after: basic-expr
switch-stmt  :  'switch'  basic-expr  %MARK%  ENDL  switch-stmts  'end'  ENDL  
 index is: 218, source_index: 87, before: basic-expr, after: ENDL
switch-stmt  :  'switch'  basic-expr  ENDL  %MARK%  switch-stmts  'end'  ENDL  
 index is: 219, source_index: 87, before: ENDL, after: switch-stmts
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  %MARK%  'end'  ENDL  
 index is: 220, source_index: 87, before: switch-stmts, after: 'end'
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  %MARK%  ENDL  
 index is: 221, source_index: 87, before: 'end', after: ENDL
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  %MARK%  
 index is: 222, source_index: 87, before: ENDL, after: %NULL%
switch-stmts  :  %MARK%  switch-stmts@0_rep_1  switch-stmts@0_rep_2  
 index is: 223, source_index: 88, before: %NULL%, after: switch-stmts@0_rep_1
switch-stmts  :  switch-stmts@0_rep_1  %MARK%  switch-stmts@0_rep_2  
 index is: 224, source_index: 88, before: switch-stmts@0_rep_1, after: switch-stmts@0_rep_2
switch-stmts  :  switch-stmts@0_rep_1  switch-stmts@0_rep_2  %MARK%  
 index is: 225, source_index: 88, before: switch-stmts@0_rep_2, after: %NULL%
switch-stmts@0_rep_2  :  %MARK%  
 index is: 226, source_index: 89, before: %NULL%, after: %NULL%
switch-stmts@0_rep_2  :  %MARK%  ENDL  switch-stmts@0_rep_2  
 index is: 227, source_index: 90, before: %NULL%, after: ENDL
switch-stmts@0_rep_2  :  ENDL  %MARK%  switch-stmts@0_rep_2  
 index is: 228, source_index: 90, before: ENDL, after: switch-stmts@0_rep_2
switch-stmts@0_rep_2  :  ENDL  switch-stmts@0_rep_2  %MARK%  
 index is: 229, source_index: 90, before: switch-stmts@0_rep_2, after: %NULL%
switch-stmts@0_rep_1  :  %MARK%  
 index is: 230, source_index: 91, before: %NULL%, after: %NULL%
switch-stmts@0_rep_1  :  %MARK%  switch-default  switch-stmts@0_rep_1  
 index is: 231, source_index: 92, before: %NULL%, after: switch-default
switch-stmts@0_rep_1  :  switch-default  %MARK%  switch-stmts@0_rep_1  
 index is: 232, source_index: 92, before: switch-default, after: switch-stmts@0_rep_1
switch-stmts@0_rep_1  :  switch-default  switch-stmts@0_rep_1  %MARK%  
 index is: 233, source_index: 92, before: switch-stmts@0_rep_1, after: %NULL%
switch-stmts@0_rep_1  :  %MARK%  switch-case  switch-stmts@0_rep_1  
 index is: 234, source_index: 93, before: %NULL%, after: switch-case
switch-stmts@0_rep_1  :  switch-case  %MARK%  switch-stmts@0_rep_1  
 index is: 235, source_index: 93, before: switch-case, after: switch-stmts@0_rep_1
switch-stmts@0_rep_1  :  switch-case  switch-stmts@0_rep_1  %MARK%  
 index is: 236, source_index: 93, before: switch-stmts@0_rep_1, after: %NULL%
switch-case  :  %MARK%  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 237, source_index: 94, before: %NULL%, after: 'case'
switch-case  :  'case'  %MARK%  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 238, source_index: 94, before: 'case', after: logic-or-expr
switch-case  :  'case'  logic-or-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, source_index: 94, before: logic-or-expr, after: ENDL
switch-case  :  'case'  logic-or-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, source_index: 94, before: ENDL, after: stmts
switch-case  :  'case'  logic-or-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, source_index: 94, before: stmts, after: 'end'
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, source_index: 94, before: 'end', after: ENDL
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, source_index: 94, before: ENDL, after: %NULL%
switch-default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, source_index: 95, before: %NULL%, after: 'default'
switch-default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, source_index: 95, before: 'default', after: ENDL
switch-default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, source_index: 95, before: ENDL, after: stmts
switch-default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, source_index: 95, before: stmts, after: 'end'
switch-default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, source_index: 95, before: 'end', after: ENDL
switch-default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, source_index: 95, before: ENDL, after: %NULL%
while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, source_index: 96, before: %NULL%, after: 'while'
while-stmt  :  'while'  %MARK%  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 251, source_index: 96, before: 'while', after: basic-expr
while-stmt  :  'while'  basic-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, source_index: 96, before: basic-expr, after: ENDL
while-stmt  :  'while'  basic-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, source_index: 96, before: ENDL, after: stmts
while-stmt  :  'while'  basic-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, source_index: 96, before: stmts, after: 'end'
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, source_index: 96, before: 'end', after: ENDL
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, source_index: 96, before: ENDL, after: %NULL%
loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, source_index: 97, before: %NULL%, after: 'loop'
loop-stmt  :  'loop'  %MARK%  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 258, source_index: 97, before: 'loop', after: ENDL
loop-stmt  :  'loop'  ENDL  %MARK%  stmts  loop-stmt@0_decl_4  
 index is: 259, source_index: 97, before: ENDL, after: stmts
loop-stmt  :  'loop'  ENDL  stmts  %MARK%  loop-stmt@0_decl_4  
 index is: 260, source_index: 97, before: stmts, after: loop-stmt@0_decl_4
loop-stmt  :  'loop'  ENDL  stmts  loop-stmt@0_decl_4  %MARK%  
 index is: 261, source_index: 97, before: loop-stmt@0_decl_4, after: %NULL%
loop-stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, source_index: 98, before: %NULL%, after: ENDL
loop-stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, source_index: 98, before: ENDL, after: %NULL%
loop-stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, source_index: 99, before: %NULL%, after: 'end'
loop-stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, source_index: 99, before: 'end', after: %NULL%
loop-stmt@0_decl_4  :  %MARK%  until-stmt  
 index is: 266, source_index: 100, before: %NULL%, after: until-stmt
loop-stmt@0_decl_4  :  until-stmt  %MARK%  
 index is: 267, source_index: 100, before: until-stmt, after: %NULL%
until-stmt  :  %MARK%  'until'  basic-expr  ENDL  
 index is: 268, source_index: 101, before: %NULL%, after: 'until'
until-stmt  :  'until'  %MARK%  basic-expr  ENDL  
 index is: 269, source_index: 101, before: 'until', after: basic-expr
until-stmt  :  'until'  basic-expr  %MARK%  ENDL  
 index is: 270, source_index: 101, before: basic-expr, after: ENDL
until-stmt  :  'until'  basic-expr  ENDL  %MARK%  
 index is: 271, source_index: 101, before: ENDL, after: %NULL%
for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, source_index: 102, before: %NULL%, after: 'for'
for-stmt  :  'for'  %MARK%  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 273, source_index: 102, before: 'for', after: for-stmt@0_opt_2
for-stmt  :  'for'  for-stmt@0_opt_2  %MARK%  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 274, source_index: 102, before: for-stmt@0_opt_2, after: for-stmt@0_decl_3
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  %MARK%  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 275, source_index: 102, before: for-stmt@0_decl_3, after: for-stmt@0_opt_4
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  %MARK%  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 276, source_index: 102, before: for-stmt@0_opt_4, after: for-stmt@0_decl_5
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  %MARK%  for-stmt@0_opt_6  for-body  
 index is: 277, source_index: 102, before: for-stmt@0_decl_5, after: for-stmt@0_opt_6
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  %MARK%  for-body  
 index is: 278, source_index: 102, before: for-stmt@0_opt_6, after: for-body
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  %MARK%  
 index is: 279, source_index: 102, before: for-body, after: %NULL%
for-stmt@0_opt_6  :  %MARK%  
 index is: 280, source_index: 103, before: %NULL%, after: %NULL%
for-stmt@0_opt_6  :  %MARK%  basic-expr  
 index is: 281, source_index: 104, before: %NULL%, after: basic-expr
for-stmt@0_opt_6  :  basic-expr  %MARK%  
 index is: 282, source_index: 104, before: basic-expr, after: %NULL%
for-stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, source_index: 105, before: %NULL%, after: ','
for-stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, source_index: 105, before: ',', after: %NULL%
for-stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, source_index: 106, before: %NULL%, after: ';'
for-stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, source_index: 106, before: ';', after: %NULL%
for-stmt@0_opt_4  :  %MARK%  
 index is: 287, source_index: 107, before: %NULL%, after: %NULL%
for-stmt@0_opt_4  :  %MARK%  basic-expr  
 index is: 288, source_index: 108, before: %NULL%, after: basic-expr
for-stmt@0_opt_4  :  basic-expr  %MARK%  
 index is: 289, source_index: 108, before: basic-expr, after: %NULL%
for-stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, source_index: 109, before: %NULL%, after: ','
for-stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, source_index: 109, before: ',', after: %NULL%
for-stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, source_index: 110, before: %NULL%, after: ';'
for-stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, source_index: 110, before: ';', after: %NULL%
for-stmt@0_opt_2  :  %MARK%  
 index is: 294, source_index: 111, before: %NULL%, after: %NULL%
for-stmt@0_opt_2  :  %MARK%  var-def  
 index is: 295, source_index: 112, before: %NULL%, after: var-def
for-stmt@0_opt_2  :  var-def  %MARK%  
 index is: 296, source_index: 112, before: var-def, after: %NULL%
foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, source_index: 113, before: %NULL%, after: 'foreach'
foreach-stmt  :  'foreach'  %MARK%  ID  'in'  basic-expr  for-body  
 index is: 298, source_index: 113, before: 'foreach', after: ID
foreach-stmt  :  'foreach'  ID  %MARK%  'in'  basic-expr  for-body  
 index is: 299, source_index: 113, before: ID, after: 'in'
foreach-stmt  :  'foreach'  ID  'in'  %MARK%  basic-expr  for-body  
 index is: 300, source_index: 113, before: 'in', after: basic-expr
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  %MARK%  for-body  
 index is: 301, source_index: 113, before: basic-expr, after: for-body
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  for-body  %MARK%  
 index is: 302, source_index: 113, before: for-body, after: %NULL%
for-body  :  %MARK%  for-body@0_decl_1  
 index is: 303, source_index: 114, before: %NULL%, after: for-body@0_decl_1
for-body  :  for-body@0_decl_1  %MARK%  
 index is: 304, source_index: 114, before: for-body@0_decl_1, after: %NULL%
for-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, source_index: 115, before: %NULL%, after: ENDL
for-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, source_index: 115, before: ENDL, after: stmts
for-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, source_index: 115, before: stmts, after: 'end'
for-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, source_index: 115, before: 'end', after: ENDL
for-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, source_index: 115, before: ENDL, after: %NULL%
for-body@0_decl_1  :  %MARK%  'do'  basic-expr  endline  
 index is: 310, source_index: 116, before: %NULL%, after: 'do'
for-body@0_decl_1  :  'do'  %MARK%  basic-expr  endline  
 index is: 311, source_index: 116, before: 'do', after: basic-expr
for-body@0_decl_1  :  'do'  basic-expr  %MARK%  endline  
 index is: 312, source_index: 116, before: basic-expr, after: endline
for-body@0_decl_1  :  'do'  basic-expr  endline  %MARK%  
 index is: 313, source_index: 116, before: endline, after: %NULL%
function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, source_index: 117, before: %NULL%, after: 'function'
function-stmt  :  'function'  %MARK%  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 315, source_index: 117, before: 'function', after: ID
function-stmt  :  'function'  ID  %MARK%  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 316, source_index: 117, before: ID, after: '('
function-stmt  :  'function'  ID  '('  %MARK%  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 317, source_index: 117, before: '(', after: function-stmt@0_opt_4
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  %MARK%  ')'  function-stmt@0_opt_6  function-body  
 index is: 318, source_index: 117, before: function-stmt@0_opt_4, after: ')'
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  %MARK%  function-stmt@0_opt_6  function-body  
 index is: 319, source_index: 117, before: ')', after: function-stmt@0_opt_6
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  %MARK%  function-body  
 index is: 320, source_index: 117, before: function-stmt@0_opt_6, after: function-body
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  %MARK%  
 index is: 321, source_index: 117, before: function-body, after: %NULL%
function-stmt@0_opt_6  :  %MARK%  
 index is: 322, source_index: 118, before: %NULL%, after: %NULL%
function-stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, source_index: 119, before: %NULL%, after: 'override'
function-stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, source_index: 119, before: 'override', after: %NULL%
function-stmt@0_opt_4  :  %MARK%  
 index is: 325, source_index: 120, before: %NULL%, after: %NULL%
function-stmt@0_opt_4  :  %MARK%  argument-list  
 index is: 326, source_index: 121, before: %NULL%, after: argument-list
function-stmt@0_opt_4  :  argument-list  %MARK%  
 index is: 327, source_index: 121, before: argument-list, after: %NULL%
function-body  :  %MARK%  function-body@0_decl_1  
 index is: 328, source_index: 122, before: %NULL%, after: function-body@0_decl_1
function-body  :  function-body@0_decl_1  %MARK%  
 index is: 329, source_index: 122, before: function-body@0_decl_1, after: %NULL%
function-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, source_index: 123, before: %NULL%, after: ENDL
function-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, source_index: 123, before: ENDL, after: stmts
function-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, source_index: 123, before: stmts, after: 'end'
function-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, source_index: 123, before: 'end', after: ENDL
function-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, source_index: 123, before: ENDL, after: %NULL%
function-body@0_decl_1  :  %MARK%  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 335, source_index: 124, before: %NULL%, after: function-body@0_decl_1@0_opt_1
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  %MARK%  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 336, source_index: 124, before: function-body@0_decl_1@0_opt_1, after: '{'
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  %MARK%  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 337, source_index: 124, before: '{', after: function-body@0_decl_1@0_opt_3
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  %MARK%  stmts  '}'  
 index is: 338, source_index: 124, before: function-body@0_decl_1@0_opt_3, after: stmts
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  %MARK%  '}'  
 index is: 339, source_index: 124, before: stmts, after: '}'
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  %MARK%  
 index is: 340, source_index: 124, before: '}', after: %NULL%
function-body@0_decl_1@0_opt_3  :  %MARK%  
 index is: 341, source_index: 125, before: %NULL%, after: %NULL%
function-body@0_decl_1@0_opt_3  :  %MARK%  ENDL  
 index is: 342, source_index: 126, before: %NULL%, after: ENDL
function-body@0_decl_1@0_opt_3  :  ENDL  %MARK%  
 index is: 343, source_index: 126, before: ENDL, after: %NULL%
function-body@0_decl_1@0_opt_1  :  %MARK%  
 index is: 344, source_index: 127, before: %NULL%, after: %NULL%
function-body@0_decl_1@0_opt_1  :  %MARK%  ENDL  
 index is: 345, source_index: 128, before: %NULL%, after: ENDL
function-body@0_decl_1@0_opt_1  :  ENDL  %MARK%  
 index is: 346, source_index: 128, before: ENDL, after: %NULL%
return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, source_index: 129, before: %NULL%, after: 'return'
return-stmt  :  'return'  %MARK%  return-stmt@0_opt_2  endline  
 index is: 348, source_index: 129, before: 'return', after: return-stmt@0_opt_2
return-stmt  :  'return'  return-stmt@0_opt_2  %MARK%  endline  
 index is: 349, source_index: 129, before: return-stmt@0_opt_2, after: endline
return-stmt  :  'return'  return-stmt@0_opt_2  endline  %MARK%  
 index is: 350, source_index: 129, before: endline, after: %NULL%
return-stmt@0_opt_2  :  %MARK%  
 index is: 351, source_index: 130, before: %NULL%, after: %NULL%
return-stmt@0_opt_2  :  %MARK%  expr  
 index is: 352, source_index: 131, before: %NULL%, after: expr
return-stmt@0_opt_2  :  expr  %MARK%  
 index is: 353, source_index: 131, before: expr, after: %NULL%
try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, source_index: 132, before: %NULL%, after: 'try'
try-stmt  :  'try'  %MARK%  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 355, source_index: 132, before: 'try', after: ENDL
try-stmt  :  'try'  ENDL  %MARK%  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 356, source_index: 132, before: ENDL, after: stmts
try-stmt  :  'try'  ENDL  stmts  %MARK%  try-stmt@0_rep_4  'end'  ENDL  
 index is: 357, source_index: 132, before: stmts, after: try-stmt@0_rep_4
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 358, source_index: 132, before: try-stmt@0_rep_4, after: 'end'
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 359, source_index: 132, before: 'end', after: ENDL
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 360, source_index: 132, before: ENDL, after: %NULL%
try-stmt@0_rep_4  :  %MARK%  
 index is: 361, source_index: 133, before: %NULL%, after: %NULL%
try-stmt@0_rep_4  :  %MARK%  catch-stmt  stmts  try-stmt@0_rep_4  
 index is: 362, source_index: 134, before: %NULL%, after: catch-stmt
try-stmt@0_rep_4  :  catch-stmt  %MARK%  stmts  try-stmt@0_rep_4  
 index is: 363, source_index: 134, before: catch-stmt, after: stmts
try-stmt@0_rep_4  :  catch-stmt  stmts  %MARK%  try-stmt@0_rep_4  
 index is: 364, source_index: 134, before: stmts, after: try-stmt@0_rep_4
try-stmt@0_rep_4  :  catch-stmt  stmts  try-stmt@0_rep_4  %MARK%  
 index is: 365, source_index: 134, before: try-stmt@0_rep_4, after: %NULL%
catch-stmt  :  %MARK%  'catch'  ID  catch-stmt@0_opt_3  ENDL  
 index is: 366, source_index: 135, before: %NULL%, after: 'catch'
catch-stmt  :  'catch'  %MARK%  ID  catch-stmt@0_opt_3  ENDL  
 index is: 367, source_index: 135, before: 'catch', after: ID
catch-stmt  :  'catch'  ID  %MARK%  catch-stmt@0_opt_3  ENDL  
 index is: 368, source_index: 135, before: ID, after: catch-stmt@0_opt_3
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  %MARK%  ENDL  
 index is: 369, source_index: 135, before: catch-stmt@0_opt_3, after: ENDL
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  ENDL  %MARK%  
 index is: 370, source_index: 135, before: ENDL, after: %NULL%
catch-stmt@0_opt_3  :  %MARK%  
 index is: 371, source_index: 136, before: %NULL%, after: %NULL%
catch-stmt@0_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 372, source_index: 137, before: %NULL%, after: ':'
catch-stmt@0_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 373, source_index: 137, before: ':', after: visit-expr
catch-stmt@0_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 374, source_index: 137, before: visit-expr, after: %NULL%
throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, source_index: 138, before: %NULL%, after: 'throw'
throw-stmt  :  'throw'  %MARK%  throw-stmt@0_opt_2  endline  
 index is: 376, source_index: 138, before: 'throw', after: throw-stmt@0_opt_2
throw-stmt  :  'throw'  throw-stmt@0_opt_2  %MARK%  endline  
 index is: 377, source_index: 138, before: throw-stmt@0_opt_2, after: endline
throw-stmt  :  'throw'  throw-stmt@0_opt_2  endline  %MARK%  
 index is: 378, source_index: 138, before: endline, after: %NULL%
throw-stmt@0_opt_2  :  %MARK%  
 index is: 379, source_index: 139, before: %NULL%, after: %NULL%
throw-stmt@0_opt_2  :  %MARK%  expr  
 index is: 380, source_index: 140, before: %NULL%, after: expr
throw-stmt@0_opt_2  :  expr  %MARK%  
 index is: 381, source_index: 140, before: expr, after: %NULL%
class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, source_index: 141, before: %NULL%, after: class-stmt@0_decl_1
class-stmt  :  class-stmt@0_decl_1  %MARK%  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 383, source_index: 141, before: class-stmt@0_decl_1, after: ID
class-stmt  :  class-stmt@0_decl_1  ID  %MARK%  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 384, source_index: 141, before: ID, after: class-stmt@0_opt_3
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 385, source_index: 141, before: class-stmt@0_opt_3, after: ENDL
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 386, source_index: 141, before: ENDL, after: decl-stmts
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 387, source_index: 141, before: decl-stmts, after: 'end'
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 388, source_index: 141, before: 'end', after: ENDL
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 389, source_index: 141, before: ENDL, after: %NULL%
class-stmt@0_opt_3  :  %MARK%  
 index is: 390, source_index: 142, before: %NULL%, after: %NULL%
class-stmt@0_opt_3  :  %MARK%  'extends'  visit-expr  
 index is: 391, source_index: 143, before: %NULL%, after: 'extends'
class-stmt@0_opt_3  :  'extends'  %MARK%  visit-expr  
 index is: 392, source_index: 143, before: 'extends', after: visit-expr
class-stmt@0_opt_3  :  'extends'  visit-expr  %MARK%  
 index is: 393, source_index: 143, before: visit-expr, after: %NULL%
class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, source_index: 144, before: %NULL%, after: 'struct'
class-stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 395, source_index: 144, before: 'struct', after: %NULL%
class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, source_index: 145, before: %NULL%, after: 'class'
class-stmt@0_decl_1  :  'class'  %MARK%  
 index is: 397, source_index: 145, before: 'class', after: %NULL%
control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, source_index: 146, before: %NULL%, after: control-stmt@0_decl_1
control-stmt  :  control-stmt@0_decl_1  %MARK%  endline  
 index is: 399, source_index: 146, before: control-stmt@0_decl_1, after: endline
control-stmt  :  control-stmt@0_decl_1  endline  %MARK%  
 index is: 400, source_index: 146, before: endline, after: %NULL%
control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, source_index: 147, before: %NULL%, after: 'continue'
control-stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 402, source_index: 147, before: 'continue', after: %NULL%
control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, source_index: 148, before: %NULL%, after: 'break'
control-stmt@0_decl_1  :  'break'  %MARK%  
 index is: 404, source_index: 148, before: 'break', after: %NULL%
expr-stmt  :  %MARK%  expr  endline  
 index is: 405, source_index: 149, before: %NULL%, after: expr
expr-stmt  :  expr  %MARK%  endline  
 index is: 406, source_index: 149, before: expr, after: endline
expr-stmt  :  expr  endline  %MARK%  
 index is: 407, source_index: 149, before: endline, after: %NULL%
end-stmt  :  %MARK%  'end'  ENDL  
 index is: 408, source_index: 150, before: %NULL%, after: 'end'
end-stmt  :  'end'  %MARK%  ENDL  
 index is: 409, source_index: 150, before: 'end', after: ENDL
end-stmt  :  'end'  ENDL  %MARK%  
 index is: 410, source_index: 150, before: ENDL, after: %NULL%
expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, source_index: 151, before: %NULL%, after: single-expr
expr  :  single-expr  %MARK%  expr@0_opt_2  
 index is: 412, source_index: 151, before: single-expr, after: expr@0_opt_2
expr  :  single-expr  expr@0_opt_2  %MARK%  
 index is: 413, source_index: 151, before: expr@0_opt_2, after: %NULL%
expr@0_opt_2  :  %MARK%  
 index is: 414, source_index: 152, before: %NULL%, after: %NULL%
expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 415, source_index: 153, before: %NULL%, after: ','
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 416, source_index: 153, before: ',', after: expr
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 417, source_index: 153, before: expr, after: %NULL%
single-expr  :  %MARK%  basic-expr  
 index is: 418, source_index: 154, before: %NULL%, after: basic-expr
single-expr  :  basic-expr  %MARK%  
 index is: 419, source_index: 154, before: basic-expr, after: %NULL%
single-expr  :  %MARK%  lambda-expr  
 index is: 420, source_index: 155, before: %NULL%, after: lambda-expr
single-expr  :  lambda-expr  %MARK%  
 index is: 421, source_index: 155, before: lambda-expr, after: %NULL%
basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, source_index: 156, before: %NULL%, after: cond-expr
basic-expr  :  cond-expr  %MARK%  basic-expr@1_opt_2  
 index is: 423, source_index: 156, before: cond-expr, after: basic-expr@1_opt_2
basic-expr  :  cond-expr  basic-expr@1_opt_2  %MARK%  
 index is: 424, source_index: 156, before: basic-expr@1_opt_2, after: %NULL%
basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, source_index: 157, before: %NULL%, after: var-bind
basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, source_index: 157, before: var-bind, after: '='
basic-expr  :  var-bind  '='  %MARK%  cond-expr  
 index is: 427, source_index: 157, before: '=', after: cond-expr
basic-expr  :  var-bind  '='  cond-expr  %MARK%  
 index is: 428, source_index: 157, before: cond-expr, after: %NULL%
basic-expr@1_opt_2  :  %MARK%  
 index is: 429, source_index: 158, before: %NULL%, after: %NULL%
basic-expr@1_opt_2  :  %MARK%  asi-op  single-expr  
 index is: 430, source_index: 159, before: %NULL%, after: asi-op
basic-expr@1_opt_2  :  asi-op  %MARK%  single-expr  
 index is: 431, source_index: 159, before: asi-op, after: single-expr
basic-expr@1_opt_2  :  asi-op  single-expr  %MARK%  
 index is: 432, source_index: 159, before: single-expr, after: %NULL%
asi-op  :  %MARK%  '^='  
 index is: 433, source_index: 160, before: %NULL%, after: '^='
asi-op  :  '^='  %MARK%  
 index is: 434, source_index: 160, before: '^=', after: %NULL%
asi-op  :  %MARK%  '%='  
 index is: 435, source_index: 161, before: %NULL%, after: '%='
asi-op  :  '%='  %MARK%  
 index is: 436, source_index: 161, before: '%=', after: %NULL%
asi-op  :  %MARK%  '/='  
 index is: 437, source_index: 162, before: %NULL%, after: '/='
asi-op  :  '/='  %MARK%  
 index is: 438, source_index: 162, before: '/=', after: %NULL%
asi-op  :  %MARK%  '*='  
 index is: 439, source_index: 163, before: %NULL%, after: '*='
asi-op  :  '*='  %MARK%  
 index is: 440, source_index: 163, before: '*=', after: %NULL%
asi-op  :  %MARK%  '-='  
 index is: 441, source_index: 164, before: %NULL%, after: '-='
asi-op  :  '-='  %MARK%  
 index is: 442, source_index: 164, before: '-=', after: %NULL%
asi-op  :  %MARK%  '+='  
 index is: 443, source_index: 165, before: %NULL%, after: '+='
asi-op  :  '+='  %MARK%  
 index is: 444, source_index: 165, before: '+=', after: %NULL%
asi-op  :  %MARK%  ':='  
 index is: 445, source_index: 166, before: %NULL%, after: ':='
asi-op  :  ':='  %MARK%  
 index is: 446, source_index: 166, before: ':=', after: %NULL%
asi-op  :  %MARK%  '='  
 index is: 447, source_index: 167, before: %NULL%, after: '='
asi-op  :  '='  %MARK%  
 index is: 448, source_index: 167, before: '=', after: %NULL%
lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, source_index: 168, before: %NULL%, after: '['
lambda-expr  :  '['  %MARK%  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 450, source_index: 168, before: '[', after: lambda-expr@0_opt_2
lambda-expr  :  '['  lambda-expr@0_opt_2  %MARK%  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 451, source_index: 168, before: lambda-expr@0_opt_2, after: ']'
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  %MARK%  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 452, source_index: 168, before: ']', after: '('
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  %MARK%  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 453, source_index: 168, before: '(', after: lambda-expr@0_opt_5
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  %MARK%  ')'  lambda-body  
 index is: 454, source_index: 168, before: lambda-expr@0_opt_5, after: ')'
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  %MARK%  lambda-body  
 index is: 455, source_index: 168, before: ')', after: lambda-body
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  %MARK%  
 index is: 456, source_index: 168, before: lambda-body, after: %NULL%
lambda-expr@0_opt_5  :  %MARK%  
 index is: 457, source_index: 169, before: %NULL%, after: %NULL%
lambda-expr@0_opt_5  :  %MARK%  argument-list  
 index is: 458, source_index: 170, before: %NULL%, after: argument-list
lambda-expr@0_opt_5  :  argument-list  %MARK%  
 index is: 459, source_index: 170, before: argument-list, after: %NULL%
lambda-expr@0_opt_2  :  %MARK%  
 index is: 460, source_index: 171, before: %NULL%, after: %NULL%
lambda-expr@0_opt_2  :  %MARK%  capture-list  
 index is: 461, source_index: 172, before: %NULL%, after: capture-list
lambda-expr@0_opt_2  :  capture-list  %MARK%  
 index is: 462, source_index: 172, before: capture-list, after: %NULL%
capture-list  :  %MARK%  capture-list@0_opt_1  ID  capture-list@0_rep_3  
 index is: 463, source_index: 173, before: %NULL%, after: capture-list@0_opt_1
capture-list  :  capture-list@0_opt_1  %MARK%  ID  capture-list@0_rep_3  
 index is: 464, source_index: 173, before: capture-list@0_opt_1, after: ID
capture-list  :  capture-list@0_opt_1  ID  %MARK%  capture-list@0_rep_3  
 index is: 465, source_index: 173, before: ID, after: capture-list@0_rep_3
capture-list  :  capture-list@0_opt_1  ID  capture-list@0_rep_3  %MARK%  
 index is: 466, source_index: 173, before: capture-list@0_rep_3, after: %NULL%
capture-list@0_rep_3  :  %MARK%  
 index is: 467, source_index: 174, before: %NULL%, after: %NULL%
capture-list@0_rep_3  :  %MARK%  ','  capture-list  capture-list@0_rep_3  
 index is: 468, source_index: 175, before: %NULL%, after: ','
capture-list@0_rep_3  :  ','  %MARK%  capture-list  capture-list@0_rep_3  
 index is: 469, source_index: 175, before: ',', after: capture-list
capture-list@0_rep_3  :  ','  capture-list  %MARK%  capture-list@0_rep_3  
 index is: 470, source_index: 175, before: capture-list, after: capture-list@0_rep_3
capture-list@0_rep_3  :  ','  capture-list  capture-list@0_rep_3  %MARK%  
 index is: 471, source_index: 175, before: capture-list@0_rep_3, after: %NULL%
capture-list@0_opt_1  :  %MARK%  
 index is: 472, source_index: 176, before: %NULL%, after: %NULL%
capture-list@0_opt_1  :  %MARK%  '='  
 index is: 473, source_index: 177, before: %NULL%, after: '='
capture-list@0_opt_1  :  '='  %MARK%  
 index is: 474, source_index: 177, before: '=', after: %NULL%
argument-list  :  %MARK%  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 475, source_index: 178, before: %NULL%, after: argument-list@1_opt_1
argument-list  :  argument-list@1_opt_1  %MARK%  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 476, source_index: 178, before: argument-list@1_opt_1, after: ID
argument-list  :  argument-list@1_opt_1  ID  %MARK%  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 477, source_index: 178, before: ID, after: argument-list@1_opt_3
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  %MARK%  argument-list@1_rep_4  
 index is: 478, source_index: 178, before: argument-list@1_opt_3, after: argument-list@1_rep_4
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  %MARK%  
 index is: 479, source_index: 178, before: argument-list@1_rep_4, after: %NULL%
argument-list  :  %MARK%  '...'  ID  
 index is: 480, source_index: 179, before: %NULL%, after: '...'
argument-list  :  '...'  %MARK%  ID  
 index is: 481, source_index: 179, before: '...', after: ID
argument-list  :  '...'  ID  %MARK%  
 index is: 482, source_index: 179, before: ID, after: %NULL%
argument-list@1_rep_4  :  %MARK%  
 index is: 483, source_index: 180, before: %NULL%, after: %NULL%
argument-list@1_rep_4  :  %MARK%  ','  argument-list  argument-list@1_rep_4  
 index is: 484, source_index: 181, before: %NULL%, after: ','
argument-list@1_rep_4  :  ','  %MARK%  argument-list  argument-list@1_rep_4  
 index is: 485, source_index: 181, before: ',', after: argument-list
argument-list@1_rep_4  :  ','  argument-list  %MARK%  argument-list@1_rep_4  
 index is: 486, source_index: 181, before: argument-list, after: argument-list@1_rep_4
argument-list@1_rep_4  :  ','  argument-list  argument-list@1_rep_4  %MARK%  
 index is: 487, source_index: 181, before: argument-list@1_rep_4, after: %NULL%
argument-list@1_opt_3  :  %MARK%  
 index is: 488, source_index: 182, before: %NULL%, after: %NULL%
argument-list@1_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 489, source_index: 183, before: %NULL%, after: ':'
argument-list@1_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 490, source_index: 183, before: ':', after: visit-expr
argument-list@1_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 491, source_index: 183, before: visit-expr, after: %NULL%
argument-list@1_opt_1  :  %MARK%  
 index is: 492, source_index: 184, before: %NULL%, after: %NULL%
argument-list@1_opt_1  :  %MARK%  '='  
 index is: 493, source_index: 185, before: %NULL%, after: '='
argument-list@1_opt_1  :  '='  %MARK%  
 index is: 494, source_index: 185, before: '=', after: %NULL%
lambda-body  :  %MARK%  '->'  cond-expr  
 index is: 495, source_index: 186, before: %NULL%, after: '->'
lambda-body  :  '->'  %MARK%  cond-expr  
 index is: 496, source_index: 186, before: '->', after: cond-expr
lambda-body  :  '->'  cond-expr  %MARK%  
 index is: 497, source_index: 186, before: cond-expr, after: %NULL%
lambda-body  :  %MARK%  '{'  lambda-body@0_rep_2  '}'  
 index is: 498, source_index: 187, before: %NULL%, after: '{'
lambda-body  :  '{'  %MARK%  lambda-body@0_rep_2  '}'  
 index is: 499, source_index: 187, before: '{', after: lambda-body@0_rep_2
lambda-body  :  '{'  lambda-body@0_rep_2  %MARK%  '}'  
 index is: 500, source_index: 187, before: lambda-body@0_rep_2, after: '}'
lambda-body  :  '{'  lambda-body@0_rep_2  '}'  %MARK%  
 index is: 501, source_index: 187, before: '}', after: %NULL%
lambda-body@0_rep_2  :  %MARK%  
 index is: 502, source_index: 188, before: %NULL%, after: %NULL%
lambda-body@0_rep_2  :  %MARK%  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 503, source_index: 189, before: %NULL%, after: statement
lambda-body@0_rep_2  :  statement  %MARK%  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 504, source_index: 189, before: statement, after: lambda-body@0_rep_2@0_rep_2
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  %MARK%  lambda-body@0_rep_2  
 index is: 505, source_index: 189, before: lambda-body@0_rep_2@0_rep_2, after: lambda-body@0_rep_2
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  %MARK%  
 index is: 506, source_index: 189, before: lambda-body@0_rep_2, after: %NULL%
lambda-body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 507, source_index: 190, before: %NULL%, after: %NULL%
lambda-body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda-body@0_rep_2@0_rep_2  
 index is: 508, source_index: 191, before: %NULL%, after: ENDL
lambda-body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda-body@0_rep_2@0_rep_2  
 index is: 509, source_index: 191, before: ENDL, after: lambda-body@0_rep_2@0_rep_2
lambda-body@0_rep_2@0_rep_2  :  ENDL  lambda-body@0_rep_2@0_rep_2  %MARK%  
 index is: 510, source_index: 191, before: lambda-body@0_rep_2@0_rep_2, after: %NULL%
cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, source_index: 192, before: %NULL%, after: logic-or-expr
cond-expr  :  logic-or-expr  %MARK%  cond-expr@0_opt_2  
 index is: 512, source_index: 192, before: logic-or-expr, after: cond-expr@0_opt_2
cond-expr  :  logic-or-expr  cond-expr@0_opt_2  %MARK%  
 index is: 513, source_index: 192, before: cond-expr@0_opt_2, after: %NULL%
cond-expr@0_opt_2  :  %MARK%  
 index is: 514, source_index: 193, before: %NULL%, after: %NULL%
cond-expr@0_opt_2  :  %MARK%  cond-postfix  
 index is: 515, source_index: 194, before: %NULL%, after: cond-postfix
cond-expr@0_opt_2  :  cond-postfix  %MARK%  
 index is: 516, source_index: 194, before: cond-postfix, after: %NULL%
cond-postfix  :  %MARK%  ':'  logic-or-expr  
 index is: 517, source_index: 195, before: %NULL%, after: ':'
cond-postfix  :  ':'  %MARK%  logic-or-expr  
 index is: 518, source_index: 195, before: ':', after: logic-or-expr
cond-postfix  :  ':'  logic-or-expr  %MARK%  
 index is: 519, source_index: 195, before: logic-or-expr, after: %NULL%
cond-postfix  :  %MARK%  '?'  logic-or-expr  ':'  cond-expr  
 index is: 520, source_index: 196, before: %NULL%, after: '?'
cond-postfix  :  '?'  %MARK%  logic-or-expr  ':'  cond-expr  
 index is: 521, source_index: 196, before: '?', after: logic-or-expr
cond-postfix  :  '?'  logic-or-expr  %MARK%  ':'  cond-expr  
 index is: 522, source_index: 196, before: logic-or-expr, after: ':'
cond-postfix  :  '?'  logic-or-expr  ':'  %MARK%  cond-expr  
 index is: 523, source_index: 196, before: ':', after: cond-expr
cond-postfix  :  '?'  logic-or-expr  ':'  cond-expr  %MARK%  
 index is: 524, source_index: 196, before: cond-expr, after: %NULL%
logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, source_index: 197, before: %NULL%, after: logic-and-expr
logic-or-expr  :  logic-and-expr  %MARK%  logic-or-expr@0_opt_2  
 index is: 526, source_index: 197, before: logic-and-expr, after: logic-or-expr@0_opt_2
logic-or-expr  :  logic-and-expr  logic-or-expr@0_opt_2  %MARK%  
 index is: 527, source_index: 197, before: logic-or-expr@0_opt_2, after: %NULL%
logic-or-expr@0_opt_2  :  %MARK%  
 index is: 528, source_index: 198, before: %NULL%, after: %NULL%
logic-or-expr@0_opt_2  :  %MARK%  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  
 index is: 529, source_index: 199, before: %NULL%, after: logic-or-expr@0_opt_2@0_decl_1
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  %MARK%  logic-or-expr  
 index is: 530, source_index: 199, before: logic-or-expr@0_opt_2@0_decl_1, after: logic-or-expr
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  %MARK%  
 index is: 531, source_index: 199, before: logic-or-expr, after: %NULL%
logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 532, source_index: 200, before: %NULL%, after: 'or'
logic-or-expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 533, source_index: 200, before: 'or', after: %NULL%
logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 534, source_index: 201, before: %NULL%, after: '||'
logic-or-expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 535, source_index: 201, before: '||', after: %NULL%
logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, source_index: 202, before: %NULL%, after: equal-expr
logic-and-expr  :  equal-expr  %MARK%  logic-and-expr@0_opt_2  
 index is: 537, source_index: 202, before: equal-expr, after: logic-and-expr@0_opt_2
logic-and-expr  :  equal-expr  logic-and-expr@0_opt_2  %MARK%  
 index is: 538, source_index: 202, before: logic-and-expr@0_opt_2, after: %NULL%
logic-and-expr@0_opt_2  :  %MARK%  
 index is: 539, source_index: 203, before: %NULL%, after: %NULL%
logic-and-expr@0_opt_2  :  %MARK%  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  
 index is: 540, source_index: 204, before: %NULL%, after: logic-and-expr@0_opt_2@0_decl_1
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  %MARK%  logic-and-expr  
 index is: 541, source_index: 204, before: logic-and-expr@0_opt_2@0_decl_1, after: logic-and-expr
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  %MARK%  
 index is: 542, source_index: 204, before: logic-and-expr, after: %NULL%
logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 543, source_index: 205, before: %NULL%, after: 'and'
logic-and-expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 544, source_index: 205, before: 'and', after: %NULL%
logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 545, source_index: 206, before: %NULL%, after: '&&'
logic-and-expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 546, source_index: 206, before: '&&', after: %NULL%
equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, source_index: 207, before: %NULL%, after: relat-expr
equal-expr  :  relat-expr  %MARK%  equal-expr@0_opt_2  
 index is: 548, source_index: 207, before: relat-expr, after: equal-expr@0_opt_2
equal-expr  :  relat-expr  equal-expr@0_opt_2  %MARK%  
 index is: 549, source_index: 207, before: equal-expr@0_opt_2, after: %NULL%
equal-expr@0_opt_2  :  %MARK%  
 index is: 550, source_index: 208, before: %NULL%, after: %NULL%
equal-expr@0_opt_2  :  %MARK%  equal-expr@0_opt_2@0_decl_1  equal-expr  
 index is: 551, source_index: 209, before: %NULL%, after: equal-expr@0_opt_2@0_decl_1
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  %MARK%  equal-expr  
 index is: 552, source_index: 209, before: equal-expr@0_opt_2@0_decl_1, after: equal-expr
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  equal-expr  %MARK%  
 index is: 553, source_index: 209, before: equal-expr, after: %NULL%
equal-expr@0_opt_2@0_decl_1  :  %MARK%  'not'  
 index is: 554, source_index: 210, before: %NULL%, after: 'not'
equal-expr@0_opt_2@0_decl_1  :  'not'  %MARK%  
 index is: 555, source_index: 210, before: 'not', after: %NULL%
equal-expr@0_opt_2@0_decl_1  :  %MARK%  'is'  
 index is: 556, source_index: 211, before: %NULL%, after: 'is'
equal-expr@0_opt_2@0_decl_1  :  'is'  %MARK%  
 index is: 557, source_index: 211, before: 'is', after: %NULL%
equal-expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 558, source_index: 212, before: %NULL%, after: '!='
equal-expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 559, source_index: 212, before: '!=', after: %NULL%
equal-expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 560, source_index: 213, before: %NULL%, after: '=='
equal-expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 561, source_index: 213, before: '==', after: %NULL%
relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, source_index: 214, before: %NULL%, after: add-expr
relat-expr  :  add-expr  %MARK%  relat-expr@0_opt_2  
 index is: 563, source_index: 214, before: add-expr, after: relat-expr@0_opt_2
relat-expr  :  add-expr  relat-expr@0_opt_2  %MARK%  
 index is: 564, source_index: 214, before: relat-expr@0_opt_2, after: %NULL%
relat-expr@0_opt_2  :  %MARK%  
 index is: 565, source_index: 215, before: %NULL%, after: %NULL%
relat-expr@0_opt_2  :  %MARK%  relat-expr@0_opt_2@0_decl_1  relat-expr  
 index is: 566, source_index: 216, before: %NULL%, after: relat-expr@0_opt_2@0_decl_1
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  %MARK%  relat-expr  
 index is: 567, source_index: 216, before: relat-expr@0_opt_2@0_decl_1, after: relat-expr
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  relat-expr  %MARK%  
 index is: 568, source_index: 216, before: relat-expr, after: %NULL%
relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 569, source_index: 217, before: %NULL%, after: '<='
relat-expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 570, source_index: 217, before: '<=', after: %NULL%
relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 571, source_index: 218, before: %NULL%, after: '>='
relat-expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 572, source_index: 218, before: '>=', after: %NULL%
relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 573, source_index: 219, before: %NULL%, after: '<'
relat-expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 574, source_index: 219, before: '<', after: %NULL%
relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 575, source_index: 220, before: %NULL%, after: '>'
relat-expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 576, source_index: 220, before: '>', after: %NULL%
add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, source_index: 221, before: %NULL%, after: mul-expr
add-expr  :  mul-expr  %MARK%  add-expr@0_opt_2  
 index is: 578, source_index: 221, before: mul-expr, after: add-expr@0_opt_2
add-expr  :  mul-expr  add-expr@0_opt_2  %MARK%  
 index is: 579, source_index: 221, before: add-expr@0_opt_2, after: %NULL%
add-expr@0_opt_2  :  %MARK%  
 index is: 580, source_index: 222, before: %NULL%, after: %NULL%
add-expr@0_opt_2  :  %MARK%  add-expr@0_opt_2@0_decl_1  add-expr  
 index is: 581, source_index: 223, before: %NULL%, after: add-expr@0_opt_2@0_decl_1
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  %MARK%  add-expr  
 index is: 582, source_index: 223, before: add-expr@0_opt_2@0_decl_1, after: add-expr
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  add-expr  %MARK%  
 index is: 583, source_index: 223, before: add-expr, after: %NULL%
add-expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 584, source_index: 224, before: %NULL%, after: '-'
add-expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 585, source_index: 224, before: '-', after: %NULL%
add-expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 586, source_index: 225, before: %NULL%, after: '+'
add-expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 587, source_index: 225, before: '+', after: %NULL%
mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, source_index: 226, before: %NULL%, after: unary-expr
mul-expr  :  unary-expr  %MARK%  mul-expr@0_opt_2  
 index is: 589, source_index: 226, before: unary-expr, after: mul-expr@0_opt_2
mul-expr  :  unary-expr  mul-expr@0_opt_2  %MARK%  
 index is: 590, source_index: 226, before: mul-expr@0_opt_2, after: %NULL%
mul-expr@0_opt_2  :  %MARK%  
 index is: 591, source_index: 227, before: %NULL%, after: %NULL%
mul-expr@0_opt_2  :  %MARK%  mul-expr@0_opt_2@0_decl_1  mul-expr  
 index is: 592, source_index: 228, before: %NULL%, after: mul-expr@0_opt_2@0_decl_1
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  %MARK%  mul-expr  
 index is: 593, source_index: 228, before: mul-expr@0_opt_2@0_decl_1, after: mul-expr
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  mul-expr  %MARK%  
 index is: 594, source_index: 228, before: mul-expr, after: %NULL%
mul-expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 595, source_index: 229, before: %NULL%, after: '^'
mul-expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 596, source_index: 229, before: '^', after: %NULL%
mul-expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 597, source_index: 230, before: %NULL%, after: '%'
mul-expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 598, source_index: 230, before: '%', after: %NULL%
mul-expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 599, source_index: 231, before: %NULL%, after: '/'
mul-expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 600, source_index: 231, before: '/', after: %NULL%
mul-expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 601, source_index: 232, before: %NULL%, after: '*'
mul-expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 602, source_index: 232, before: '*', after: %NULL%
unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, source_index: 233, before: %NULL%, after: prim-expr
unary-expr  :  prim-expr  %MARK%  unary-expr@2_opt_2  
 index is: 604, source_index: 233, before: prim-expr, after: unary-expr@2_opt_2
unary-expr  :  prim-expr  unary-expr@2_opt_2  %MARK%  
 index is: 605, source_index: 233, before: unary-expr@2_opt_2, after: %NULL%
unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, source_index: 234, before: %NULL%, after: unary-expr@1_decl_1
unary-expr  :  unary-expr@1_decl_1  %MARK%  unary-expr  unary-expr@1_opt_3  
 index is: 607, source_index: 234, before: unary-expr@1_decl_1, after: unary-expr
unary-expr  :  unary-expr@1_decl_1  unary-expr  %MARK%  unary-expr@1_opt_3  
 index is: 608, source_index: 234, before: unary-expr, after: unary-expr@1_opt_3
unary-expr  :  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  %MARK%  
 index is: 609, source_index: 234, before: unary-expr@1_opt_3, after: %NULL%
unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, source_index: 235, before: %NULL%, after: unary-op
unary-expr  :  unary-op  %MARK%  unary-expr  
 index is: 611, source_index: 235, before: unary-op, after: unary-expr
unary-expr  :  unary-op  unary-expr  %MARK%  
 index is: 612, source_index: 235, before: unary-expr, after: %NULL%
unary-expr@2_opt_2  :  %MARK%  
 index is: 613, source_index: 236, before: %NULL%, after: %NULL%
unary-expr@2_opt_2  :  %MARK%  postfix-expr  
 index is: 614, source_index: 237, before: %NULL%, after: postfix-expr
unary-expr@2_opt_2  :  postfix-expr  %MARK%  
 index is: 615, source_index: 237, before: postfix-expr, after: %NULL%
unary-expr@1_opt_3  :  %MARK%  
 index is: 616, source_index: 238, before: %NULL%, after: %NULL%
unary-expr@1_opt_3  :  %MARK%  array  
 index is: 617, source_index: 239, before: %NULL%, after: array
unary-expr@1_opt_3  :  array  %MARK%  
 index is: 618, source_index: 239, before: array, after: %NULL%
unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, source_index: 240, before: %NULL%, after: 'gcnew'
unary-expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 620, source_index: 240, before: 'gcnew', after: %NULL%
unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, source_index: 241, before: %NULL%, after: 'new'
unary-expr@1_decl_1  :  'new'  %MARK%  
 index is: 622, source_index: 241, before: 'new', after: %NULL%
unary-op  :  %MARK%  'not'  
 index is: 623, source_index: 242, before: %NULL%, after: 'not'
unary-op  :  'not'  %MARK%  
 index is: 624, source_index: 242, before: 'not', after: %NULL%
unary-op  :  %MARK%  '!'  
 index is: 625, source_index: 243, before: %NULL%, after: '!'
unary-op  :  '!'  %MARK%  
 index is: 626, source_index: 243, before: '!', after: %NULL%
unary-op  :  %MARK%  '-'  
 index is: 627, source_index: 244, before: %NULL%, after: '-'
unary-op  :  '-'  %MARK%  
 index is: 628, source_index: 244, before: '-', after: %NULL%
unary-op  :  %MARK%  '&'  
 index is: 629, source_index: 245, before: %NULL%, after: '&'
unary-op  :  '&'  %MARK%  
 index is: 630, source_index: 245, before: '&', after: %NULL%
unary-op  :  %MARK%  '*'  
 index is: 631, source_index: 246, before: %NULL%, after: '*'
unary-op  :  '*'  %MARK%  
 index is: 632, source_index: 246, before: '*', after: %NULL%
unary-op  :  %MARK%  '--'  
 index is: 633, source_index: 247, before: %NULL%, after: '--'
unary-op  :  '--'  %MARK%  
 index is: 634, source_index: 247, before: '--', after: %NULL%
unary-op  :  %MARK%  '++'  
 index is: 635, source_index: 248, before: %NULL%, after: '++'
unary-op  :  '++'  %MARK%  
 index is: 636, source_index: 248, before: '++', after: %NULL%
unary-op  :  %MARK%  'typeid'  
 index is: 637, source_index: 249, before: %NULL%, after: 'typeid'
unary-op  :  'typeid'  %MARK%  
 index is: 638, source_index: 249, before: 'typeid', after: %NULL%
postfix-expr  :  %MARK%  postfix-expr@0_decl_1  postfix-expr@0_opt_2  
 index is: 639, source_index: 250, before: %NULL%, after: postfix-expr@0_decl_1
postfix-expr  :  postfix-expr@0_decl_1  %MARK%  postfix-expr@0_opt_2  
 index is: 640, source_index: 250, before: postfix-expr@0_decl_1, after: postfix-expr@0_opt_2
postfix-expr  :  postfix-expr@0_decl_1  postfix-expr@0_opt_2  %MARK%  
 index is: 641, source_index: 250, before: postfix-expr@0_opt_2, after: %NULL%
postfix-expr@0_opt_2  :  %MARK%  
 index is: 642, source_index: 251, before: %NULL%, after: %NULL%
postfix-expr@0_opt_2  :  %MARK%  postfix-expr  
 index is: 643, source_index: 252, before: %NULL%, after: postfix-expr
postfix-expr@0_opt_2  :  postfix-expr  %MARK%  
 index is: 644, source_index: 252, before: postfix-expr, after: %NULL%
postfix-expr@0_decl_1  :  %MARK%  '...'  
 index is: 645, source_index: 253, before: %NULL%, after: '...'
postfix-expr@0_decl_1  :  '...'  %MARK%  
 index is: 646, source_index: 253, before: '...', after: %NULL%
postfix-expr@0_decl_1  :  %MARK%  '--'  
 index is: 647, source_index: 254, before: %NULL%, after: '--'
postfix-expr@0_decl_1  :  '--'  %MARK%  
 index is: 648, source_index: 254, before: '--', after: %NULL%
postfix-expr@0_decl_1  :  %MARK%  '++'  
 index is: 649, source_index: 255, before: %NULL%, after: '++'
postfix-expr@0_decl_1  :  '++'  %MARK%  
 index is: 650, source_index: 255, before: '++', after: %NULL%
prim-expr  :  %MARK%  constant  
 index is: 651, source_index: 256, before: %NULL%, after: constant
prim-expr  :  constant  %MARK%  
 index is: 652, source_index: 256, before: constant, after: %NULL%
prim-expr  :  %MARK%  visit-expr  
 index is: 653, source_index: 257, before: %NULL%, after: visit-expr
prim-expr  :  visit-expr  %MARK%  
 index is: 654, source_index: 257, before: visit-expr, after: %NULL%
visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, source_index: 258, before: %NULL%, after: object
visit-expr  :  object  %MARK%  visit-expr@0_opt_2  
 index is: 656, source_index: 258, before: object, after: visit-expr@0_opt_2
visit-expr  :  object  visit-expr@0_opt_2  %MARK%  
 index is: 657, source_index: 258, before: visit-expr@0_opt_2, after: %NULL%
visit-expr@0_opt_2  :  %MARK%  
 index is: 658, source_index: 259, before: %NULL%, after: %NULL%
visit-expr@0_opt_2  :  %MARK%  visit-expr@0_opt_2@0_decl_1  visit-expr  
 index is: 659, source_index: 260, before: %NULL%, after: visit-expr@0_opt_2@0_decl_1
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  %MARK%  visit-expr  
 index is: 660, source_index: 260, before: visit-expr@0_opt_2@0_decl_1, after: visit-expr
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  visit-expr  %MARK%  
 index is: 661, source_index: 260, before: visit-expr, after: %NULL%
visit-expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 662, source_index: 261, before: %NULL%, after: '.'
visit-expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 663, source_index: 261, before: '.', after: %NULL%
visit-expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 664, source_index: 262, before: %NULL%, after: '->'
visit-expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 665, source_index: 262, before: '->', after: %NULL%
object  :  %MARK%  CHAR  
 index is: 666, source_index: 263, before: %NULL%, after: CHAR
object  :  CHAR  %MARK%  
 index is: 667, source_index: 263, before: CHAR, after: %NULL%
object  :  %MARK%  element  
 index is: 668, source_index: 264, before: %NULL%, after: element
object  :  element  %MARK%  
 index is: 669, source_index: 264, before: element, after: %NULL%
object  :  %MARK%  'global'  
 index is: 670, source_index: 265, before: %NULL%, after: 'global'
object  :  'global'  %MARK%  
 index is: 671, source_index: 265, before: 'global', after: %NULL%
object  :  %MARK%  'local'  
 index is: 672, source_index: 266, before: %NULL%, after: 'local'
object  :  'local'  %MARK%  
 index is: 673, source_index: 266, before: 'local', after: %NULL%
object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, source_index: 267, before: %NULL%, after: STR
object  :  STR  %MARK%  object@1_opt_2  
 index is: 675, source_index: 267, before: STR, after: object@1_opt_2
object  :  STR  object@1_opt_2  %MARK%  
 index is: 676, source_index: 267, before: object@1_opt_2, after: %NULL%
object  :  %MARK%  array  object@0_opt_2  
 index is: 677, source_index: 268, before: %NULL%, after: array
object  :  array  %MARK%  object@0_opt_2  
 index is: 678, source_index: 268, before: array, after: object@0_opt_2
object  :  array  object@0_opt_2  %MARK%  
 index is: 679, source_index: 268, before: object@0_opt_2, after: %NULL%
object@1_opt_2  :  %MARK%  
 index is: 680, source_index: 269, before: %NULL%, after: %NULL%
object@1_opt_2  :  %MARK%  index  
 index is: 681, source_index: 270, before: %NULL%, after: index
object@1_opt_2  :  index  %MARK%  
 index is: 682, source_index: 270, before: index, after: %NULL%
object@0_opt_2  :  %MARK%  
 index is: 683, source_index: 271, before: %NULL%, after: %NULL%
object@0_opt_2  :  %MARK%  index  
 index is: 684, source_index: 272, before: %NULL%, after: index
object@0_opt_2  :  index  %MARK%  
 index is: 685, source_index: 272, before: index, after: %NULL%
element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, source_index: 273, before: %NULL%, after: element@0_decl_1
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 687, source_index: 273, before: element@0_decl_1, after: element@0_rep_2
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 688, source_index: 273, before: element@0_rep_2, after: %NULL%
element@0_rep_2  :  %MARK%  
 index is: 689, source_index: 274, before: %NULL%, after: %NULL%
element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 690, source_index: 275, before: %NULL%, after: index
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 691, source_index: 275, before: index, after: element@0_rep_2
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 692, source_index: 275, before: element@0_rep_2, after: %NULL%
element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 693, source_index: 276, before: %NULL%, after: fcall
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 694, source_index: 276, before: fcall, after: element@0_rep_2
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 695, source_index: 276, before: element@0_rep_2, after: %NULL%
element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, source_index: 277, before: %NULL%, after: '('
element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, source_index: 277, before: '(', after: single-expr
element@0_decl_1  :  '('  single-expr  %MARK%  ')'  
 index is: 698, source_index: 277, before: single-expr, after: ')'
element@0_decl_1  :  '('  single-expr  ')'  %MARK%  
 index is: 699, source_index: 277, before: ')', after: %NULL%
element@0_decl_1  :  %MARK%  ID  
 index is: 700, source_index: 278, before: %NULL%, after: ID
element@0_decl_1  :  ID  %MARK%  
 index is: 701, source_index: 278, before: ID, after: %NULL%
constant  :  %MARK%  'false'  
 index is: 702, source_index: 279, before: %NULL%, after: 'false'
constant  :  'false'  %MARK%  
 index is: 703, source_index: 279, before: 'false', after: %NULL%
constant  :  %MARK%  'true'  
 index is: 704, source_index: 280, before: %NULL%, after: 'true'
constant  :  'true'  %MARK%  
 index is: 705, source_index: 280, before: 'true', after: %NULL%
constant  :  %MARK%  'null'  
 index is: 706, source_index: 281, before: %NULL%, after: 'null'
constant  :  'null'  %MARK%  
 index is: 707, source_index: 281, before: 'null', after: %NULL%
constant  :  %MARK%  NUM  
 index is: 708, source_index: 282, before: %NULL%, after: NUM
constant  :  NUM  %MARK%  
 index is: 709, source_index: 282, before: NUM, after: %NULL%
array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, source_index: 283, before: %NULL%, after: '{'
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 711, source_index: 283, before: '{', after: array@0_opt_2
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 712, source_index: 283, before: array@0_opt_2, after: '}'
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 713, source_index: 283, before: '}', after: %NULL%
array@0_opt_2  :  %MARK%  
 index is: 714, source_index: 284, before: %NULL%, after: %NULL%
array@0_opt_2  :  %MARK%  expr  
 index is: 715, source_index: 285, before: %NULL%, after: expr
array@0_opt_2  :  expr  %MARK%  
 index is: 716, source_index: 285, before: expr, after: %NULL%
fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 717, source_index: 286, before: %NULL%, after: '('
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 718, source_index: 286, before: '(', after: fcall@0_opt_2
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 719, source_index: 286, before: fcall@0_opt_2, after: ')'
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 720, source_index: 286, before: ')', after: %NULL%
fcall@0_opt_2  :  %MARK%  
 index is: 721, source_index: 287, before: %NULL%, after: %NULL%
fcall@0_opt_2  :  %MARK%  expr  
 index is: 722, source_index: 288, before: %NULL%, after: expr
fcall@0_opt_2  :  expr  %MARK%  
 index is: 723, source_index: 288, before: expr, after: %NULL%
index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, source_index: 289, before: %NULL%, after: '['
index  :  '['  %MARK%  basic-expr  ']'  
 index is: 725, source_index: 289, before: '[', after: basic-expr
index  :  '['  basic-expr  %MARK%  ']'  
 index is: 726, source_index: 289, before: basic-expr, after: ']'
index  :  '['  basic-expr  ']'  %MARK%  
 index is: 727, source_index: 289, before: ']', after: %NULL%



###########
ADD TARGETS
###########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

begin  :  %MARK%  stmts  
 index is: 2, term type: to_deduce, before: %NULL%, after: stmts
TARGET LIST: 
target index: 3  , change_value: stmts
target index: 14  , change_value: %NULL%

begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

ignore  :  %MARK%  ignore@0_rep_1  
 index is: 4, term type: to_deduce, before: %NULL%, after: ignore@0_rep_1
TARGET LIST: 
target index: 5  , change_value: ignore@0_rep_1
target index: 6  , change_value: %NULL%
target index: 7  , change_value: %NULL%

ignore  :  ignore@0_rep_1  %MARK%  
 index is: 5, term type: deduce, before: ignore@0_rep_1, after: %NULL%
TARGET LIST: 

ignore@0_rep_1  :  %MARK%  
 index is: 6, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

ignore@0_rep_1  :  %MARK%  ENDL  ignore@0_rep_1  
 index is: 7, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 8  , change_value: ENDL

ignore@0_rep_1  :  ENDL  %MARK%  ignore@0_rep_1  
 index is: 8, term type: to_deduce, before: ENDL, after: ignore@0_rep_1
TARGET LIST: 
target index: 6  , change_value: %NULL%
target index: 7  , change_value: %NULL%
target index: 9  , change_value: ignore@0_rep_1

ignore@0_rep_1  :  ENDL  ignore@0_rep_1  %MARK%  
 index is: 9, term type: deduce, before: ignore@0_rep_1, after: %NULL%
TARGET LIST: 

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

decl-stmts  :  %MARK%  decl-stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl-stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl-stmts  :  decl-stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1  :  %MARK%  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

decl-stmts@0_rep_1  :  declaration  %MARK%  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl-stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  %MARK%  decl-stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl-stmts@0_rep_1@0_rep_2, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl-stmts@0_rep_1

decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl-stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

decl-stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl-stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl-stmts@0_rep_1@0_rep_2

decl-stmts@0_rep_1@0_rep_2  :  ENDL  decl-stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl-stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  catch-stmt  
 index is: 36, term type: to_deduce, before: %NULL%, after: catch-stmt
TARGET LIST: 
target index: 37  , change_value: catch-stmt
target index: 366  , change_value: %NULL%

endblock  :  catch-stmt  %MARK%  
 index is: 37, term type: deduce, before: catch-stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  until-stmt  
 index is: 38, term type: to_deduce, before: %NULL%, after: until-stmt
TARGET LIST: 
target index: 39  , change_value: until-stmt
target index: 268  , change_value: %NULL%

endblock  :  until-stmt  %MARK%  
 index is: 39, term type: deduce, before: until-stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  else-stmt  
 index is: 40, term type: to_deduce, before: %NULL%, after: else-stmt
TARGET LIST: 
target index: 41  , change_value: else-stmt
target index: 208  , change_value: %NULL%

endblock  :  else-stmt  %MARK%  
 index is: 41, term type: deduce, before: else-stmt, after: %NULL%
TARGET LIST: 

endblock  :  %MARK%  end-stmt  
 index is: 42, term type: to_deduce, before: %NULL%, after: end-stmt
TARGET LIST: 
target index: 43  , change_value: end-stmt
target index: 408  , change_value: %NULL%

endblock  :  end-stmt  %MARK%  
 index is: 43, term type: deduce, before: end-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  expr-stmt  %MARK%  
 index is: 45, term type: deduce, before: expr-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  class-stmt  %MARK%  
 index is: 47, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  throw-stmt  %MARK%  
 index is: 49, term type: deduce, before: throw-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  try-stmt  %MARK%  
 index is: 51, term type: deduce, before: try-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  return-stmt  %MARK%  
 index is: 53, term type: deduce, before: return-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  function-stmt  %MARK%  
 index is: 55, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  control-stmt  %MARK%  
 index is: 57, term type: deduce, before: control-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  foreach-stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  for-stmt  %MARK%  
 index is: 61, term type: deduce, before: for-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  loop-stmt  %MARK%  
 index is: 63, term type: deduce, before: loop-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  while-stmt  %MARK%  
 index is: 65, term type: deduce, before: while-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  switch-stmt  %MARK%  
 index is: 67, term type: deduce, before: switch-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  if-stmt  %MARK%  
 index is: 69, term type: deduce, before: if-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  using-stmt  %MARK%  
 index is: 71, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  namespace-stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  block-stmt  %MARK%  
 index is: 75, term type: deduce, before: block-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  var-stmt  %MARK%  
 index is: 77, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  import-stmt  %MARK%  
 index is: 79, term type: deduce, before: import-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  package-stmt  %MARK%  
 index is: 81, term type: deduce, before: package-stmt, after: %NULL%
TARGET LIST: 

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

statement  :  prep-stmt  %MARK%  
 index is: 83, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  class-stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 85  , change_value: class-stmt
target index: 382  , change_value: %NULL%

declaration  :  class-stmt  %MARK%  
 index is: 85, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  function-stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 87  , change_value: function-stmt
target index: 314  , change_value: %NULL%

declaration  :  function-stmt  %MARK%  
 index is: 87, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  using-stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 89  , change_value: using-stmt
target index: 184  , change_value: %NULL%

declaration  :  using-stmt  %MARK%  
 index is: 89, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  var-stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 91  , change_value: var-stmt
target index: 136  , change_value: %NULL%

declaration  :  var-stmt  %MARK%  
 index is: 91, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  namespace-stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 93  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

declaration  :  namespace-stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

declaration  :  %MARK%  prep-stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 95  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

declaration  :  prep-stmt  %MARK%  
 index is: 95, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

prep-stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

prep-stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

package-stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

package-stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

package-stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

import-stmt  :  'import'  %MARK%  import-list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import-list
TARGET LIST: 
target index: 105  , change_value: import-list
target index: 118  , change_value: %NULL%

import-stmt  :  'import'  import-list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

import-stmt  :  'import'  import-list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

module-list  :  ID  %MARK%  module-list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module-list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module-list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

module-list  :  ID  module-list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module-list@0_opt_2, after: %NULL%
TARGET LIST: 

module-list@0_opt_2  :  %MARK%  
 index is: 110, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

module-list@0_opt_2  :  %MARK%  '.'  module-list@0_opt_2@0_decl_2  
 index is: 111, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 112  , change_value: '.'

module-list@0_opt_2  :  '.'  %MARK%  module-list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module-list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module-list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

module-list@0_opt_2  :  '.'  module-list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module-list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

module-list@0_opt_2@0_decl_2  :  %MARK%  module-list  
 index is: 114, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 115  , change_value: module-list

module-list@0_opt_2@0_decl_2  :  module-list  %MARK%  
 index is: 115, term type: deduce, before: module-list, after: %NULL%
TARGET LIST: 

module-list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 117  , change_value: '*'

module-list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

import-list  :  %MARK%  module-list  import-list@0_opt_2  import-list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module-list

import-list  :  module-list  %MARK%  import-list@0_opt_2  import-list@0_opt_3  
 index is: 119, term type: to_deduce, before: module-list, after: import-list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import-list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

import-list  :  module-list  import-list@0_opt_2  %MARK%  import-list@0_opt_3  
 index is: 120, term type: to_deduce, before: import-list@0_opt_2, after: import-list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import-list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

import-list  :  module-list  import-list@0_opt_2  import-list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import-list@0_opt_3, after: %NULL%
TARGET LIST: 

import-list@0_opt_3  :  %MARK%  
 index is: 122, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import-list@0_opt_3  :  %MARK%  ','  import-list  
 index is: 123, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 124  , change_value: ','

import-list@0_opt_3  :  ','  %MARK%  import-list  
 index is: 124, term type: to_deduce, before: ',', after: import-list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import-list

import-list@0_opt_3  :  ','  import-list  %MARK%  
 index is: 125, term type: deduce, before: import-list, after: %NULL%
TARGET LIST: 

import-list@0_opt_2  :  %MARK%  
 index is: 126, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import-list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, term type: shift, before: %NULL%, after: 'as'
TARGET LIST: 
target index: 128  , change_value: 'as'

import-list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

import-list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

var-def  :  %MARK%  var-list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var-list
TARGET LIST: 
target index: 131  , change_value: var-list
target index: 162  , change_value: %NULL%

var-def  :  var-list  %MARK%  
 index is: 131, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

var-def  :  %MARK%  var-bind  '='  basic-expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 133  , change_value: var-bind
target index: 146  , change_value: %NULL%

var-def  :  var-bind  %MARK%  '='  basic-expr  
 index is: 133, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

var-def  :  var-bind  '='  %MARK%  basic-expr  
 index is: 134, term type: to_deduce, before: '=', after: basic-expr
TARGET LIST: 
target index: 135  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

var-def  :  var-bind  '='  basic-expr  %MARK%  
 index is: 135, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

var-stmt  :  var-stmt@0_decl_1  %MARK%  var-def  endline  
 index is: 137, term type: to_deduce, before: var-stmt@0_decl_1, after: var-def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var-def

var-stmt  :  var-stmt@0_decl_1  var-def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var-def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

var-stmt  :  var-stmt@0_decl_1  var-def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

var-stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var-bind-list
TARGET LIST: 
target index: 148  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var-bind  :  '('  var-bind-list  %MARK%  var-bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var-bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

var-bind  :  '('  var-bind-list  var-bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var-bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

var-bind  :  '('  var-bind-list  var-bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

var-bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var-bind@0_rep_3  :  %MARK%  ','  var-bind-list  var-bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

var-bind@0_rep_3  :  ','  %MARK%  var-bind-list  var-bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var-bind-list
TARGET LIST: 
target index: 154  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var-bind@0_rep_3  :  ','  var-bind-list  %MARK%  var-bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var-bind@0_rep_3

var-bind@0_rep_3  :  ','  var-bind-list  var-bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var-bind@0_rep_3, after: %NULL%
TARGET LIST: 

var-bind-list  :  %MARK%  var-bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var-bind

var-bind-list  :  var-bind  %MARK%  
 index is: 157, term type: deduce, before: var-bind, after: %NULL%
TARGET LIST: 

var-bind-list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var-bind-list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

var-bind-list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var-bind-list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

var-list  :  %MARK%  ID  '='  single-expr  var-list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var-list  :  ID  %MARK%  '='  single-expr  var-list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

var-list  :  ID  '='  %MARK%  single-expr  var-list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single-expr
TARGET LIST: 
target index: 165  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

var-list  :  ID  '='  single-expr  %MARK%  var-list@0_opt_4  
 index is: 165, term type: to_deduce, before: single-expr, after: var-list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var-list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

var-list  :  ID  '='  single-expr  var-list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var-list@0_opt_4, after: %NULL%
TARGET LIST: 

var-list@0_opt_4  :  %MARK%  
 index is: 167, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var-list@0_opt_4  :  %MARK%  ','  var-list  
 index is: 168, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 169  , change_value: ','

var-list@0_opt_4  :  ','  %MARK%  var-list  
 index is: 169, term type: to_deduce, before: ',', after: var-list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var-list

var-list@0_opt_4  :  ','  var-list  %MARK%  
 index is: 170, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

block-stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

block-stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

block-stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

block-stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

block-stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

namespace-stmt  :  'namespace'  %MARK%  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

namespace-stmt  :  'namespace'  ID  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

namespace-stmt  :  'namespace'  ID  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl-stmts

namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

using-stmt  :  'using'  %MARK%  using-list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using-list
TARGET LIST: 
target index: 186  , change_value: using-list
target index: 188  , change_value: %NULL%

using-stmt  :  'using'  using-list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

using-stmt  :  'using'  using-list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

using-list  :  %MARK%  module-list  using-list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module-list

using-list  :  module-list  %MARK%  using-list@0_opt_2  
 index is: 189, term type: to_deduce, before: module-list, after: using-list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using-list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

using-list  :  module-list  using-list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using-list@0_opt_2, after: %NULL%
TARGET LIST: 

using-list@0_opt_2  :  %MARK%  
 index is: 191, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

using-list@0_opt_2  :  %MARK%  ','  using-list  
 index is: 192, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 193  , change_value: ','

using-list@0_opt_2  :  ','  %MARK%  using-list  
 index is: 193, term type: to_deduce, before: ',', after: using-list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using-list

using-list@0_opt_2  :  ','  using-list  %MARK%  
 index is: 194, term type: deduce, before: using-list, after: %NULL%
TARGET LIST: 

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

if-stmt  :  'if'  %MARK%  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 196, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 197  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

if-stmt  :  'if'  basic-expr  %MARK%  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 197, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

if-stmt  :  'if'  basic-expr  ENDL  %MARK%  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

if-stmt  :  'if'  basic-expr  ENDL  stmts  %MARK%  if-stmt@0_rep_5  'end'  ENDL  
 index is: 199, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if-stmt@0_rep_5
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%

if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  %MARK%  'end'  ENDL  
 index is: 200, term type: shift, before: if-stmt@0_rep_5, after: 'end'
TARGET LIST: 
target index: 201  , change_value: 'end'

if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  %MARK%  ENDL  
 index is: 201, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 202  , change_value: ENDL

if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  %MARK%  
 index is: 202, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

if-stmt@0_rep_5  :  %MARK%  
 index is: 203, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if-stmt@0_rep_5  :  %MARK%  else-stmt  stmts  if-stmt@0_rep_5  
 index is: 204, term type: to_deduce, before: %NULL%, after: else-stmt
TARGET LIST: 
target index: 205  , change_value: else-stmt
target index: 208  , change_value: %NULL%

if-stmt@0_rep_5  :  else-stmt  %MARK%  stmts  if-stmt@0_rep_5  
 index is: 205, term type: to_deduce, before: else-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 206  , change_value: stmts

if-stmt@0_rep_5  :  else-stmt  stmts  %MARK%  if-stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%
target index: 207  , change_value: if-stmt@0_rep_5

if-stmt@0_rep_5  :  else-stmt  stmts  if-stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if-stmt@0_rep_5, after: %NULL%
TARGET LIST: 

else-stmt  :  %MARK%  'else'  else-stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

else-stmt  :  'else'  %MARK%  else-stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else-stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else-stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

else-stmt  :  'else'  else-stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else-stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

else-stmt  :  'else'  else-stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

else-stmt@0_opt_2  :  %MARK%  
 index is: 212, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

else-stmt@0_opt_2  :  %MARK%  'if'  basic-expr  
 index is: 213, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 214  , change_value: 'if'

else-stmt@0_opt_2  :  'if'  %MARK%  basic-expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 215  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

else-stmt@0_opt_2  :  'if'  basic-expr  %MARK%  
 index is: 215, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

switch-stmt  :  'switch'  %MARK%  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic-expr
TARGET LIST: 
target index: 218  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

switch-stmt  :  'switch'  basic-expr  %MARK%  ENDL  switch-stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

switch-stmt  :  'switch'  basic-expr  ENDL  %MARK%  switch-stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch-stmts
TARGET LIST: 
target index: 220  , change_value: switch-stmts
target index: 223  , change_value: %NULL%

switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch-stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

switch-stmts  :  %MARK%  switch-stmts@0_rep_1  switch-stmts@0_rep_2  
 index is: 223, term type: to_deduce, before: %NULL%, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 224  , change_value: switch-stmts@0_rep_1
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%

switch-stmts  :  switch-stmts@0_rep_1  %MARK%  switch-stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch-stmts@0_rep_1, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch-stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

switch-stmts  :  switch-stmts@0_rep_1  switch-stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_2  :  %MARK%  ENDL  switch-stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

switch-stmts@0_rep_2  :  ENDL  %MARK%  switch-stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch-stmts@0_rep_2

switch-stmts@0_rep_2  :  ENDL  switch-stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  switch-default  switch-stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch-default
TARGET LIST: 
target index: 232  , change_value: switch-default
target index: 244  , change_value: %NULL%

switch-stmts@0_rep_1  :  switch-default  %MARK%  switch-stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch-default, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch-stmts@0_rep_1
target index: 234  , change_value: %NULL%

switch-stmts@0_rep_1  :  switch-default  switch-stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  switch-case  switch-stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch-case
TARGET LIST: 
target index: 235  , change_value: switch-case
target index: 237  , change_value: %NULL%

switch-stmts@0_rep_1  :  switch-case  %MARK%  switch-stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch-case, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch-stmts@0_rep_1

switch-stmts@0_rep_1  :  switch-case  switch-stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

switch-case  :  %MARK%  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

switch-case  :  'case'  %MARK%  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic-or-expr
TARGET LIST: 
target index: 239  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

switch-case  :  'case'  logic-or-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic-or-expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

switch-case  :  'case'  logic-or-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

switch-case  :  'case'  logic-or-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

switch-default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch-default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

switch-default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

switch-default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

switch-default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

switch-default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

while-stmt  :  'while'  %MARK%  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic-expr
TARGET LIST: 
target index: 252  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

while-stmt  :  'while'  basic-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

while-stmt  :  'while'  basic-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

while-stmt  :  'while'  basic-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

loop-stmt  :  'loop'  %MARK%  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

loop-stmt  :  'loop'  ENDL  %MARK%  stmts  loop-stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

loop-stmt  :  'loop'  ENDL  stmts  %MARK%  loop-stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop-stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop-stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

loop-stmt  :  'loop'  ENDL  stmts  loop-stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop-stmt@0_decl_4, after: %NULL%
TARGET LIST: 

loop-stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 263  , change_value: ENDL

loop-stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

loop-stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 265  , change_value: 'end'

loop-stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

loop-stmt@0_decl_4  :  %MARK%  until-stmt  
 index is: 266, term type: to_deduce, before: %NULL%, after: until-stmt
TARGET LIST: 
target index: 267  , change_value: until-stmt
target index: 268  , change_value: %NULL%

loop-stmt@0_decl_4  :  until-stmt  %MARK%  
 index is: 267, term type: deduce, before: until-stmt, after: %NULL%
TARGET LIST: 

until-stmt  :  %MARK%  'until'  basic-expr  ENDL  
 index is: 268, term type: shift, before: %NULL%, after: 'until'
TARGET LIST: 
target index: 269  , change_value: 'until'

until-stmt  :  'until'  %MARK%  basic-expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic-expr
TARGET LIST: 
target index: 270  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

until-stmt  :  'until'  basic-expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

until-stmt  :  'until'  basic-expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

for-stmt  :  'for'  %MARK%  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 273, term type: to_deduce, before: 'for', after: for-stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for-stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  %MARK%  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 274, term type: to_deduce, before: for-stmt@0_opt_2, after: for-stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for-stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  %MARK%  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 275, term type: to_deduce, before: for-stmt@0_decl_3, after: for-stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for-stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  %MARK%  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 276, term type: to_deduce, before: for-stmt@0_opt_4, after: for-stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for-stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  %MARK%  for-stmt@0_opt_6  for-body  
 index is: 277, term type: to_deduce, before: for-stmt@0_decl_5, after: for-stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for-stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  %MARK%  for-body  
 index is: 278, term type: to_deduce, before: for-stmt@0_opt_6, after: for-body
TARGET LIST: 
target index: 279  , change_value: for-body
target index: 303  , change_value: %NULL%

for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  %MARK%  
 index is: 279, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_6  :  %MARK%  
 index is: 280, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_6  :  %MARK%  basic-expr  
 index is: 281, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 282  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

for-stmt@0_opt_6  :  basic-expr  %MARK%  
 index is: 282, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

for-stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 284  , change_value: ','

for-stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

for-stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 286  , change_value: ';'

for-stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

for-stmt@0_opt_4  :  %MARK%  
 index is: 287, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_4  :  %MARK%  basic-expr  
 index is: 288, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 289  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

for-stmt@0_opt_4  :  basic-expr  %MARK%  
 index is: 289, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

for-stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 291  , change_value: ','

for-stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

for-stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 293  , change_value: ';'

for-stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

for-stmt@0_opt_2  :  %MARK%  
 index is: 294, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_2  :  %MARK%  var-def  
 index is: 295, term type: to_deduce, before: %NULL%, after: var-def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 296  , change_value: var-def

for-stmt@0_opt_2  :  var-def  %MARK%  
 index is: 296, term type: deduce, before: var-def, after: %NULL%
TARGET LIST: 

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

foreach-stmt  :  'foreach'  %MARK%  ID  'in'  basic-expr  for-body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

foreach-stmt  :  'foreach'  ID  %MARK%  'in'  basic-expr  for-body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

foreach-stmt  :  'foreach'  ID  'in'  %MARK%  basic-expr  for-body  
 index is: 300, term type: to_deduce, before: 'in', after: basic-expr
TARGET LIST: 
target index: 301  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

foreach-stmt  :  'foreach'  ID  'in'  basic-expr  %MARK%  for-body  
 index is: 301, term type: to_deduce, before: basic-expr, after: for-body
TARGET LIST: 
target index: 302  , change_value: for-body
target index: 303  , change_value: %NULL%

foreach-stmt  :  'foreach'  ID  'in'  basic-expr  for-body  %MARK%  
 index is: 302, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

for-body  :  %MARK%  for-body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for-body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for-body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for-body  :  for-body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for-body@0_decl_1, after: %NULL%
TARGET LIST: 

for-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

for-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

for-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

for-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

for-body@0_decl_1  :  %MARK%  'do'  basic-expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

for-body@0_decl_1  :  'do'  %MARK%  basic-expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic-expr
TARGET LIST: 
target index: 312  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

for-body@0_decl_1  :  'do'  basic-expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic-expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

for-body@0_decl_1  :  'do'  basic-expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

function-stmt  :  'function'  %MARK%  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

function-stmt  :  'function'  ID  %MARK%  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

function-stmt  :  'function'  ID  '('  %MARK%  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 317, term type: to_deduce, before: '(', after: function-stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function-stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  %MARK%  ')'  function-stmt@0_opt_6  function-body  
 index is: 318, term type: shift, before: function-stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  %MARK%  function-stmt@0_opt_6  function-body  
 index is: 319, term type: to_deduce, before: ')', after: function-stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function-stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  %MARK%  function-body  
 index is: 320, term type: to_deduce, before: function-stmt@0_opt_6, after: function-body
TARGET LIST: 
target index: 321  , change_value: function-body
target index: 328  , change_value: %NULL%

function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  %MARK%  
 index is: 321, term type: deduce, before: function-body, after: %NULL%
TARGET LIST: 

function-stmt@0_opt_6  :  %MARK%  
 index is: 322, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, term type: shift, before: %NULL%, after: 'override'
TARGET LIST: 
target index: 324  , change_value: 'override'

function-stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

function-stmt@0_opt_4  :  %MARK%  
 index is: 325, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-stmt@0_opt_4  :  %MARK%  argument-list  
 index is: 326, term type: to_deduce, before: %NULL%, after: argument-list
TARGET LIST: 
target index: 327  , change_value: argument-list
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%

function-stmt@0_opt_4  :  argument-list  %MARK%  
 index is: 327, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

function-body  :  %MARK%  function-body@0_decl_1  
 index is: 328, term type: to_deduce, before: %NULL%, after: function-body@0_decl_1
TARGET LIST: 
target index: 329  , change_value: function-body@0_decl_1
target index: 330  , change_value: %NULL%
target index: 335  , change_value: %NULL%

function-body  :  function-body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function-body@0_decl_1, after: %NULL%
TARGET LIST: 

function-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 331  , change_value: ENDL

function-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

function-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

function-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

function-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

function-body@0_decl_1  :  %MARK%  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 335, term type: to_deduce, before: %NULL%, after: function-body@0_decl_1@0_opt_1
TARGET LIST: 
target index: 336  , change_value: function-body@0_decl_1@0_opt_1
target index: 344  , change_value: %NULL%
target index: 345  , change_value: %NULL%

function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  %MARK%  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 336, term type: shift, before: function-body@0_decl_1@0_opt_1, after: '{'
TARGET LIST: 
target index: 337  , change_value: '{'

function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  %MARK%  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 337, term type: to_deduce, before: '{', after: function-body@0_decl_1@0_opt_3
TARGET LIST: 
target index: 338  , change_value: function-body@0_decl_1@0_opt_3
target index: 341  , change_value: %NULL%
target index: 342  , change_value: %NULL%

function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  %MARK%  stmts  '}'  
 index is: 338, term type: to_deduce, before: function-body@0_decl_1@0_opt_3, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 339  , change_value: stmts

function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  %MARK%  '}'  
 index is: 339, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 340  , change_value: '}'

function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  %MARK%  
 index is: 340, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_3  :  %MARK%  
 index is: 341, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_3  :  %MARK%  ENDL  
 index is: 342, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 343  , change_value: ENDL

function-body@0_decl_1@0_opt_3  :  ENDL  %MARK%  
 index is: 343, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_1  :  %MARK%  
 index is: 344, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_1  :  %MARK%  ENDL  
 index is: 345, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 346  , change_value: ENDL

function-body@0_decl_1@0_opt_1  :  ENDL  %MARK%  
 index is: 346, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

return-stmt  :  'return'  %MARK%  return-stmt@0_opt_2  endline  
 index is: 348, term type: to_deduce, before: 'return', after: return-stmt@0_opt_2
TARGET LIST: 
target index: 349  , change_value: return-stmt@0_opt_2
target index: 351  , change_value: %NULL%
target index: 352  , change_value: %NULL%

return-stmt  :  'return'  return-stmt@0_opt_2  %MARK%  endline  
 index is: 349, term type: to_deduce, before: return-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 350  , change_value: endline

return-stmt  :  'return'  return-stmt@0_opt_2  endline  %MARK%  
 index is: 350, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

return-stmt@0_opt_2  :  %MARK%  
 index is: 351, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

return-stmt@0_opt_2  :  %MARK%  expr  
 index is: 352, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 353  , change_value: expr
target index: 411  , change_value: %NULL%

return-stmt@0_opt_2  :  expr  %MARK%  
 index is: 353, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

try-stmt  :  'try'  %MARK%  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 355, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 356  , change_value: ENDL

try-stmt  :  'try'  ENDL  %MARK%  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 356, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 357  , change_value: stmts

try-stmt  :  'try'  ENDL  stmts  %MARK%  try-stmt@0_rep_4  'end'  ENDL  
 index is: 357, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 358  , change_value: try-stmt@0_rep_4
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%

try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 358, term type: shift, before: try-stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 359  , change_value: 'end'

try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 359, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 360  , change_value: ENDL

try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 360, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

try-stmt@0_rep_4  :  %MARK%  
 index is: 361, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try-stmt@0_rep_4  :  %MARK%  catch-stmt  stmts  try-stmt@0_rep_4  
 index is: 362, term type: to_deduce, before: %NULL%, after: catch-stmt
TARGET LIST: 
target index: 363  , change_value: catch-stmt
target index: 366  , change_value: %NULL%

try-stmt@0_rep_4  :  catch-stmt  %MARK%  stmts  try-stmt@0_rep_4  
 index is: 363, term type: to_deduce, before: catch-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 364  , change_value: stmts

try-stmt@0_rep_4  :  catch-stmt  stmts  %MARK%  try-stmt@0_rep_4  
 index is: 364, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%
target index: 365  , change_value: try-stmt@0_rep_4

try-stmt@0_rep_4  :  catch-stmt  stmts  try-stmt@0_rep_4  %MARK%  
 index is: 365, term type: deduce, before: try-stmt@0_rep_4, after: %NULL%
TARGET LIST: 

catch-stmt  :  %MARK%  'catch'  ID  catch-stmt@0_opt_3  ENDL  
 index is: 366, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 367  , change_value: 'catch'

catch-stmt  :  'catch'  %MARK%  ID  catch-stmt@0_opt_3  ENDL  
 index is: 367, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 368  , change_value: ID

catch-stmt  :  'catch'  ID  %MARK%  catch-stmt@0_opt_3  ENDL  
 index is: 368, term type: to_deduce, before: ID, after: catch-stmt@0_opt_3
TARGET LIST: 
target index: 369  , change_value: catch-stmt@0_opt_3
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  %MARK%  ENDL  
 index is: 369, term type: shift, before: catch-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 370  , change_value: ENDL

catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  ENDL  %MARK%  
 index is: 370, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

catch-stmt@0_opt_3  :  %MARK%  
 index is: 371, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

catch-stmt@0_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 372, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 373  , change_value: ':'

catch-stmt@0_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 373, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 374  , change_value: visit-expr
target index: 655  , change_value: %NULL%

catch-stmt@0_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 374, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

throw-stmt  :  'throw'  %MARK%  throw-stmt@0_opt_2  endline  
 index is: 376, term type: to_deduce, before: 'throw', after: throw-stmt@0_opt_2
TARGET LIST: 
target index: 377  , change_value: throw-stmt@0_opt_2
target index: 379  , change_value: %NULL%
target index: 380  , change_value: %NULL%

throw-stmt  :  'throw'  throw-stmt@0_opt_2  %MARK%  endline  
 index is: 377, term type: to_deduce, before: throw-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 378  , change_value: endline

throw-stmt  :  'throw'  throw-stmt@0_opt_2  endline  %MARK%  
 index is: 378, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

throw-stmt@0_opt_2  :  %MARK%  
 index is: 379, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

throw-stmt@0_opt_2  :  %MARK%  expr  
 index is: 380, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 381  , change_value: expr
target index: 411  , change_value: %NULL%

throw-stmt@0_opt_2  :  expr  %MARK%  
 index is: 381, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

class-stmt  :  class-stmt@0_decl_1  %MARK%  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 383, term type: shift, before: class-stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 384  , change_value: ID

class-stmt  :  class-stmt@0_decl_1  ID  %MARK%  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 384, term type: to_deduce, before: ID, after: class-stmt@0_opt_3
TARGET LIST: 
target index: 385  , change_value: class-stmt@0_opt_3
target index: 390  , change_value: %NULL%
target index: 391  , change_value: %NULL%

class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 385, term type: shift, before: class-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 386  , change_value: ENDL

class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 386, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 387  , change_value: decl-stmts

class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 387, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 388  , change_value: 'end'

class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 388, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 389  , change_value: ENDL

class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 389, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

class-stmt@0_opt_3  :  %MARK%  
 index is: 390, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

class-stmt@0_opt_3  :  %MARK%  'extends'  visit-expr  
 index is: 391, term type: shift, before: %NULL%, after: 'extends'
TARGET LIST: 
target index: 392  , change_value: 'extends'

class-stmt@0_opt_3  :  'extends'  %MARK%  visit-expr  
 index is: 392, term type: to_deduce, before: 'extends', after: visit-expr
TARGET LIST: 
target index: 393  , change_value: visit-expr
target index: 655  , change_value: %NULL%

class-stmt@0_opt_3  :  'extends'  visit-expr  %MARK%  
 index is: 393, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 395, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

class-stmt@0_decl_1  :  'class'  %MARK%  
 index is: 397, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

control-stmt  :  control-stmt@0_decl_1  %MARK%  endline  
 index is: 399, term type: to_deduce, before: control-stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 400  , change_value: endline

control-stmt  :  control-stmt@0_decl_1  endline  %MARK%  
 index is: 400, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 402, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

control-stmt@0_decl_1  :  'break'  %MARK%  
 index is: 404, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

expr-stmt  :  expr  %MARK%  endline  
 index is: 406, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 407  , change_value: endline

expr-stmt  :  expr  endline  %MARK%  
 index is: 407, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

end-stmt  :  %MARK%  'end'  ENDL  
 index is: 408, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 409  , change_value: 'end'

end-stmt  :  'end'  %MARK%  ENDL  
 index is: 409, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 410  , change_value: ENDL

end-stmt  :  'end'  ENDL  %MARK%  
 index is: 410, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

expr  :  single-expr  %MARK%  expr@0_opt_2  
 index is: 412, term type: to_deduce, before: single-expr, after: expr@0_opt_2
TARGET LIST: 
target index: 413  , change_value: expr@0_opt_2
target index: 414  , change_value: %NULL%
target index: 415  , change_value: %NULL%

expr  :  single-expr  expr@0_opt_2  %MARK%  
 index is: 413, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  
 index is: 414, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 415, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 416  , change_value: ','

expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 416, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 417  , change_value: expr

expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 417, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  basic-expr  %MARK%  
 index is: 419, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

single-expr  :  lambda-expr  %MARK%  
 index is: 421, term type: deduce, before: lambda-expr, after: %NULL%
TARGET LIST: 

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  cond-expr  %MARK%  basic-expr@1_opt_2  
 index is: 423, term type: to_deduce, before: cond-expr, after: basic-expr@1_opt_2
TARGET LIST: 
target index: 424  , change_value: basic-expr@1_opt_2
target index: 429  , change_value: %NULL%
target index: 430  , change_value: %NULL%

basic-expr  :  cond-expr  basic-expr@1_opt_2  %MARK%  
 index is: 424, term type: deduce, before: basic-expr@1_opt_2, after: %NULL%
TARGET LIST: 

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 427  , change_value: '='

basic-expr  :  var-bind  '='  %MARK%  cond-expr  
 index is: 427, term type: to_deduce, before: '=', after: cond-expr
TARGET LIST: 
target index: 428  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  var-bind  '='  cond-expr  %MARK%  
 index is: 428, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

basic-expr@1_opt_2  :  %MARK%  
 index is: 429, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

basic-expr@1_opt_2  :  %MARK%  asi-op  single-expr  
 index is: 430, term type: to_deduce, before: %NULL%, after: asi-op
TARGET LIST: 
target index: 431  , change_value: asi-op
target index: 433  , change_value: %NULL%
target index: 435  , change_value: %NULL%
target index: 437  , change_value: %NULL%
target index: 439  , change_value: %NULL%
target index: 441  , change_value: %NULL%
target index: 443  , change_value: %NULL%
target index: 445  , change_value: %NULL%
target index: 447  , change_value: %NULL%

basic-expr@1_opt_2  :  asi-op  %MARK%  single-expr  
 index is: 431, term type: to_deduce, before: asi-op, after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 432  , change_value: single-expr

basic-expr@1_opt_2  :  asi-op  single-expr  %MARK%  
 index is: 432, term type: deduce, before: single-expr, after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '^='  
 index is: 433, term type: shift, before: %NULL%, after: '^='
TARGET LIST: 
target index: 434  , change_value: '^='

asi-op  :  '^='  %MARK%  
 index is: 434, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '%='  
 index is: 435, term type: shift, before: %NULL%, after: '%='
TARGET LIST: 
target index: 436  , change_value: '%='

asi-op  :  '%='  %MARK%  
 index is: 436, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '/='  
 index is: 437, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 438  , change_value: '/='

asi-op  :  '/='  %MARK%  
 index is: 438, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '*='  
 index is: 439, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 440  , change_value: '*='

asi-op  :  '*='  %MARK%  
 index is: 440, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '-='  
 index is: 441, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 442  , change_value: '-='

asi-op  :  '-='  %MARK%  
 index is: 442, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '+='  
 index is: 443, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 444  , change_value: '+='

asi-op  :  '+='  %MARK%  
 index is: 444, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  ':='  
 index is: 445, term type: shift, before: %NULL%, after: ':='
TARGET LIST: 
target index: 446  , change_value: ':='

asi-op  :  ':='  %MARK%  
 index is: 446, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

asi-op  :  %MARK%  '='  
 index is: 447, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 448  , change_value: '='

asi-op  :  '='  %MARK%  
 index is: 448, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

lambda-expr  :  '['  %MARK%  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 450, term type: to_deduce, before: '[', after: lambda-expr@0_opt_2
TARGET LIST: 
target index: 451  , change_value: lambda-expr@0_opt_2
target index: 460  , change_value: %NULL%
target index: 461  , change_value: %NULL%

lambda-expr  :  '['  lambda-expr@0_opt_2  %MARK%  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 451, term type: shift, before: lambda-expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 452  , change_value: ']'

lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  %MARK%  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 452, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 453  , change_value: '('

lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  %MARK%  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 453, term type: to_deduce, before: '(', after: lambda-expr@0_opt_5
TARGET LIST: 
target index: 454  , change_value: lambda-expr@0_opt_5
target index: 457  , change_value: %NULL%
target index: 458  , change_value: %NULL%

lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  %MARK%  ')'  lambda-body  
 index is: 454, term type: shift, before: lambda-expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 455  , change_value: ')'

lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  %MARK%  lambda-body  
 index is: 455, term type: to_deduce, before: ')', after: lambda-body
TARGET LIST: 
target index: 456  , change_value: lambda-body
target index: 495  , change_value: %NULL%
target index: 498  , change_value: %NULL%

lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  %MARK%  
 index is: 456, term type: deduce, before: lambda-body, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_5  :  %MARK%  
 index is: 457, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_5  :  %MARK%  argument-list  
 index is: 458, term type: to_deduce, before: %NULL%, after: argument-list
TARGET LIST: 
target index: 459  , change_value: argument-list
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%

lambda-expr@0_opt_5  :  argument-list  %MARK%  
 index is: 459, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_2  :  %MARK%  
 index is: 460, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_2  :  %MARK%  capture-list  
 index is: 461, term type: to_deduce, before: %NULL%, after: capture-list
TARGET LIST: 
target index: 462  , change_value: capture-list
target index: 463  , change_value: %NULL%

lambda-expr@0_opt_2  :  capture-list  %MARK%  
 index is: 462, term type: deduce, before: capture-list, after: %NULL%
TARGET LIST: 

capture-list  :  %MARK%  capture-list@0_opt_1  ID  capture-list@0_rep_3  
 index is: 463, term type: to_deduce, before: %NULL%, after: capture-list@0_opt_1
TARGET LIST: 
target index: 464  , change_value: capture-list@0_opt_1
target index: 472  , change_value: %NULL%
target index: 473  , change_value: %NULL%

capture-list  :  capture-list@0_opt_1  %MARK%  ID  capture-list@0_rep_3  
 index is: 464, term type: shift, before: capture-list@0_opt_1, after: ID
TARGET LIST: 
target index: 465  , change_value: ID

capture-list  :  capture-list@0_opt_1  ID  %MARK%  capture-list@0_rep_3  
 index is: 465, term type: to_deduce, before: ID, after: capture-list@0_rep_3
TARGET LIST: 
target index: 466  , change_value: capture-list@0_rep_3
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%

capture-list  :  capture-list@0_opt_1  ID  capture-list@0_rep_3  %MARK%  
 index is: 466, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

capture-list@0_rep_3  :  %MARK%  
 index is: 467, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_rep_3  :  %MARK%  ','  capture-list  capture-list@0_rep_3  
 index is: 468, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 469  , change_value: ','

capture-list@0_rep_3  :  ','  %MARK%  capture-list  capture-list@0_rep_3  
 index is: 469, term type: to_deduce, before: ',', after: capture-list
TARGET LIST: 
target index: 463  , change_value: %NULL%
target index: 470  , change_value: capture-list

capture-list@0_rep_3  :  ','  capture-list  %MARK%  capture-list@0_rep_3  
 index is: 470, term type: to_deduce, before: capture-list, after: capture-list@0_rep_3
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%
target index: 471  , change_value: capture-list@0_rep_3

capture-list@0_rep_3  :  ','  capture-list  capture-list@0_rep_3  %MARK%  
 index is: 471, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

capture-list@0_opt_1  :  %MARK%  
 index is: 472, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_opt_1  :  %MARK%  '='  
 index is: 473, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 474  , change_value: '='

capture-list@0_opt_1  :  '='  %MARK%  
 index is: 474, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

argument-list  :  %MARK%  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 475, term type: to_deduce, before: %NULL%, after: argument-list@1_opt_1
TARGET LIST: 
target index: 476  , change_value: argument-list@1_opt_1
target index: 492  , change_value: %NULL%
target index: 493  , change_value: %NULL%

argument-list  :  argument-list@1_opt_1  %MARK%  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 476, term type: shift, before: argument-list@1_opt_1, after: ID
TARGET LIST: 
target index: 477  , change_value: ID

argument-list  :  argument-list@1_opt_1  ID  %MARK%  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 477, term type: to_deduce, before: ID, after: argument-list@1_opt_3
TARGET LIST: 
target index: 478  , change_value: argument-list@1_opt_3
target index: 488  , change_value: %NULL%
target index: 489  , change_value: %NULL%

argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  %MARK%  argument-list@1_rep_4  
 index is: 478, term type: to_deduce, before: argument-list@1_opt_3, after: argument-list@1_rep_4
TARGET LIST: 
target index: 479  , change_value: argument-list@1_rep_4
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%

argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  %MARK%  
 index is: 479, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

argument-list  :  %MARK%  '...'  ID  
 index is: 480, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 481  , change_value: '...'

argument-list  :  '...'  %MARK%  ID  
 index is: 481, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 482  , change_value: ID

argument-list  :  '...'  ID  %MARK%  
 index is: 482, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

argument-list@1_rep_4  :  %MARK%  
 index is: 483, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_rep_4  :  %MARK%  ','  argument-list  argument-list@1_rep_4  
 index is: 484, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 485  , change_value: ','

argument-list@1_rep_4  :  ','  %MARK%  argument-list  argument-list@1_rep_4  
 index is: 485, term type: to_deduce, before: ',', after: argument-list
TARGET LIST: 
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%
target index: 486  , change_value: argument-list

argument-list@1_rep_4  :  ','  argument-list  %MARK%  argument-list@1_rep_4  
 index is: 486, term type: to_deduce, before: argument-list, after: argument-list@1_rep_4
TARGET LIST: 
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%
target index: 487  , change_value: argument-list@1_rep_4

argument-list@1_rep_4  :  ','  argument-list  argument-list@1_rep_4  %MARK%  
 index is: 487, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

argument-list@1_opt_3  :  %MARK%  
 index is: 488, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 489, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 490  , change_value: ':'

argument-list@1_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 490, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 491  , change_value: visit-expr
target index: 655  , change_value: %NULL%

argument-list@1_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 491, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

argument-list@1_opt_1  :  %MARK%  
 index is: 492, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_1  :  %MARK%  '='  
 index is: 493, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 494  , change_value: '='

argument-list@1_opt_1  :  '='  %MARK%  
 index is: 494, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

lambda-body  :  %MARK%  '->'  cond-expr  
 index is: 495, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 496  , change_value: '->'

lambda-body  :  '->'  %MARK%  cond-expr  
 index is: 496, term type: to_deduce, before: '->', after: cond-expr
TARGET LIST: 
target index: 497  , change_value: cond-expr
target index: 511  , change_value: %NULL%

lambda-body  :  '->'  cond-expr  %MARK%  
 index is: 497, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

lambda-body  :  %MARK%  '{'  lambda-body@0_rep_2  '}'  
 index is: 498, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 499  , change_value: '{'

lambda-body  :  '{'  %MARK%  lambda-body@0_rep_2  '}'  
 index is: 499, term type: to_deduce, before: '{', after: lambda-body@0_rep_2
TARGET LIST: 
target index: 500  , change_value: lambda-body@0_rep_2
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%

lambda-body  :  '{'  lambda-body@0_rep_2  %MARK%  '}'  
 index is: 500, term type: shift, before: lambda-body@0_rep_2, after: '}'
TARGET LIST: 
target index: 501  , change_value: '}'

lambda-body  :  '{'  lambda-body@0_rep_2  '}'  %MARK%  
 index is: 501, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2  :  %MARK%  
 index is: 502, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2  :  %MARK%  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 504  , change_value: statement

lambda-body@0_rep_2  :  statement  %MARK%  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 504, term type: to_deduce, before: statement, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 505  , change_value: lambda-body@0_rep_2@0_rep_2
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%

lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  %MARK%  lambda-body@0_rep_2  
 index is: 505, term type: to_deduce, before: lambda-body@0_rep_2@0_rep_2, after: lambda-body@0_rep_2
TARGET LIST: 
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%
target index: 506  , change_value: lambda-body@0_rep_2

lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  %MARK%  
 index is: 506, term type: deduce, before: lambda-body@0_rep_2, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 507, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda-body@0_rep_2@0_rep_2  
 index is: 508, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 509  , change_value: ENDL

lambda-body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda-body@0_rep_2@0_rep_2  
 index is: 509, term type: to_deduce, before: ENDL, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%
target index: 510  , change_value: lambda-body@0_rep_2@0_rep_2

lambda-body@0_rep_2@0_rep_2  :  ENDL  lambda-body@0_rep_2@0_rep_2  %MARK%  
 index is: 510, term type: deduce, before: lambda-body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

cond-expr  :  logic-or-expr  %MARK%  cond-expr@0_opt_2  
 index is: 512, term type: to_deduce, before: logic-or-expr, after: cond-expr@0_opt_2
TARGET LIST: 
target index: 513  , change_value: cond-expr@0_opt_2
target index: 514  , change_value: %NULL%
target index: 515  , change_value: %NULL%

cond-expr  :  logic-or-expr  cond-expr@0_opt_2  %MARK%  
 index is: 513, term type: deduce, before: cond-expr@0_opt_2, after: %NULL%
TARGET LIST: 

cond-expr@0_opt_2  :  %MARK%  
 index is: 514, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

cond-expr@0_opt_2  :  %MARK%  cond-postfix  
 index is: 515, term type: to_deduce, before: %NULL%, after: cond-postfix
TARGET LIST: 
target index: 516  , change_value: cond-postfix
target index: 517  , change_value: %NULL%
target index: 520  , change_value: %NULL%

cond-expr@0_opt_2  :  cond-postfix  %MARK%  
 index is: 516, term type: deduce, before: cond-postfix, after: %NULL%
TARGET LIST: 

cond-postfix  :  %MARK%  ':'  logic-or-expr  
 index is: 517, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 518  , change_value: ':'

cond-postfix  :  ':'  %MARK%  logic-or-expr  
 index is: 518, term type: to_deduce, before: ':', after: logic-or-expr
TARGET LIST: 
target index: 519  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

cond-postfix  :  ':'  logic-or-expr  %MARK%  
 index is: 519, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

cond-postfix  :  %MARK%  '?'  logic-or-expr  ':'  cond-expr  
 index is: 520, term type: shift, before: %NULL%, after: '?'
TARGET LIST: 
target index: 521  , change_value: '?'

cond-postfix  :  '?'  %MARK%  logic-or-expr  ':'  cond-expr  
 index is: 521, term type: to_deduce, before: '?', after: logic-or-expr
TARGET LIST: 
target index: 522  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

cond-postfix  :  '?'  logic-or-expr  %MARK%  ':'  cond-expr  
 index is: 522, term type: shift, before: logic-or-expr, after: ':'
TARGET LIST: 
target index: 523  , change_value: ':'

cond-postfix  :  '?'  logic-or-expr  ':'  %MARK%  cond-expr  
 index is: 523, term type: to_deduce, before: ':', after: cond-expr
TARGET LIST: 
target index: 511  , change_value: %NULL%
target index: 524  , change_value: cond-expr

cond-postfix  :  '?'  logic-or-expr  ':'  cond-expr  %MARK%  
 index is: 524, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-or-expr  :  logic-and-expr  %MARK%  logic-or-expr@0_opt_2  
 index is: 526, term type: to_deduce, before: logic-and-expr, after: logic-or-expr@0_opt_2
TARGET LIST: 
target index: 527  , change_value: logic-or-expr@0_opt_2
target index: 528  , change_value: %NULL%
target index: 529  , change_value: %NULL%

logic-or-expr  :  logic-and-expr  logic-or-expr@0_opt_2  %MARK%  
 index is: 527, term type: deduce, before: logic-or-expr@0_opt_2, after: %NULL%
TARGET LIST: 

logic-or-expr@0_opt_2  :  %MARK%  
 index is: 528, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic-or-expr@0_opt_2  :  %MARK%  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  
 index is: 529, term type: to_deduce, before: %NULL%, after: logic-or-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 530  , change_value: logic-or-expr@0_opt_2@0_decl_1
target index: 532  , change_value: %NULL%
target index: 534  , change_value: %NULL%

logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  %MARK%  logic-or-expr  
 index is: 530, term type: to_deduce, before: logic-or-expr@0_opt_2@0_decl_1, after: logic-or-expr
TARGET LIST: 
target index: 525  , change_value: %NULL%
target index: 531  , change_value: logic-or-expr

logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  %MARK%  
 index is: 531, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 532, term type: shift, before: %NULL%, after: 'or'
TARGET LIST: 
target index: 533  , change_value: 'or'

logic-or-expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 533, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 534, term type: shift, before: %NULL%, after: '||'
TARGET LIST: 
target index: 535  , change_value: '||'

logic-or-expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 535, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

logic-and-expr  :  equal-expr  %MARK%  logic-and-expr@0_opt_2  
 index is: 537, term type: to_deduce, before: equal-expr, after: logic-and-expr@0_opt_2
TARGET LIST: 
target index: 538  , change_value: logic-and-expr@0_opt_2
target index: 539  , change_value: %NULL%
target index: 540  , change_value: %NULL%

logic-and-expr  :  equal-expr  logic-and-expr@0_opt_2  %MARK%  
 index is: 538, term type: deduce, before: logic-and-expr@0_opt_2, after: %NULL%
TARGET LIST: 

logic-and-expr@0_opt_2  :  %MARK%  
 index is: 539, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic-and-expr@0_opt_2  :  %MARK%  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  
 index is: 540, term type: to_deduce, before: %NULL%, after: logic-and-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 541  , change_value: logic-and-expr@0_opt_2@0_decl_1
target index: 543  , change_value: %NULL%
target index: 545  , change_value: %NULL%

logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  %MARK%  logic-and-expr  
 index is: 541, term type: to_deduce, before: logic-and-expr@0_opt_2@0_decl_1, after: logic-and-expr
TARGET LIST: 
target index: 536  , change_value: %NULL%
target index: 542  , change_value: logic-and-expr

logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  %MARK%  
 index is: 542, term type: deduce, before: logic-and-expr, after: %NULL%
TARGET LIST: 

logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 543, term type: shift, before: %NULL%, after: 'and'
TARGET LIST: 
target index: 544  , change_value: 'and'

logic-and-expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 544, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 545, term type: shift, before: %NULL%, after: '&&'
TARGET LIST: 
target index: 546  , change_value: '&&'

logic-and-expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 546, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

equal-expr  :  relat-expr  %MARK%  equal-expr@0_opt_2  
 index is: 548, term type: to_deduce, before: relat-expr, after: equal-expr@0_opt_2
TARGET LIST: 
target index: 549  , change_value: equal-expr@0_opt_2
target index: 550  , change_value: %NULL%
target index: 551  , change_value: %NULL%

equal-expr  :  relat-expr  equal-expr@0_opt_2  %MARK%  
 index is: 549, term type: deduce, before: equal-expr@0_opt_2, after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2  :  %MARK%  
 index is: 550, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2  :  %MARK%  equal-expr@0_opt_2@0_decl_1  equal-expr  
 index is: 551, term type: to_deduce, before: %NULL%, after: equal-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 552  , change_value: equal-expr@0_opt_2@0_decl_1
target index: 554  , change_value: %NULL%
target index: 556  , change_value: %NULL%
target index: 558  , change_value: %NULL%
target index: 560  , change_value: %NULL%

equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  %MARK%  equal-expr  
 index is: 552, term type: to_deduce, before: equal-expr@0_opt_2@0_decl_1, after: equal-expr
TARGET LIST: 
target index: 547  , change_value: %NULL%
target index: 553  , change_value: equal-expr

equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  equal-expr  %MARK%  
 index is: 553, term type: deduce, before: equal-expr, after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2@0_decl_1  :  %MARK%  'not'  
 index is: 554, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 555  , change_value: 'not'

equal-expr@0_opt_2@0_decl_1  :  'not'  %MARK%  
 index is: 555, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2@0_decl_1  :  %MARK%  'is'  
 index is: 556, term type: shift, before: %NULL%, after: 'is'
TARGET LIST: 
target index: 557  , change_value: 'is'

equal-expr@0_opt_2@0_decl_1  :  'is'  %MARK%  
 index is: 557, term type: deduce, before: 'is', after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 558, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 559  , change_value: '!='

equal-expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 559, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 560, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 561  , change_value: '=='

equal-expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 561, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

relat-expr  :  add-expr  %MARK%  relat-expr@0_opt_2  
 index is: 563, term type: to_deduce, before: add-expr, after: relat-expr@0_opt_2
TARGET LIST: 
target index: 564  , change_value: relat-expr@0_opt_2
target index: 565  , change_value: %NULL%
target index: 566  , change_value: %NULL%

relat-expr  :  add-expr  relat-expr@0_opt_2  %MARK%  
 index is: 564, term type: deduce, before: relat-expr@0_opt_2, after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2  :  %MARK%  
 index is: 565, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2  :  %MARK%  relat-expr@0_opt_2@0_decl_1  relat-expr  
 index is: 566, term type: to_deduce, before: %NULL%, after: relat-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 567  , change_value: relat-expr@0_opt_2@0_decl_1
target index: 569  , change_value: %NULL%
target index: 571  , change_value: %NULL%
target index: 573  , change_value: %NULL%
target index: 575  , change_value: %NULL%

relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  %MARK%  relat-expr  
 index is: 567, term type: to_deduce, before: relat-expr@0_opt_2@0_decl_1, after: relat-expr
TARGET LIST: 
target index: 562  , change_value: %NULL%
target index: 568  , change_value: relat-expr

relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  relat-expr  %MARK%  
 index is: 568, term type: deduce, before: relat-expr, after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 569, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 570  , change_value: '<='

relat-expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 570, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 571, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 572  , change_value: '>='

relat-expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 572, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 573, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 574  , change_value: '<'

relat-expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 574, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 575, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 576  , change_value: '>'

relat-expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 576, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

add-expr  :  mul-expr  %MARK%  add-expr@0_opt_2  
 index is: 578, term type: to_deduce, before: mul-expr, after: add-expr@0_opt_2
TARGET LIST: 
target index: 579  , change_value: add-expr@0_opt_2
target index: 580  , change_value: %NULL%
target index: 581  , change_value: %NULL%

add-expr  :  mul-expr  add-expr@0_opt_2  %MARK%  
 index is: 579, term type: deduce, before: add-expr@0_opt_2, after: %NULL%
TARGET LIST: 

add-expr@0_opt_2  :  %MARK%  
 index is: 580, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

add-expr@0_opt_2  :  %MARK%  add-expr@0_opt_2@0_decl_1  add-expr  
 index is: 581, term type: to_deduce, before: %NULL%, after: add-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 582  , change_value: add-expr@0_opt_2@0_decl_1
target index: 584  , change_value: %NULL%
target index: 586  , change_value: %NULL%

add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  %MARK%  add-expr  
 index is: 582, term type: to_deduce, before: add-expr@0_opt_2@0_decl_1, after: add-expr
TARGET LIST: 
target index: 577  , change_value: %NULL%
target index: 583  , change_value: add-expr

add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  add-expr  %MARK%  
 index is: 583, term type: deduce, before: add-expr, after: %NULL%
TARGET LIST: 

add-expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 584, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 585  , change_value: '-'

add-expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 585, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

add-expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 586, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 587  , change_value: '+'

add-expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 587, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

mul-expr  :  unary-expr  %MARK%  mul-expr@0_opt_2  
 index is: 589, term type: to_deduce, before: unary-expr, after: mul-expr@0_opt_2
TARGET LIST: 
target index: 590  , change_value: mul-expr@0_opt_2
target index: 591  , change_value: %NULL%
target index: 592  , change_value: %NULL%

mul-expr  :  unary-expr  mul-expr@0_opt_2  %MARK%  
 index is: 590, term type: deduce, before: mul-expr@0_opt_2, after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2  :  %MARK%  
 index is: 591, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2  :  %MARK%  mul-expr@0_opt_2@0_decl_1  mul-expr  
 index is: 592, term type: to_deduce, before: %NULL%, after: mul-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 593  , change_value: mul-expr@0_opt_2@0_decl_1
target index: 595  , change_value: %NULL%
target index: 597  , change_value: %NULL%
target index: 599  , change_value: %NULL%
target index: 601  , change_value: %NULL%

mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  %MARK%  mul-expr  
 index is: 593, term type: to_deduce, before: mul-expr@0_opt_2@0_decl_1, after: mul-expr
TARGET LIST: 
target index: 588  , change_value: %NULL%
target index: 594  , change_value: mul-expr

mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  mul-expr  %MARK%  
 index is: 594, term type: deduce, before: mul-expr, after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 595, term type: shift, before: %NULL%, after: '^'
TARGET LIST: 
target index: 596  , change_value: '^'

mul-expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 596, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 597, term type: shift, before: %NULL%, after: '%'
TARGET LIST: 
target index: 598  , change_value: '%'

mul-expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 598, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 599, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 600  , change_value: '/'

mul-expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 600, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 601, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 602  , change_value: '*'

mul-expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 602, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  prim-expr  %MARK%  unary-expr@2_opt_2  
 index is: 604, term type: to_deduce, before: prim-expr, after: unary-expr@2_opt_2
TARGET LIST: 
target index: 605  , change_value: unary-expr@2_opt_2
target index: 613  , change_value: %NULL%
target index: 614  , change_value: %NULL%

unary-expr  :  prim-expr  unary-expr@2_opt_2  %MARK%  
 index is: 605, term type: deduce, before: unary-expr@2_opt_2, after: %NULL%
TARGET LIST: 

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  unary-expr@1_decl_1  %MARK%  unary-expr  unary-expr@1_opt_3  
 index is: 607, term type: to_deduce, before: unary-expr@1_decl_1, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 608  , change_value: unary-expr
target index: 610  , change_value: %NULL%

unary-expr  :  unary-expr@1_decl_1  unary-expr  %MARK%  unary-expr@1_opt_3  
 index is: 608, term type: to_deduce, before: unary-expr, after: unary-expr@1_opt_3
TARGET LIST: 
target index: 609  , change_value: unary-expr@1_opt_3
target index: 616  , change_value: %NULL%
target index: 617  , change_value: %NULL%

unary-expr  :  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  %MARK%  
 index is: 609, term type: deduce, before: unary-expr@1_opt_3, after: %NULL%
TARGET LIST: 

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

unary-expr  :  unary-op  %MARK%  unary-expr  
 index is: 611, term type: to_deduce, before: unary-op, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%
target index: 612  , change_value: unary-expr

unary-expr  :  unary-op  unary-expr  %MARK%  
 index is: 612, term type: deduce, before: unary-expr, after: %NULL%
TARGET LIST: 

unary-expr@2_opt_2  :  %MARK%  
 index is: 613, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary-expr@2_opt_2  :  %MARK%  postfix-expr  
 index is: 614, term type: to_deduce, before: %NULL%, after: postfix-expr
TARGET LIST: 
target index: 615  , change_value: postfix-expr
target index: 639  , change_value: %NULL%

unary-expr@2_opt_2  :  postfix-expr  %MARK%  
 index is: 615, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

unary-expr@1_opt_3  :  %MARK%  
 index is: 616, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary-expr@1_opt_3  :  %MARK%  array  
 index is: 617, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 618  , change_value: array
target index: 710  , change_value: %NULL%

unary-expr@1_opt_3  :  array  %MARK%  
 index is: 618, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 620, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-expr@1_decl_1  :  'new'  %MARK%  
 index is: 622, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  'not'  %MARK%  
 index is: 624, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  '!'  %MARK%  
 index is: 626, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  '-'  %MARK%  
 index is: 628, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  '&'  %MARK%  
 index is: 630, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  '*'  %MARK%  
 index is: 632, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

unary-op  :  'typeid'  %MARK%  
 index is: 638, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

postfix-expr  :  %MARK%  postfix-expr@0_decl_1  postfix-expr@0_opt_2  
 index is: 639, term type: to_deduce, before: %NULL%, after: postfix-expr@0_decl_1
TARGET LIST: 
target index: 640  , change_value: postfix-expr@0_decl_1
target index: 645  , change_value: %NULL%
target index: 647  , change_value: %NULL%
target index: 649  , change_value: %NULL%

postfix-expr  :  postfix-expr@0_decl_1  %MARK%  postfix-expr@0_opt_2  
 index is: 640, term type: to_deduce, before: postfix-expr@0_decl_1, after: postfix-expr@0_opt_2
TARGET LIST: 
target index: 641  , change_value: postfix-expr@0_opt_2
target index: 642  , change_value: %NULL%
target index: 643  , change_value: %NULL%

postfix-expr  :  postfix-expr@0_decl_1  postfix-expr@0_opt_2  %MARK%  
 index is: 641, term type: deduce, before: postfix-expr@0_opt_2, after: %NULL%
TARGET LIST: 

postfix-expr@0_opt_2  :  %MARK%  
 index is: 642, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix-expr@0_opt_2  :  %MARK%  postfix-expr  
 index is: 643, term type: to_deduce, before: %NULL%, after: postfix-expr
TARGET LIST: 
target index: 639  , change_value: %NULL%
target index: 644  , change_value: postfix-expr

postfix-expr@0_opt_2  :  postfix-expr  %MARK%  
 index is: 644, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

postfix-expr@0_decl_1  :  %MARK%  '...'  
 index is: 645, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 646  , change_value: '...'

postfix-expr@0_decl_1  :  '...'  %MARK%  
 index is: 646, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

postfix-expr@0_decl_1  :  %MARK%  '--'  
 index is: 647, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 648  , change_value: '--'

postfix-expr@0_decl_1  :  '--'  %MARK%  
 index is: 648, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

postfix-expr@0_decl_1  :  %MARK%  '++'  
 index is: 649, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 650  , change_value: '++'

postfix-expr@0_decl_1  :  '++'  %MARK%  
 index is: 650, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  constant  %MARK%  
 index is: 652, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

prim-expr  :  visit-expr  %MARK%  
 index is: 654, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

visit-expr  :  object  %MARK%  visit-expr@0_opt_2  
 index is: 656, term type: to_deduce, before: object, after: visit-expr@0_opt_2
TARGET LIST: 
target index: 657  , change_value: visit-expr@0_opt_2
target index: 658  , change_value: %NULL%
target index: 659  , change_value: %NULL%

visit-expr  :  object  visit-expr@0_opt_2  %MARK%  
 index is: 657, term type: deduce, before: visit-expr@0_opt_2, after: %NULL%
TARGET LIST: 

visit-expr@0_opt_2  :  %MARK%  
 index is: 658, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

visit-expr@0_opt_2  :  %MARK%  visit-expr@0_opt_2@0_decl_1  visit-expr  
 index is: 659, term type: to_deduce, before: %NULL%, after: visit-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 660  , change_value: visit-expr@0_opt_2@0_decl_1
target index: 662  , change_value: %NULL%
target index: 664  , change_value: %NULL%

visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  %MARK%  visit-expr  
 index is: 660, term type: to_deduce, before: visit-expr@0_opt_2@0_decl_1, after: visit-expr
TARGET LIST: 
target index: 655  , change_value: %NULL%
target index: 661  , change_value: visit-expr

visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  visit-expr  %MARK%  
 index is: 661, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

visit-expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 662, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 663  , change_value: '.'

visit-expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 663, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

visit-expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 664, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 665  , change_value: '->'

visit-expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 665, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  CHAR  %MARK%  
 index is: 667, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  element  %MARK%  
 index is: 669, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  'global'  %MARK%  
 index is: 671, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  'local'  %MARK%  
 index is: 673, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  STR  %MARK%  object@1_opt_2  
 index is: 675, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 676  , change_value: object@1_opt_2
target index: 680  , change_value: %NULL%
target index: 681  , change_value: %NULL%

object  :  STR  object@1_opt_2  %MARK%  
 index is: 676, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

object  :  array  %MARK%  object@0_opt_2  
 index is: 678, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 679  , change_value: object@0_opt_2
target index: 683  , change_value: %NULL%
target index: 684  , change_value: %NULL%

object  :  array  object@0_opt_2  %MARK%  
 index is: 679, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  
 index is: 680, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  index  
 index is: 681, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 682  , change_value: index
target index: 724  , change_value: %NULL%

object@1_opt_2  :  index  %MARK%  
 index is: 682, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  
 index is: 683, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  index  
 index is: 684, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 685  , change_value: index
target index: 724  , change_value: %NULL%

object@0_opt_2  :  index  %MARK%  
 index is: 685, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 687, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 688  , change_value: element@0_rep_2
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%

element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 688, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  
 index is: 689, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 690, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 691  , change_value: index
target index: 724  , change_value: %NULL%

element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 691, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: element@0_rep_2
target index: 693  , change_value: %NULL%

element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 692, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 693, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 694  , change_value: fcall
target index: 717  , change_value: %NULL%

element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 694, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%
target index: 695  , change_value: element@0_rep_2

element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 695, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, term type: to_deduce, before: '(', after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 698  , change_value: single-expr

element@0_decl_1  :  '('  single-expr  %MARK%  ')'  
 index is: 698, term type: shift, before: single-expr, after: ')'
TARGET LIST: 
target index: 699  , change_value: ')'

element@0_decl_1  :  '('  single-expr  ')'  %MARK%  
 index is: 699, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

element@0_decl_1  :  ID  %MARK%  
 index is: 701, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  'false'  %MARK%  
 index is: 703, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  'true'  %MARK%  
 index is: 705, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  'null'  %MARK%  
 index is: 707, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

constant  :  NUM  %MARK%  
 index is: 709, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 711, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 712  , change_value: array@0_opt_2
target index: 714  , change_value: %NULL%
target index: 715  , change_value: %NULL%

array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 712, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 713  , change_value: '}'

array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 713, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  
 index is: 714, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  expr  
 index is: 715, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 716  , change_value: expr

array@0_opt_2  :  expr  %MARK%  
 index is: 716, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 717, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 718  , change_value: '('

fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 718, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 719  , change_value: fcall@0_opt_2
target index: 721  , change_value: %NULL%
target index: 722  , change_value: %NULL%

fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 719, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 720  , change_value: ')'

fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 720, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  
 index is: 721, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  expr  
 index is: 722, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 723  , change_value: expr

fcall@0_opt_2  :  expr  %MARK%  
 index is: 723, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

index  :  '['  %MARK%  basic-expr  ']'  
 index is: 725, term type: to_deduce, before: '[', after: basic-expr
TARGET LIST: 
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%
target index: 726  , change_value: basic-expr

index  :  '['  basic-expr  %MARK%  ']'  
 index is: 726, term type: shift, before: basic-expr, after: ']'
TARGET LIST: 
target index: 727  , change_value: ']'

index  :  '['  basic-expr  ']'  %MARK%  
 index is: 727, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

#####
#DFA#
#####
#########
#0  TERM#
#########


##########
#FROM SET#
##########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

########
#SUBSET#
########
%start%  :  %MARK%  begin  
 index is: 0, term type: to_deduce, before: %NULL%, after: begin
TARGET LIST: 
target index: 1  , change_value: begin
target index: 2  , change_value: %NULL%

begin  :  %MARK%  stmts  
 index is: 2, term type: to_deduce, before: %NULL%, after: stmts
TARGET LIST: 
target index: 3  , change_value: stmts
target index: 14  , change_value: %NULL%

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 1, target_source: begin

index: 2, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



#########
#1  TERM#
#########


##########
#FROM SET#
##########
%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
%start%  :  begin  %MARK%  
 index is: 1, term type: accept, before: begin, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#2  TERM#
#########


##########
#FROM SET#
##########
begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
begin  :  stmts  %MARK%  
 index is: 3, term type: deduce, before: stmts, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#3  TERM#
#########


##########
#FROM SET#
##########
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts  :  stmts@0_rep_1  %MARK%  
 index is: 15, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#4  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

########
#SUBSET#
########
stmts@0_rep_1  :  statement  %MARK%  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 18, term type: to_deduce, before: statement, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 19  , change_value: stmts@0_rep_1@0_rep_2
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

########
#TO SET#
########
index: 5, target_source: stmts@0_rep_1@0_rep_2

index: 430, target_source: ENDL



#########
#5  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

########
#SUBSET#
########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  %MARK%  stmts@0_rep_1  
 index is: 19, term type: to_deduce, before: stmts@0_rep_1@0_rep_2, after: stmts@0_rep_1
TARGET LIST: 
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%
target index: 20  , change_value: stmts@0_rep_1

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 6, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



#########
#6  TERM#
#########


##########
#FROM SET#
##########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts@0_rep_1  :  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  %MARK%  
 index is: 20, term type: deduce, before: stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#7  TERM#
#########


##########
#FROM SET#
##########
statement  :  expr-stmt  %MARK%  
 index is: 45, term type: deduce, before: expr-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  expr-stmt  %MARK%  
 index is: 45, term type: deduce, before: expr-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#8  TERM#
#########


##########
#FROM SET#
##########
statement  :  class-stmt  %MARK%  
 index is: 47, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  class-stmt  %MARK%  
 index is: 47, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


#########
#9  TERM#
#########


##########
#FROM SET#
##########
statement  :  throw-stmt  %MARK%  
 index is: 49, term type: deduce, before: throw-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  throw-stmt  %MARK%  
 index is: 49, term type: deduce, before: throw-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#10  TERM#
##########


##########
#FROM SET#
##########
statement  :  try-stmt  %MARK%  
 index is: 51, term type: deduce, before: try-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  try-stmt  %MARK%  
 index is: 51, term type: deduce, before: try-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#11  TERM#
##########


##########
#FROM SET#
##########
statement  :  return-stmt  %MARK%  
 index is: 53, term type: deduce, before: return-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  return-stmt  %MARK%  
 index is: 53, term type: deduce, before: return-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#12  TERM#
##########


##########
#FROM SET#
##########
statement  :  function-stmt  %MARK%  
 index is: 55, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  function-stmt  %MARK%  
 index is: 55, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#13  TERM#
##########


##########
#FROM SET#
##########
statement  :  control-stmt  %MARK%  
 index is: 57, term type: deduce, before: control-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  control-stmt  %MARK%  
 index is: 57, term type: deduce, before: control-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#14  TERM#
##########


##########
#FROM SET#
##########
statement  :  foreach-stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  foreach-stmt  %MARK%  
 index is: 59, term type: deduce, before: foreach-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#15  TERM#
##########


##########
#FROM SET#
##########
statement  :  for-stmt  %MARK%  
 index is: 61, term type: deduce, before: for-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  for-stmt  %MARK%  
 index is: 61, term type: deduce, before: for-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#16  TERM#
##########


##########
#FROM SET#
##########
statement  :  loop-stmt  %MARK%  
 index is: 63, term type: deduce, before: loop-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  loop-stmt  %MARK%  
 index is: 63, term type: deduce, before: loop-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#17  TERM#
##########


##########
#FROM SET#
##########
statement  :  while-stmt  %MARK%  
 index is: 65, term type: deduce, before: while-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  while-stmt  %MARK%  
 index is: 65, term type: deduce, before: while-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#18  TERM#
##########


##########
#FROM SET#
##########
statement  :  switch-stmt  %MARK%  
 index is: 67, term type: deduce, before: switch-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  switch-stmt  %MARK%  
 index is: 67, term type: deduce, before: switch-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#19  TERM#
##########


##########
#FROM SET#
##########
statement  :  if-stmt  %MARK%  
 index is: 69, term type: deduce, before: if-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  if-stmt  %MARK%  
 index is: 69, term type: deduce, before: if-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#20  TERM#
##########


##########
#FROM SET#
##########
statement  :  using-stmt  %MARK%  
 index is: 71, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  using-stmt  %MARK%  
 index is: 71, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#21  TERM#
##########


##########
#FROM SET#
##########
statement  :  namespace-stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  namespace-stmt  %MARK%  
 index is: 73, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#22  TERM#
##########


##########
#FROM SET#
##########
statement  :  block-stmt  %MARK%  
 index is: 75, term type: deduce, before: block-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  block-stmt  %MARK%  
 index is: 75, term type: deduce, before: block-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#23  TERM#
##########


##########
#FROM SET#
##########
statement  :  var-stmt  %MARK%  
 index is: 77, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  var-stmt  %MARK%  
 index is: 77, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#24  TERM#
##########


##########
#FROM SET#
##########
statement  :  import-stmt  %MARK%  
 index is: 79, term type: deduce, before: import-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  import-stmt  %MARK%  
 index is: 79, term type: deduce, before: import-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#25  TERM#
##########


##########
#FROM SET#
##########
statement  :  package-stmt  %MARK%  
 index is: 81, term type: deduce, before: package-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  package-stmt  %MARK%  
 index is: 81, term type: deduce, before: package-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#26  TERM#
##########


##########
#FROM SET#
##########
statement  :  prep-stmt  %MARK%  
 index is: 83, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
statement  :  prep-stmt  %MARK%  
 index is: 83, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#27  TERM#
##########


##########
#FROM SET#
##########
expr-stmt  :  expr  %MARK%  endline  
 index is: 406, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 407  , change_value: endline

########
#SUBSET#
########
expr-stmt  :  expr  %MARK%  endline  
 index is: 406, term type: to_deduce, before: expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 407  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 28, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



##########
#28  TERM#
##########


##########
#FROM SET#
##########
expr-stmt  :  expr  endline  %MARK%  
 index is: 407, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr-stmt  :  expr  endline  %MARK%  
 index is: 407, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#29  TERM#
##########


##########
#FROM SET#
##########
endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
endline  :  ';'  %MARK%  
 index is: 11, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#30  TERM#
##########


##########
#FROM SET#
##########
endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
endline  :  ENDL  %MARK%  
 index is: 13, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#31  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  %MARK%  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 383, term type: shift, before: class-stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 384  , change_value: ID

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  %MARK%  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 383, term type: shift, before: class-stmt@0_decl_1, after: ID
TARGET LIST: 
target index: 384  , change_value: ID

########
#TO SET#
########
index: 32, target_source: ID



##########
#32  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  %MARK%  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 384, term type: to_deduce, before: ID, after: class-stmt@0_opt_3
TARGET LIST: 
target index: 385  , change_value: class-stmt@0_opt_3
target index: 390  , change_value: %NULL%
target index: 391  , change_value: %NULL%

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  %MARK%  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 384, term type: to_deduce, before: ID, after: class-stmt@0_opt_3
TARGET LIST: 
target index: 385  , change_value: class-stmt@0_opt_3
target index: 390  , change_value: %NULL%
target index: 391  , change_value: %NULL%

class-stmt@0_opt_3  :  %MARK%  
 index is: 390, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

class-stmt@0_opt_3  :  %MARK%  'extends'  visit-expr  
 index is: 391, term type: shift, before: %NULL%, after: 'extends'
TARGET LIST: 
target index: 392  , change_value: 'extends'

########
#TO SET#
########
index: 33, target_source: class-stmt@0_opt_3

index: 428, target_source: 'extends'



##########
#33  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 385, term type: shift, before: class-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 386  , change_value: ENDL

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 385, term type: shift, before: class-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 386  , change_value: ENDL

########
#TO SET#
########
index: 34, target_source: ENDL



##########
#34  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 386, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 387  , change_value: decl-stmts

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 386, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 387  , change_value: decl-stmts

decl-stmts  :  %MARK%  decl-stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl-stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl-stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1  :  %MARK%  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class-stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 85  , change_value: class-stmt
target index: 382  , change_value: %NULL%

declaration  :  %MARK%  function-stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 87  , change_value: function-stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using-stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 89  , change_value: using-stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var-stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 91  , change_value: var-stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace-stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 93  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep-stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 95  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 35, target_source: decl-stmts

index: 38, target_source: decl-stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class-stmt

index: 43, target_source: function-stmt

index: 44, target_source: using-stmt

index: 45, target_source: var-stmt

index: 46, target_source: namespace-stmt

index: 47, target_source: prep-stmt

index: 31, target_source: class-stmt@0_decl_1

index: 48, target_source: 'function'

index: 310, target_source: 'using'

index: 329, target_source: var-stmt@0_decl_1

index: 323, target_source: 'namespace'

index: 332, target_source: PREP

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'



##########
#35  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 387, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 388  , change_value: 'end'

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 387, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 388  , change_value: 'end'

########
#TO SET#
########
index: 36, target_source: 'end'



##########
#36  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 388, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 389  , change_value: ENDL

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 388, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 389  , change_value: ENDL

########
#TO SET#
########
index: 37, target_source: ENDL



##########
#37  TERM#
##########


##########
#FROM SET#
##########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 389, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class-stmt  :  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 389, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#38  TERM#
##########


##########
#FROM SET#
##########
decl-stmts  :  decl-stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl-stmts  :  decl-stmts@0_rep_1  %MARK%  
 index is: 26, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#39  TERM#
##########


##########
#FROM SET#
##########
decl-stmts@0_rep_1  :  declaration  %MARK%  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl-stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

########
#SUBSET#
########
decl-stmts@0_rep_1  :  declaration  %MARK%  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 29, term type: to_deduce, before: declaration, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 30  , change_value: decl-stmts@0_rep_1@0_rep_2
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl-stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

########
#TO SET#
########
index: 40, target_source: decl-stmts@0_rep_1@0_rep_2

index: 426, target_source: ENDL



##########
#40  TERM#
##########


##########
#FROM SET#
##########
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  %MARK%  decl-stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl-stmts@0_rep_1@0_rep_2, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl-stmts@0_rep_1

########
#SUBSET#
########
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  %MARK%  decl-stmts@0_rep_1  
 index is: 30, term type: to_deduce, before: decl-stmts@0_rep_1@0_rep_2, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%
target index: 31  , change_value: decl-stmts@0_rep_1

decl-stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1  :  %MARK%  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class-stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 85  , change_value: class-stmt
target index: 382  , change_value: %NULL%

declaration  :  %MARK%  function-stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 87  , change_value: function-stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using-stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 89  , change_value: using-stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var-stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 91  , change_value: var-stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace-stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 93  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep-stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 95  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 41, target_source: decl-stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class-stmt

index: 43, target_source: function-stmt

index: 44, target_source: using-stmt

index: 45, target_source: var-stmt

index: 46, target_source: namespace-stmt

index: 47, target_source: prep-stmt

index: 31, target_source: class-stmt@0_decl_1

index: 48, target_source: 'function'

index: 310, target_source: 'using'

index: 329, target_source: var-stmt@0_decl_1

index: 323, target_source: 'namespace'

index: 332, target_source: PREP

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'



##########
#41  TERM#
##########


##########
#FROM SET#
##########
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl-stmts@0_rep_1  :  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  %MARK%  
 index is: 31, term type: deduce, before: decl-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#42  TERM#
##########


##########
#FROM SET#
##########
declaration  :  class-stmt  %MARK%  
 index is: 85, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  class-stmt  %MARK%  
 index is: 85, term type: deduce, before: class-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#43  TERM#
##########


##########
#FROM SET#
##########
declaration  :  function-stmt  %MARK%  
 index is: 87, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  function-stmt  %MARK%  
 index is: 87, term type: deduce, before: function-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#44  TERM#
##########


##########
#FROM SET#
##########
declaration  :  using-stmt  %MARK%  
 index is: 89, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  using-stmt  %MARK%  
 index is: 89, term type: deduce, before: using-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#45  TERM#
##########


##########
#FROM SET#
##########
declaration  :  var-stmt  %MARK%  
 index is: 91, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  var-stmt  %MARK%  
 index is: 91, term type: deduce, before: var-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#46  TERM#
##########


##########
#FROM SET#
##########
declaration  :  namespace-stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  namespace-stmt  %MARK%  
 index is: 93, term type: deduce, before: namespace-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#47  TERM#
##########


##########
#FROM SET#
##########
declaration  :  prep-stmt  %MARK%  
 index is: 95, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
declaration  :  prep-stmt  %MARK%  
 index is: 95, term type: deduce, before: prep-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#48  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  %MARK%  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

########
#SUBSET#
########
function-stmt  :  'function'  %MARK%  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 315, term type: shift, before: 'function', after: ID
TARGET LIST: 
target index: 316  , change_value: ID

########
#TO SET#
########
index: 49, target_source: ID



##########
#49  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  %MARK%  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

########
#SUBSET#
########
function-stmt  :  'function'  ID  %MARK%  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 316, term type: shift, before: ID, after: '('
TARGET LIST: 
target index: 317  , change_value: '('

########
#TO SET#
########
index: 50, target_source: '('



##########
#50  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  '('  %MARK%  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 317, term type: to_deduce, before: '(', after: function-stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function-stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

########
#SUBSET#
########
function-stmt  :  'function'  ID  '('  %MARK%  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 317, term type: to_deduce, before: '(', after: function-stmt@0_opt_4
TARGET LIST: 
target index: 318  , change_value: function-stmt@0_opt_4
target index: 325  , change_value: %NULL%
target index: 326  , change_value: %NULL%

function-stmt@0_opt_4  :  %MARK%  
 index is: 325, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-stmt@0_opt_4  :  %MARK%  argument-list  
 index is: 326, term type: to_deduce, before: %NULL%, after: argument-list
TARGET LIST: 
target index: 327  , change_value: argument-list
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%

argument-list  :  %MARK%  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 475, term type: to_deduce, before: %NULL%, after: argument-list@1_opt_1
TARGET LIST: 
target index: 476  , change_value: argument-list@1_opt_1
target index: 492  , change_value: %NULL%
target index: 493  , change_value: %NULL%

argument-list  :  %MARK%  '...'  ID  
 index is: 480, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 481  , change_value: '...'

argument-list@1_opt_1  :  %MARK%  
 index is: 492, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_1  :  %MARK%  '='  
 index is: 493, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 494  , change_value: '='

########
#TO SET#
########
index: 51, target_source: function-stmt@0_opt_4

index: 425, target_source: argument-list

index: 368, target_source: argument-list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



##########
#51  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  %MARK%  ')'  function-stmt@0_opt_6  function-body  
 index is: 318, term type: shift, before: function-stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

########
#SUBSET#
########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  %MARK%  ')'  function-stmt@0_opt_6  function-body  
 index is: 318, term type: shift, before: function-stmt@0_opt_4, after: ')'
TARGET LIST: 
target index: 319  , change_value: ')'

########
#TO SET#
########
index: 52, target_source: ')'



##########
#52  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  %MARK%  function-stmt@0_opt_6  function-body  
 index is: 319, term type: to_deduce, before: ')', after: function-stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function-stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

########
#SUBSET#
########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  %MARK%  function-stmt@0_opt_6  function-body  
 index is: 319, term type: to_deduce, before: ')', after: function-stmt@0_opt_6
TARGET LIST: 
target index: 320  , change_value: function-stmt@0_opt_6
target index: 322  , change_value: %NULL%
target index: 323  , change_value: %NULL%

function-stmt@0_opt_6  :  %MARK%  
 index is: 322, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-stmt@0_opt_6  :  %MARK%  'override'  
 index is: 323, term type: shift, before: %NULL%, after: 'override'
TARGET LIST: 
target index: 324  , change_value: 'override'

########
#TO SET#
########
index: 53, target_source: function-stmt@0_opt_6

index: 424, target_source: 'override'



##########
#53  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  %MARK%  function-body  
 index is: 320, term type: to_deduce, before: function-stmt@0_opt_6, after: function-body
TARGET LIST: 
target index: 321  , change_value: function-body
target index: 328  , change_value: %NULL%

########
#SUBSET#
########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  %MARK%  function-body  
 index is: 320, term type: to_deduce, before: function-stmt@0_opt_6, after: function-body
TARGET LIST: 
target index: 321  , change_value: function-body
target index: 328  , change_value: %NULL%

function-body  :  %MARK%  function-body@0_decl_1  
 index is: 328, term type: to_deduce, before: %NULL%, after: function-body@0_decl_1
TARGET LIST: 
target index: 329  , change_value: function-body@0_decl_1
target index: 330  , change_value: %NULL%
target index: 335  , change_value: %NULL%

function-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 330, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 331  , change_value: ENDL

function-body@0_decl_1  :  %MARK%  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 335, term type: to_deduce, before: %NULL%, after: function-body@0_decl_1@0_opt_1
TARGET LIST: 
target index: 336  , change_value: function-body@0_decl_1@0_opt_1
target index: 344  , change_value: %NULL%
target index: 345  , change_value: %NULL%

function-body@0_decl_1@0_opt_1  :  %MARK%  
 index is: 344, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_1  :  %MARK%  ENDL  
 index is: 345, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 346  , change_value: ENDL

########
#TO SET#
########
index: 54, target_source: function-body

index: 55, target_source: function-body@0_decl_1

index: 56, target_source: ENDL

index: 418, target_source: function-body@0_decl_1@0_opt_1



##########
#54  TERM#
##########


##########
#FROM SET#
##########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  %MARK%  
 index is: 321, term type: deduce, before: function-body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-stmt  :  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  %MARK%  
 index is: 321, term type: deduce, before: function-body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#55  TERM#
##########


##########
#FROM SET#
##########
function-body  :  function-body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function-body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-body  :  function-body@0_decl_1  %MARK%  
 index is: 329, term type: deduce, before: function-body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#56  TERM#
##########


##########
#FROM SET#
##########
function-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

function-body@0_decl_1@0_opt_1  :  ENDL  %MARK%  
 index is: 346, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 331, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 332  , change_value: stmts

function-body@0_decl_1@0_opt_1  :  ENDL  %MARK%  
 index is: 346, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 57, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



##########
#57  TERM#
##########


##########
#FROM SET#
##########
function-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

########
#SUBSET#
########
function-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 332, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 333  , change_value: 'end'

########
#TO SET#
########
index: 58, target_source: 'end'



##########
#58  TERM#
##########


##########
#FROM SET#
##########
function-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

########
#SUBSET#
########
function-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 333, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 334  , change_value: ENDL

########
#TO SET#
########
index: 59, target_source: ENDL



##########
#59  TERM#
##########


##########
#FROM SET#
##########
function-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 334, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#60  TERM#
##########


##########
#FROM SET#
##########
throw-stmt  :  'throw'  %MARK%  throw-stmt@0_opt_2  endline  
 index is: 376, term type: to_deduce, before: 'throw', after: throw-stmt@0_opt_2
TARGET LIST: 
target index: 377  , change_value: throw-stmt@0_opt_2
target index: 379  , change_value: %NULL%
target index: 380  , change_value: %NULL%

########
#SUBSET#
########
throw-stmt  :  'throw'  %MARK%  throw-stmt@0_opt_2  endline  
 index is: 376, term type: to_deduce, before: 'throw', after: throw-stmt@0_opt_2
TARGET LIST: 
target index: 377  , change_value: throw-stmt@0_opt_2
target index: 379  , change_value: %NULL%
target index: 380  , change_value: %NULL%

throw-stmt@0_opt_2  :  %MARK%  
 index is: 379, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

throw-stmt@0_opt_2  :  %MARK%  expr  
 index is: 380, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 381  , change_value: expr
target index: 411  , change_value: %NULL%

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 61, target_source: throw-stmt@0_opt_2

index: 63, target_source: expr

index: 64, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



##########
#61  TERM#
##########


##########
#FROM SET#
##########
throw-stmt  :  'throw'  throw-stmt@0_opt_2  %MARK%  endline  
 index is: 377, term type: to_deduce, before: throw-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 378  , change_value: endline

########
#SUBSET#
########
throw-stmt  :  'throw'  throw-stmt@0_opt_2  %MARK%  endline  
 index is: 377, term type: to_deduce, before: throw-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 378  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 62, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



##########
#62  TERM#
##########


##########
#FROM SET#
##########
throw-stmt  :  'throw'  throw-stmt@0_opt_2  endline  %MARK%  
 index is: 378, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
throw-stmt  :  'throw'  throw-stmt@0_opt_2  endline  %MARK%  
 index is: 378, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#63  TERM#
##########


##########
#FROM SET#
##########
throw-stmt@0_opt_2  :  expr  %MARK%  
 index is: 381, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
throw-stmt@0_opt_2  :  expr  %MARK%  
 index is: 381, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#64  TERM#
##########


##########
#FROM SET#
##########
expr  :  single-expr  %MARK%  expr@0_opt_2  
 index is: 412, term type: to_deduce, before: single-expr, after: expr@0_opt_2
TARGET LIST: 
target index: 413  , change_value: expr@0_opt_2
target index: 414  , change_value: %NULL%
target index: 415  , change_value: %NULL%

########
#SUBSET#
########
expr  :  single-expr  %MARK%  expr@0_opt_2  
 index is: 412, term type: to_deduce, before: single-expr, after: expr@0_opt_2
TARGET LIST: 
target index: 413  , change_value: expr@0_opt_2
target index: 414  , change_value: %NULL%
target index: 415  , change_value: %NULL%

expr@0_opt_2  :  %MARK%  
 index is: 414, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

expr@0_opt_2  :  %MARK%  ','  expr  
 index is: 415, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 416  , change_value: ','

########
#TO SET#
########
index: 65, target_source: expr@0_opt_2

index: 66, target_source: ','



##########
#65  TERM#
##########


##########
#FROM SET#
##########
expr  :  single-expr  expr@0_opt_2  %MARK%  
 index is: 413, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr  :  single-expr  expr@0_opt_2  %MARK%  
 index is: 413, term type: deduce, before: expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#66  TERM#
##########


##########
#FROM SET#
##########
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 416, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 417  , change_value: expr

########
#SUBSET#
########
expr@0_opt_2  :  ','  %MARK%  expr  
 index is: 416, term type: to_deduce, before: ',', after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 417  , change_value: expr

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 67, target_source: expr

index: 64, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



##########
#67  TERM#
##########


##########
#FROM SET#
##########
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 417, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
expr@0_opt_2  :  ','  expr  %MARK%  
 index is: 417, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#68  TERM#
##########


##########
#FROM SET#
##########
single-expr  :  basic-expr  %MARK%  
 index is: 419, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
single-expr  :  basic-expr  %MARK%  
 index is: 419, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#69  TERM#
##########


##########
#FROM SET#
##########
single-expr  :  lambda-expr  %MARK%  
 index is: 421, term type: deduce, before: lambda-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
single-expr  :  lambda-expr  %MARK%  
 index is: 421, term type: deduce, before: lambda-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#70  TERM#
##########


##########
#FROM SET#
##########
basic-expr  :  cond-expr  %MARK%  basic-expr@1_opt_2  
 index is: 423, term type: to_deduce, before: cond-expr, after: basic-expr@1_opt_2
TARGET LIST: 
target index: 424  , change_value: basic-expr@1_opt_2
target index: 429  , change_value: %NULL%
target index: 430  , change_value: %NULL%

########
#SUBSET#
########
basic-expr  :  cond-expr  %MARK%  basic-expr@1_opt_2  
 index is: 423, term type: to_deduce, before: cond-expr, after: basic-expr@1_opt_2
TARGET LIST: 
target index: 424  , change_value: basic-expr@1_opt_2
target index: 429  , change_value: %NULL%
target index: 430  , change_value: %NULL%

basic-expr@1_opt_2  :  %MARK%  
 index is: 429, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

basic-expr@1_opt_2  :  %MARK%  asi-op  single-expr  
 index is: 430, term type: to_deduce, before: %NULL%, after: asi-op
TARGET LIST: 
target index: 431  , change_value: asi-op
target index: 433  , change_value: %NULL%
target index: 435  , change_value: %NULL%
target index: 437  , change_value: %NULL%
target index: 439  , change_value: %NULL%
target index: 441  , change_value: %NULL%
target index: 443  , change_value: %NULL%
target index: 445  , change_value: %NULL%
target index: 447  , change_value: %NULL%

asi-op  :  %MARK%  '^='  
 index is: 433, term type: shift, before: %NULL%, after: '^='
TARGET LIST: 
target index: 434  , change_value: '^='

asi-op  :  %MARK%  '%='  
 index is: 435, term type: shift, before: %NULL%, after: '%='
TARGET LIST: 
target index: 436  , change_value: '%='

asi-op  :  %MARK%  '/='  
 index is: 437, term type: shift, before: %NULL%, after: '/='
TARGET LIST: 
target index: 438  , change_value: '/='

asi-op  :  %MARK%  '*='  
 index is: 439, term type: shift, before: %NULL%, after: '*='
TARGET LIST: 
target index: 440  , change_value: '*='

asi-op  :  %MARK%  '-='  
 index is: 441, term type: shift, before: %NULL%, after: '-='
TARGET LIST: 
target index: 442  , change_value: '-='

asi-op  :  %MARK%  '+='  
 index is: 443, term type: shift, before: %NULL%, after: '+='
TARGET LIST: 
target index: 444  , change_value: '+='

asi-op  :  %MARK%  ':='  
 index is: 445, term type: shift, before: %NULL%, after: ':='
TARGET LIST: 
target index: 446  , change_value: ':='

asi-op  :  %MARK%  '='  
 index is: 447, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 448  , change_value: '='

########
#TO SET#
########
index: 71, target_source: basic-expr@1_opt_2

index: 72, target_source: asi-op

index: 410, target_source: '^='

index: 411, target_source: '%='

index: 412, target_source: '/='

index: 413, target_source: '*='

index: 414, target_source: '-='

index: 415, target_source: '+='

index: 416, target_source: ':='

index: 417, target_source: '='



##########
#71  TERM#
##########


##########
#FROM SET#
##########
basic-expr  :  cond-expr  basic-expr@1_opt_2  %MARK%  
 index is: 424, term type: deduce, before: basic-expr@1_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic-expr  :  cond-expr  basic-expr@1_opt_2  %MARK%  
 index is: 424, term type: deduce, before: basic-expr@1_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#72  TERM#
##########


##########
#FROM SET#
##########
basic-expr@1_opt_2  :  asi-op  %MARK%  single-expr  
 index is: 431, term type: to_deduce, before: asi-op, after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 432  , change_value: single-expr

########
#SUBSET#
########
basic-expr@1_opt_2  :  asi-op  %MARK%  single-expr  
 index is: 431, term type: to_deduce, before: asi-op, after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 432  , change_value: single-expr

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 73, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



##########
#73  TERM#
##########


##########
#FROM SET#
##########
basic-expr@1_opt_2  :  asi-op  single-expr  %MARK%  
 index is: 432, term type: deduce, before: single-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic-expr@1_opt_2  :  asi-op  single-expr  %MARK%  
 index is: 432, term type: deduce, before: single-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#74  TERM#
##########


##########
#FROM SET#
##########
basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 427  , change_value: '='

########
#SUBSET#
########
basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 427  , change_value: '='

########
#TO SET#
########
index: 75, target_source: '='



##########
#75  TERM#
##########


##########
#FROM SET#
##########
basic-expr  :  var-bind  '='  %MARK%  cond-expr  
 index is: 427, term type: to_deduce, before: '=', after: cond-expr
TARGET LIST: 
target index: 428  , change_value: cond-expr
target index: 511  , change_value: %NULL%

########
#SUBSET#
########
basic-expr  :  var-bind  '='  %MARK%  cond-expr  
 index is: 427, term type: to_deduce, before: '=', after: cond-expr
TARGET LIST: 
target index: 428  , change_value: cond-expr
target index: 511  , change_value: %NULL%

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 76, target_source: cond-expr

index: 77, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#76  TERM#
##########


##########
#FROM SET#
##########
basic-expr  :  var-bind  '='  cond-expr  %MARK%  
 index is: 428, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
basic-expr  :  var-bind  '='  cond-expr  %MARK%  
 index is: 428, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#77  TERM#
##########


##########
#FROM SET#
##########
cond-expr  :  logic-or-expr  %MARK%  cond-expr@0_opt_2  
 index is: 512, term type: to_deduce, before: logic-or-expr, after: cond-expr@0_opt_2
TARGET LIST: 
target index: 513  , change_value: cond-expr@0_opt_2
target index: 514  , change_value: %NULL%
target index: 515  , change_value: %NULL%

########
#SUBSET#
########
cond-expr  :  logic-or-expr  %MARK%  cond-expr@0_opt_2  
 index is: 512, term type: to_deduce, before: logic-or-expr, after: cond-expr@0_opt_2
TARGET LIST: 
target index: 513  , change_value: cond-expr@0_opt_2
target index: 514  , change_value: %NULL%
target index: 515  , change_value: %NULL%

cond-expr@0_opt_2  :  %MARK%  
 index is: 514, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

cond-expr@0_opt_2  :  %MARK%  cond-postfix  
 index is: 515, term type: to_deduce, before: %NULL%, after: cond-postfix
TARGET LIST: 
target index: 516  , change_value: cond-postfix
target index: 517  , change_value: %NULL%
target index: 520  , change_value: %NULL%

cond-postfix  :  %MARK%  ':'  logic-or-expr  
 index is: 517, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 518  , change_value: ':'

cond-postfix  :  %MARK%  '?'  logic-or-expr  ':'  cond-expr  
 index is: 520, term type: shift, before: %NULL%, after: '?'
TARGET LIST: 
target index: 521  , change_value: '?'

########
#TO SET#
########
index: 78, target_source: cond-expr@0_opt_2

index: 79, target_source: cond-postfix

index: 80, target_source: ':'

index: 406, target_source: '?'



##########
#78  TERM#
##########


##########
#FROM SET#
##########
cond-expr  :  logic-or-expr  cond-expr@0_opt_2  %MARK%  
 index is: 513, term type: deduce, before: cond-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond-expr  :  logic-or-expr  cond-expr@0_opt_2  %MARK%  
 index is: 513, term type: deduce, before: cond-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#79  TERM#
##########


##########
#FROM SET#
##########
cond-expr@0_opt_2  :  cond-postfix  %MARK%  
 index is: 516, term type: deduce, before: cond-postfix, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond-expr@0_opt_2  :  cond-postfix  %MARK%  
 index is: 516, term type: deduce, before: cond-postfix, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#80  TERM#
##########


##########
#FROM SET#
##########
cond-postfix  :  ':'  %MARK%  logic-or-expr  
 index is: 518, term type: to_deduce, before: ':', after: logic-or-expr
TARGET LIST: 
target index: 519  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

########
#SUBSET#
########
cond-postfix  :  ':'  %MARK%  logic-or-expr  
 index is: 518, term type: to_deduce, before: ':', after: logic-or-expr
TARGET LIST: 
target index: 519  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 81, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#81  TERM#
##########


##########
#FROM SET#
##########
cond-postfix  :  ':'  logic-or-expr  %MARK%  
 index is: 519, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond-postfix  :  ':'  logic-or-expr  %MARK%  
 index is: 519, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#82  TERM#
##########


##########
#FROM SET#
##########
logic-or-expr  :  logic-and-expr  %MARK%  logic-or-expr@0_opt_2  
 index is: 526, term type: to_deduce, before: logic-and-expr, after: logic-or-expr@0_opt_2
TARGET LIST: 
target index: 527  , change_value: logic-or-expr@0_opt_2
target index: 528  , change_value: %NULL%
target index: 529  , change_value: %NULL%

########
#SUBSET#
########
logic-or-expr  :  logic-and-expr  %MARK%  logic-or-expr@0_opt_2  
 index is: 526, term type: to_deduce, before: logic-and-expr, after: logic-or-expr@0_opt_2
TARGET LIST: 
target index: 527  , change_value: logic-or-expr@0_opt_2
target index: 528  , change_value: %NULL%
target index: 529  , change_value: %NULL%

logic-or-expr@0_opt_2  :  %MARK%  
 index is: 528, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic-or-expr@0_opt_2  :  %MARK%  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  
 index is: 529, term type: to_deduce, before: %NULL%, after: logic-or-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 530  , change_value: logic-or-expr@0_opt_2@0_decl_1
target index: 532  , change_value: %NULL%
target index: 534  , change_value: %NULL%

logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  'or'  
 index is: 532, term type: shift, before: %NULL%, after: 'or'
TARGET LIST: 
target index: 533  , change_value: 'or'

logic-or-expr@0_opt_2@0_decl_1  :  %MARK%  '||'  
 index is: 534, term type: shift, before: %NULL%, after: '||'
TARGET LIST: 
target index: 535  , change_value: '||'

########
#TO SET#
########
index: 83, target_source: logic-or-expr@0_opt_2

index: 84, target_source: logic-or-expr@0_opt_2@0_decl_1

index: 404, target_source: 'or'

index: 405, target_source: '||'



##########
#83  TERM#
##########


##########
#FROM SET#
##########
logic-or-expr  :  logic-and-expr  logic-or-expr@0_opt_2  %MARK%  
 index is: 527, term type: deduce, before: logic-or-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-or-expr  :  logic-and-expr  logic-or-expr@0_opt_2  %MARK%  
 index is: 527, term type: deduce, before: logic-or-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#84  TERM#
##########


##########
#FROM SET#
##########
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  %MARK%  logic-or-expr  
 index is: 530, term type: to_deduce, before: logic-or-expr@0_opt_2@0_decl_1, after: logic-or-expr
TARGET LIST: 
target index: 525  , change_value: %NULL%
target index: 531  , change_value: logic-or-expr

########
#SUBSET#
########
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  %MARK%  logic-or-expr  
 index is: 530, term type: to_deduce, before: logic-or-expr@0_opt_2@0_decl_1, after: logic-or-expr
TARGET LIST: 
target index: 525  , change_value: %NULL%
target index: 531  , change_value: logic-or-expr

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 85, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#85  TERM#
##########


##########
#FROM SET#
##########
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  %MARK%  
 index is: 531, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-or-expr@0_opt_2  :  logic-or-expr@0_opt_2@0_decl_1  logic-or-expr  %MARK%  
 index is: 531, term type: deduce, before: logic-or-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#86  TERM#
##########


##########
#FROM SET#
##########
logic-and-expr  :  equal-expr  %MARK%  logic-and-expr@0_opt_2  
 index is: 537, term type: to_deduce, before: equal-expr, after: logic-and-expr@0_opt_2
TARGET LIST: 
target index: 538  , change_value: logic-and-expr@0_opt_2
target index: 539  , change_value: %NULL%
target index: 540  , change_value: %NULL%

########
#SUBSET#
########
logic-and-expr  :  equal-expr  %MARK%  logic-and-expr@0_opt_2  
 index is: 537, term type: to_deduce, before: equal-expr, after: logic-and-expr@0_opt_2
TARGET LIST: 
target index: 538  , change_value: logic-and-expr@0_opt_2
target index: 539  , change_value: %NULL%
target index: 540  , change_value: %NULL%

logic-and-expr@0_opt_2  :  %MARK%  
 index is: 539, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

logic-and-expr@0_opt_2  :  %MARK%  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  
 index is: 540, term type: to_deduce, before: %NULL%, after: logic-and-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 541  , change_value: logic-and-expr@0_opt_2@0_decl_1
target index: 543  , change_value: %NULL%
target index: 545  , change_value: %NULL%

logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  'and'  
 index is: 543, term type: shift, before: %NULL%, after: 'and'
TARGET LIST: 
target index: 544  , change_value: 'and'

logic-and-expr@0_opt_2@0_decl_1  :  %MARK%  '&&'  
 index is: 545, term type: shift, before: %NULL%, after: '&&'
TARGET LIST: 
target index: 546  , change_value: '&&'

########
#TO SET#
########
index: 87, target_source: logic-and-expr@0_opt_2

index: 88, target_source: logic-and-expr@0_opt_2@0_decl_1

index: 402, target_source: 'and'

index: 403, target_source: '&&'



##########
#87  TERM#
##########


##########
#FROM SET#
##########
logic-and-expr  :  equal-expr  logic-and-expr@0_opt_2  %MARK%  
 index is: 538, term type: deduce, before: logic-and-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-and-expr  :  equal-expr  logic-and-expr@0_opt_2  %MARK%  
 index is: 538, term type: deduce, before: logic-and-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#88  TERM#
##########


##########
#FROM SET#
##########
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  %MARK%  logic-and-expr  
 index is: 541, term type: to_deduce, before: logic-and-expr@0_opt_2@0_decl_1, after: logic-and-expr
TARGET LIST: 
target index: 536  , change_value: %NULL%
target index: 542  , change_value: logic-and-expr

########
#SUBSET#
########
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  %MARK%  logic-and-expr  
 index is: 541, term type: to_deduce, before: logic-and-expr@0_opt_2@0_decl_1, after: logic-and-expr
TARGET LIST: 
target index: 536  , change_value: %NULL%
target index: 542  , change_value: logic-and-expr

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 89, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#89  TERM#
##########


##########
#FROM SET#
##########
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  %MARK%  
 index is: 542, term type: deduce, before: logic-and-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-and-expr@0_opt_2  :  logic-and-expr@0_opt_2@0_decl_1  logic-and-expr  %MARK%  
 index is: 542, term type: deduce, before: logic-and-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#90  TERM#
##########


##########
#FROM SET#
##########
equal-expr  :  relat-expr  %MARK%  equal-expr@0_opt_2  
 index is: 548, term type: to_deduce, before: relat-expr, after: equal-expr@0_opt_2
TARGET LIST: 
target index: 549  , change_value: equal-expr@0_opt_2
target index: 550  , change_value: %NULL%
target index: 551  , change_value: %NULL%

########
#SUBSET#
########
equal-expr  :  relat-expr  %MARK%  equal-expr@0_opt_2  
 index is: 548, term type: to_deduce, before: relat-expr, after: equal-expr@0_opt_2
TARGET LIST: 
target index: 549  , change_value: equal-expr@0_opt_2
target index: 550  , change_value: %NULL%
target index: 551  , change_value: %NULL%

equal-expr@0_opt_2  :  %MARK%  
 index is: 550, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

equal-expr@0_opt_2  :  %MARK%  equal-expr@0_opt_2@0_decl_1  equal-expr  
 index is: 551, term type: to_deduce, before: %NULL%, after: equal-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 552  , change_value: equal-expr@0_opt_2@0_decl_1
target index: 554  , change_value: %NULL%
target index: 556  , change_value: %NULL%
target index: 558  , change_value: %NULL%
target index: 560  , change_value: %NULL%

equal-expr@0_opt_2@0_decl_1  :  %MARK%  'not'  
 index is: 554, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 555  , change_value: 'not'

equal-expr@0_opt_2@0_decl_1  :  %MARK%  'is'  
 index is: 556, term type: shift, before: %NULL%, after: 'is'
TARGET LIST: 
target index: 557  , change_value: 'is'

equal-expr@0_opt_2@0_decl_1  :  %MARK%  '!='  
 index is: 558, term type: shift, before: %NULL%, after: '!='
TARGET LIST: 
target index: 559  , change_value: '!='

equal-expr@0_opt_2@0_decl_1  :  %MARK%  '=='  
 index is: 560, term type: shift, before: %NULL%, after: '=='
TARGET LIST: 
target index: 561  , change_value: '=='

########
#TO SET#
########
index: 91, target_source: equal-expr@0_opt_2

index: 92, target_source: equal-expr@0_opt_2@0_decl_1

index: 398, target_source: 'not'

index: 399, target_source: 'is'

index: 400, target_source: '!='

index: 401, target_source: '=='



##########
#91  TERM#
##########


##########
#FROM SET#
##########
equal-expr  :  relat-expr  equal-expr@0_opt_2  %MARK%  
 index is: 549, term type: deduce, before: equal-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr  :  relat-expr  equal-expr@0_opt_2  %MARK%  
 index is: 549, term type: deduce, before: equal-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#92  TERM#
##########


##########
#FROM SET#
##########
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  %MARK%  equal-expr  
 index is: 552, term type: to_deduce, before: equal-expr@0_opt_2@0_decl_1, after: equal-expr
TARGET LIST: 
target index: 547  , change_value: %NULL%
target index: 553  , change_value: equal-expr

########
#SUBSET#
########
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  %MARK%  equal-expr  
 index is: 552, term type: to_deduce, before: equal-expr@0_opt_2@0_decl_1, after: equal-expr
TARGET LIST: 
target index: 547  , change_value: %NULL%
target index: 553  , change_value: equal-expr

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 93, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#93  TERM#
##########


##########
#FROM SET#
##########
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  equal-expr  %MARK%  
 index is: 553, term type: deduce, before: equal-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr@0_opt_2  :  equal-expr@0_opt_2@0_decl_1  equal-expr  %MARK%  
 index is: 553, term type: deduce, before: equal-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#94  TERM#
##########


##########
#FROM SET#
##########
relat-expr  :  add-expr  %MARK%  relat-expr@0_opt_2  
 index is: 563, term type: to_deduce, before: add-expr, after: relat-expr@0_opt_2
TARGET LIST: 
target index: 564  , change_value: relat-expr@0_opt_2
target index: 565  , change_value: %NULL%
target index: 566  , change_value: %NULL%

########
#SUBSET#
########
relat-expr  :  add-expr  %MARK%  relat-expr@0_opt_2  
 index is: 563, term type: to_deduce, before: add-expr, after: relat-expr@0_opt_2
TARGET LIST: 
target index: 564  , change_value: relat-expr@0_opt_2
target index: 565  , change_value: %NULL%
target index: 566  , change_value: %NULL%

relat-expr@0_opt_2  :  %MARK%  
 index is: 565, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

relat-expr@0_opt_2  :  %MARK%  relat-expr@0_opt_2@0_decl_1  relat-expr  
 index is: 566, term type: to_deduce, before: %NULL%, after: relat-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 567  , change_value: relat-expr@0_opt_2@0_decl_1
target index: 569  , change_value: %NULL%
target index: 571  , change_value: %NULL%
target index: 573  , change_value: %NULL%
target index: 575  , change_value: %NULL%

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<='  
 index is: 569, term type: shift, before: %NULL%, after: '<='
TARGET LIST: 
target index: 570  , change_value: '<='

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>='  
 index is: 571, term type: shift, before: %NULL%, after: '>='
TARGET LIST: 
target index: 572  , change_value: '>='

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '<'  
 index is: 573, term type: shift, before: %NULL%, after: '<'
TARGET LIST: 
target index: 574  , change_value: '<'

relat-expr@0_opt_2@0_decl_1  :  %MARK%  '>'  
 index is: 575, term type: shift, before: %NULL%, after: '>'
TARGET LIST: 
target index: 576  , change_value: '>'

########
#TO SET#
########
index: 95, target_source: relat-expr@0_opt_2

index: 96, target_source: relat-expr@0_opt_2@0_decl_1

index: 394, target_source: '<='

index: 395, target_source: '>='

index: 396, target_source: '<'

index: 397, target_source: '>'



##########
#95  TERM#
##########


##########
#FROM SET#
##########
relat-expr  :  add-expr  relat-expr@0_opt_2  %MARK%  
 index is: 564, term type: deduce, before: relat-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr  :  add-expr  relat-expr@0_opt_2  %MARK%  
 index is: 564, term type: deduce, before: relat-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#96  TERM#
##########


##########
#FROM SET#
##########
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  %MARK%  relat-expr  
 index is: 567, term type: to_deduce, before: relat-expr@0_opt_2@0_decl_1, after: relat-expr
TARGET LIST: 
target index: 562  , change_value: %NULL%
target index: 568  , change_value: relat-expr

########
#SUBSET#
########
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  %MARK%  relat-expr  
 index is: 567, term type: to_deduce, before: relat-expr@0_opt_2@0_decl_1, after: relat-expr
TARGET LIST: 
target index: 562  , change_value: %NULL%
target index: 568  , change_value: relat-expr

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 97, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



##########
#97  TERM#
##########


##########
#FROM SET#
##########
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  relat-expr  %MARK%  
 index is: 568, term type: deduce, before: relat-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr@0_opt_2  :  relat-expr@0_opt_2@0_decl_1  relat-expr  %MARK%  
 index is: 568, term type: deduce, before: relat-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


##########
#98  TERM#
##########


##########
#FROM SET#
##########
add-expr  :  mul-expr  %MARK%  add-expr@0_opt_2  
 index is: 578, term type: to_deduce, before: mul-expr, after: add-expr@0_opt_2
TARGET LIST: 
target index: 579  , change_value: add-expr@0_opt_2
target index: 580  , change_value: %NULL%
target index: 581  , change_value: %NULL%

########
#SUBSET#
########
add-expr  :  mul-expr  %MARK%  add-expr@0_opt_2  
 index is: 578, term type: to_deduce, before: mul-expr, after: add-expr@0_opt_2
TARGET LIST: 
target index: 579  , change_value: add-expr@0_opt_2
target index: 580  , change_value: %NULL%
target index: 581  , change_value: %NULL%

add-expr@0_opt_2  :  %MARK%  
 index is: 580, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

add-expr@0_opt_2  :  %MARK%  add-expr@0_opt_2@0_decl_1  add-expr  
 index is: 581, term type: to_deduce, before: %NULL%, after: add-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 582  , change_value: add-expr@0_opt_2@0_decl_1
target index: 584  , change_value: %NULL%
target index: 586  , change_value: %NULL%

add-expr@0_opt_2@0_decl_1  :  %MARK%  '-'  
 index is: 584, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 585  , change_value: '-'

add-expr@0_opt_2@0_decl_1  :  %MARK%  '+'  
 index is: 586, term type: shift, before: %NULL%, after: '+'
TARGET LIST: 
target index: 587  , change_value: '+'

########
#TO SET#
########
index: 99, target_source: add-expr@0_opt_2

index: 100, target_source: add-expr@0_opt_2@0_decl_1

index: 392, target_source: '-'

index: 393, target_source: '+'



##########
#99  TERM#
##########


##########
#FROM SET#
##########
add-expr  :  mul-expr  add-expr@0_opt_2  %MARK%  
 index is: 579, term type: deduce, before: add-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add-expr  :  mul-expr  add-expr@0_opt_2  %MARK%  
 index is: 579, term type: deduce, before: add-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#100  TERM#
###########


##########
#FROM SET#
##########
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  %MARK%  add-expr  
 index is: 582, term type: to_deduce, before: add-expr@0_opt_2@0_decl_1, after: add-expr
TARGET LIST: 
target index: 577  , change_value: %NULL%
target index: 583  , change_value: add-expr

########
#SUBSET#
########
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  %MARK%  add-expr  
 index is: 582, term type: to_deduce, before: add-expr@0_opt_2@0_decl_1, after: add-expr
TARGET LIST: 
target index: 577  , change_value: %NULL%
target index: 583  , change_value: add-expr

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 101, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#101  TERM#
###########


##########
#FROM SET#
##########
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  add-expr  %MARK%  
 index is: 583, term type: deduce, before: add-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add-expr@0_opt_2  :  add-expr@0_opt_2@0_decl_1  add-expr  %MARK%  
 index is: 583, term type: deduce, before: add-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#102  TERM#
###########


##########
#FROM SET#
##########
mul-expr  :  unary-expr  %MARK%  mul-expr@0_opt_2  
 index is: 589, term type: to_deduce, before: unary-expr, after: mul-expr@0_opt_2
TARGET LIST: 
target index: 590  , change_value: mul-expr@0_opt_2
target index: 591  , change_value: %NULL%
target index: 592  , change_value: %NULL%

########
#SUBSET#
########
mul-expr  :  unary-expr  %MARK%  mul-expr@0_opt_2  
 index is: 589, term type: to_deduce, before: unary-expr, after: mul-expr@0_opt_2
TARGET LIST: 
target index: 590  , change_value: mul-expr@0_opt_2
target index: 591  , change_value: %NULL%
target index: 592  , change_value: %NULL%

mul-expr@0_opt_2  :  %MARK%  
 index is: 591, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

mul-expr@0_opt_2  :  %MARK%  mul-expr@0_opt_2@0_decl_1  mul-expr  
 index is: 592, term type: to_deduce, before: %NULL%, after: mul-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 593  , change_value: mul-expr@0_opt_2@0_decl_1
target index: 595  , change_value: %NULL%
target index: 597  , change_value: %NULL%
target index: 599  , change_value: %NULL%
target index: 601  , change_value: %NULL%

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '^'  
 index is: 595, term type: shift, before: %NULL%, after: '^'
TARGET LIST: 
target index: 596  , change_value: '^'

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '%'  
 index is: 597, term type: shift, before: %NULL%, after: '%'
TARGET LIST: 
target index: 598  , change_value: '%'

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '/'  
 index is: 599, term type: shift, before: %NULL%, after: '/'
TARGET LIST: 
target index: 600  , change_value: '/'

mul-expr@0_opt_2@0_decl_1  :  %MARK%  '*'  
 index is: 601, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 602  , change_value: '*'

########
#TO SET#
########
index: 103, target_source: mul-expr@0_opt_2

index: 104, target_source: mul-expr@0_opt_2@0_decl_1

index: 388, target_source: '^'

index: 389, target_source: '%'

index: 390, target_source: '/'

index: 391, target_source: '*'



###########
#103  TERM#
###########


##########
#FROM SET#
##########
mul-expr  :  unary-expr  mul-expr@0_opt_2  %MARK%  
 index is: 590, term type: deduce, before: mul-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr  :  unary-expr  mul-expr@0_opt_2  %MARK%  
 index is: 590, term type: deduce, before: mul-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#104  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  %MARK%  mul-expr  
 index is: 593, term type: to_deduce, before: mul-expr@0_opt_2@0_decl_1, after: mul-expr
TARGET LIST: 
target index: 588  , change_value: %NULL%
target index: 594  , change_value: mul-expr

########
#SUBSET#
########
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  %MARK%  mul-expr  
 index is: 593, term type: to_deduce, before: mul-expr@0_opt_2@0_decl_1, after: mul-expr
TARGET LIST: 
target index: 588  , change_value: %NULL%
target index: 594  , change_value: mul-expr

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 105, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#105  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  mul-expr  %MARK%  
 index is: 594, term type: deduce, before: mul-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr@0_opt_2  :  mul-expr@0_opt_2@0_decl_1  mul-expr  %MARK%  
 index is: 594, term type: deduce, before: mul-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#106  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  prim-expr  %MARK%  unary-expr@2_opt_2  
 index is: 604, term type: to_deduce, before: prim-expr, after: unary-expr@2_opt_2
TARGET LIST: 
target index: 605  , change_value: unary-expr@2_opt_2
target index: 613  , change_value: %NULL%
target index: 614  , change_value: %NULL%

########
#SUBSET#
########
unary-expr  :  prim-expr  %MARK%  unary-expr@2_opt_2  
 index is: 604, term type: to_deduce, before: prim-expr, after: unary-expr@2_opt_2
TARGET LIST: 
target index: 605  , change_value: unary-expr@2_opt_2
target index: 613  , change_value: %NULL%
target index: 614  , change_value: %NULL%

unary-expr@2_opt_2  :  %MARK%  
 index is: 613, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary-expr@2_opt_2  :  %MARK%  postfix-expr  
 index is: 614, term type: to_deduce, before: %NULL%, after: postfix-expr
TARGET LIST: 
target index: 615  , change_value: postfix-expr
target index: 639  , change_value: %NULL%

postfix-expr  :  %MARK%  postfix-expr@0_decl_1  postfix-expr@0_opt_2  
 index is: 639, term type: to_deduce, before: %NULL%, after: postfix-expr@0_decl_1
TARGET LIST: 
target index: 640  , change_value: postfix-expr@0_decl_1
target index: 645  , change_value: %NULL%
target index: 647  , change_value: %NULL%
target index: 649  , change_value: %NULL%

postfix-expr@0_decl_1  :  %MARK%  '...'  
 index is: 645, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 646  , change_value: '...'

postfix-expr@0_decl_1  :  %MARK%  '--'  
 index is: 647, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 648  , change_value: '--'

postfix-expr@0_decl_1  :  %MARK%  '++'  
 index is: 649, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 650  , change_value: '++'

########
#TO SET#
########
index: 107, target_source: unary-expr@2_opt_2

index: 108, target_source: postfix-expr

index: 109, target_source: postfix-expr@0_decl_1

index: 112, target_source: '...'

index: 113, target_source: '--'

index: 114, target_source: '++'



###########
#107  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  prim-expr  unary-expr@2_opt_2  %MARK%  
 index is: 605, term type: deduce, before: unary-expr@2_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr  :  prim-expr  unary-expr@2_opt_2  %MARK%  
 index is: 605, term type: deduce, before: unary-expr@2_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#108  TERM#
###########


##########
#FROM SET#
##########
unary-expr@2_opt_2  :  postfix-expr  %MARK%  
 index is: 615, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr@2_opt_2  :  postfix-expr  %MARK%  
 index is: 615, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#109  TERM#
###########


##########
#FROM SET#
##########
postfix-expr  :  postfix-expr@0_decl_1  %MARK%  postfix-expr@0_opt_2  
 index is: 640, term type: to_deduce, before: postfix-expr@0_decl_1, after: postfix-expr@0_opt_2
TARGET LIST: 
target index: 641  , change_value: postfix-expr@0_opt_2
target index: 642  , change_value: %NULL%
target index: 643  , change_value: %NULL%

########
#SUBSET#
########
postfix-expr  :  postfix-expr@0_decl_1  %MARK%  postfix-expr@0_opt_2  
 index is: 640, term type: to_deduce, before: postfix-expr@0_decl_1, after: postfix-expr@0_opt_2
TARGET LIST: 
target index: 641  , change_value: postfix-expr@0_opt_2
target index: 642  , change_value: %NULL%
target index: 643  , change_value: %NULL%

postfix-expr@0_opt_2  :  %MARK%  
 index is: 642, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

postfix-expr@0_opt_2  :  %MARK%  postfix-expr  
 index is: 643, term type: to_deduce, before: %NULL%, after: postfix-expr
TARGET LIST: 
target index: 639  , change_value: %NULL%
target index: 644  , change_value: postfix-expr

postfix-expr  :  %MARK%  postfix-expr@0_decl_1  postfix-expr@0_opt_2  
 index is: 639, term type: to_deduce, before: %NULL%, after: postfix-expr@0_decl_1
TARGET LIST: 
target index: 640  , change_value: postfix-expr@0_decl_1
target index: 645  , change_value: %NULL%
target index: 647  , change_value: %NULL%
target index: 649  , change_value: %NULL%

postfix-expr@0_decl_1  :  %MARK%  '...'  
 index is: 645, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 646  , change_value: '...'

postfix-expr@0_decl_1  :  %MARK%  '--'  
 index is: 647, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 648  , change_value: '--'

postfix-expr@0_decl_1  :  %MARK%  '++'  
 index is: 649, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 650  , change_value: '++'

########
#TO SET#
########
index: 110, target_source: postfix-expr@0_opt_2

index: 111, target_source: postfix-expr

index: 109, target_source: postfix-expr@0_decl_1

index: 112, target_source: '...'

index: 113, target_source: '--'

index: 114, target_source: '++'



###########
#110  TERM#
###########


##########
#FROM SET#
##########
postfix-expr  :  postfix-expr@0_decl_1  postfix-expr@0_opt_2  %MARK%  
 index is: 641, term type: deduce, before: postfix-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix-expr  :  postfix-expr@0_decl_1  postfix-expr@0_opt_2  %MARK%  
 index is: 641, term type: deduce, before: postfix-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#111  TERM#
###########


##########
#FROM SET#
##########
postfix-expr@0_opt_2  :  postfix-expr  %MARK%  
 index is: 644, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix-expr@0_opt_2  :  postfix-expr  %MARK%  
 index is: 644, term type: deduce, before: postfix-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#112  TERM#
###########


##########
#FROM SET#
##########
postfix-expr@0_decl_1  :  '...'  %MARK%  
 index is: 646, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix-expr@0_decl_1  :  '...'  %MARK%  
 index is: 646, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#113  TERM#
###########


##########
#FROM SET#
##########
postfix-expr@0_decl_1  :  '--'  %MARK%  
 index is: 648, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix-expr@0_decl_1  :  '--'  %MARK%  
 index is: 648, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#114  TERM#
###########


##########
#FROM SET#
##########
postfix-expr@0_decl_1  :  '++'  %MARK%  
 index is: 650, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
postfix-expr@0_decl_1  :  '++'  %MARK%  
 index is: 650, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#115  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  unary-expr@1_decl_1  %MARK%  unary-expr  unary-expr@1_opt_3  
 index is: 607, term type: to_deduce, before: unary-expr@1_decl_1, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 608  , change_value: unary-expr
target index: 610  , change_value: %NULL%

########
#SUBSET#
########
unary-expr  :  unary-expr@1_decl_1  %MARK%  unary-expr  unary-expr@1_opt_3  
 index is: 607, term type: to_deduce, before: unary-expr@1_decl_1, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 608  , change_value: unary-expr
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 116, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#116  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  unary-expr@1_decl_1  unary-expr  %MARK%  unary-expr@1_opt_3  
 index is: 608, term type: to_deduce, before: unary-expr, after: unary-expr@1_opt_3
TARGET LIST: 
target index: 609  , change_value: unary-expr@1_opt_3
target index: 616  , change_value: %NULL%
target index: 617  , change_value: %NULL%

########
#SUBSET#
########
unary-expr  :  unary-expr@1_decl_1  unary-expr  %MARK%  unary-expr@1_opt_3  
 index is: 608, term type: to_deduce, before: unary-expr, after: unary-expr@1_opt_3
TARGET LIST: 
target index: 609  , change_value: unary-expr@1_opt_3
target index: 616  , change_value: %NULL%
target index: 617  , change_value: %NULL%

unary-expr@1_opt_3  :  %MARK%  
 index is: 616, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

unary-expr@1_opt_3  :  %MARK%  array  
 index is: 617, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 618  , change_value: array
target index: 710  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

########
#TO SET#
########
index: 117, target_source: unary-expr@1_opt_3

index: 118, target_source: array

index: 119, target_source: '{'



###########
#117  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  %MARK%  
 index is: 609, term type: deduce, before: unary-expr@1_opt_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr  :  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  %MARK%  
 index is: 609, term type: deduce, before: unary-expr@1_opt_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#118  TERM#
###########


##########
#FROM SET#
##########
unary-expr@1_opt_3  :  array  %MARK%  
 index is: 618, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr@1_opt_3  :  array  %MARK%  
 index is: 618, term type: deduce, before: array, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#119  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 711, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 712  , change_value: array@0_opt_2
target index: 714  , change_value: %NULL%
target index: 715  , change_value: %NULL%

########
#SUBSET#
########
array  :  '{'  %MARK%  array@0_opt_2  '}'  
 index is: 711, term type: to_deduce, before: '{', after: array@0_opt_2
TARGET LIST: 
target index: 712  , change_value: array@0_opt_2
target index: 714  , change_value: %NULL%
target index: 715  , change_value: %NULL%

array@0_opt_2  :  %MARK%  
 index is: 714, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

array@0_opt_2  :  %MARK%  expr  
 index is: 715, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 716  , change_value: expr

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 120, target_source: array@0_opt_2

index: 122, target_source: expr

index: 64, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#120  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 712, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 713  , change_value: '}'

########
#SUBSET#
########
array  :  '{'  array@0_opt_2  %MARK%  '}'  
 index is: 712, term type: shift, before: array@0_opt_2, after: '}'
TARGET LIST: 
target index: 713  , change_value: '}'

########
#TO SET#
########
index: 121, target_source: '}'



###########
#121  TERM#
###########


##########
#FROM SET#
##########
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 713, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
array  :  '{'  array@0_opt_2  '}'  %MARK%  
 index is: 713, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#122  TERM#
###########


##########
#FROM SET#
##########
array@0_opt_2  :  expr  %MARK%  
 index is: 716, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
array@0_opt_2  :  expr  %MARK%  
 index is: 716, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#123  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  %MARK%  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 450, term type: to_deduce, before: '[', after: lambda-expr@0_opt_2
TARGET LIST: 
target index: 451  , change_value: lambda-expr@0_opt_2
target index: 460  , change_value: %NULL%
target index: 461  , change_value: %NULL%

########
#SUBSET#
########
lambda-expr  :  '['  %MARK%  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 450, term type: to_deduce, before: '[', after: lambda-expr@0_opt_2
TARGET LIST: 
target index: 451  , change_value: lambda-expr@0_opt_2
target index: 460  , change_value: %NULL%
target index: 461  , change_value: %NULL%

lambda-expr@0_opt_2  :  %MARK%  
 index is: 460, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_2  :  %MARK%  capture-list  
 index is: 461, term type: to_deduce, before: %NULL%, after: capture-list
TARGET LIST: 
target index: 462  , change_value: capture-list
target index: 463  , change_value: %NULL%

capture-list  :  %MARK%  capture-list@0_opt_1  ID  capture-list@0_rep_3  
 index is: 463, term type: to_deduce, before: %NULL%, after: capture-list@0_opt_1
TARGET LIST: 
target index: 464  , change_value: capture-list@0_opt_1
target index: 472  , change_value: %NULL%
target index: 473  , change_value: %NULL%

capture-list@0_opt_1  :  %MARK%  
 index is: 472, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_opt_1  :  %MARK%  '='  
 index is: 473, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 474  , change_value: '='

########
#TO SET#
########
index: 124, target_source: lambda-expr@0_opt_2

index: 380, target_source: capture-list

index: 381, target_source: capture-list@0_opt_1

index: 387, target_source: '='



###########
#124  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  %MARK%  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 451, term type: shift, before: lambda-expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 452  , change_value: ']'

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  %MARK%  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 451, term type: shift, before: lambda-expr@0_opt_2, after: ']'
TARGET LIST: 
target index: 452  , change_value: ']'

########
#TO SET#
########
index: 125, target_source: ']'



###########
#125  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  %MARK%  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 452, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 453  , change_value: '('

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  %MARK%  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 452, term type: shift, before: ']', after: '('
TARGET LIST: 
target index: 453  , change_value: '('

########
#TO SET#
########
index: 126, target_source: '('



###########
#126  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  %MARK%  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 453, term type: to_deduce, before: '(', after: lambda-expr@0_opt_5
TARGET LIST: 
target index: 454  , change_value: lambda-expr@0_opt_5
target index: 457  , change_value: %NULL%
target index: 458  , change_value: %NULL%

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  %MARK%  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 453, term type: to_deduce, before: '(', after: lambda-expr@0_opt_5
TARGET LIST: 
target index: 454  , change_value: lambda-expr@0_opt_5
target index: 457  , change_value: %NULL%
target index: 458  , change_value: %NULL%

lambda-expr@0_opt_5  :  %MARK%  
 index is: 457, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-expr@0_opt_5  :  %MARK%  argument-list  
 index is: 458, term type: to_deduce, before: %NULL%, after: argument-list
TARGET LIST: 
target index: 459  , change_value: argument-list
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%

argument-list  :  %MARK%  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 475, term type: to_deduce, before: %NULL%, after: argument-list@1_opt_1
TARGET LIST: 
target index: 476  , change_value: argument-list@1_opt_1
target index: 492  , change_value: %NULL%
target index: 493  , change_value: %NULL%

argument-list  :  %MARK%  '...'  ID  
 index is: 480, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 481  , change_value: '...'

argument-list@1_opt_1  :  %MARK%  
 index is: 492, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_1  :  %MARK%  '='  
 index is: 493, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 494  , change_value: '='

########
#TO SET#
########
index: 127, target_source: lambda-expr@0_opt_5

index: 367, target_source: argument-list

index: 368, target_source: argument-list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



###########
#127  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  %MARK%  ')'  lambda-body  
 index is: 454, term type: shift, before: lambda-expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 455  , change_value: ')'

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  %MARK%  ')'  lambda-body  
 index is: 454, term type: shift, before: lambda-expr@0_opt_5, after: ')'
TARGET LIST: 
target index: 455  , change_value: ')'

########
#TO SET#
########
index: 128, target_source: ')'



###########
#128  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  %MARK%  lambda-body  
 index is: 455, term type: to_deduce, before: ')', after: lambda-body
TARGET LIST: 
target index: 456  , change_value: lambda-body
target index: 495  , change_value: %NULL%
target index: 498  , change_value: %NULL%

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  %MARK%  lambda-body  
 index is: 455, term type: to_deduce, before: ')', after: lambda-body
TARGET LIST: 
target index: 456  , change_value: lambda-body
target index: 495  , change_value: %NULL%
target index: 498  , change_value: %NULL%

lambda-body  :  %MARK%  '->'  cond-expr  
 index is: 495, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 496  , change_value: '->'

lambda-body  :  %MARK%  '{'  lambda-body@0_rep_2  '}'  
 index is: 498, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 499  , change_value: '{'

########
#TO SET#
########
index: 129, target_source: lambda-body

index: 130, target_source: '->'

index: 196, target_source: '{'



###########
#129  TERM#
###########


##########
#FROM SET#
##########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  %MARK%  
 index is: 456, term type: deduce, before: lambda-body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-expr  :  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  %MARK%  
 index is: 456, term type: deduce, before: lambda-body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#130  TERM#
###########


##########
#FROM SET#
##########
lambda-body  :  '->'  %MARK%  cond-expr  
 index is: 496, term type: to_deduce, before: '->', after: cond-expr
TARGET LIST: 
target index: 497  , change_value: cond-expr
target index: 511  , change_value: %NULL%

########
#SUBSET#
########
lambda-body  :  '->'  %MARK%  cond-expr  
 index is: 496, term type: to_deduce, before: '->', after: cond-expr
TARGET LIST: 
target index: 497  , change_value: cond-expr
target index: 511  , change_value: %NULL%

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 131, target_source: cond-expr

index: 77, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#131  TERM#
###########


##########
#FROM SET#
##########
lambda-body  :  '->'  cond-expr  %MARK%  
 index is: 497, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-body  :  '->'  cond-expr  %MARK%  
 index is: 497, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#132  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  unary-op  %MARK%  unary-expr  
 index is: 611, term type: to_deduce, before: unary-op, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%
target index: 612  , change_value: unary-expr

########
#SUBSET#
########
unary-expr  :  unary-op  %MARK%  unary-expr  
 index is: 611, term type: to_deduce, before: unary-op, after: unary-expr
TARGET LIST: 
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%
target index: 612  , change_value: unary-expr

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 133, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#133  TERM#
###########


##########
#FROM SET#
##########
unary-expr  :  unary-op  unary-expr  %MARK%  
 index is: 612, term type: deduce, before: unary-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr  :  unary-op  unary-expr  %MARK%  
 index is: 612, term type: deduce, before: unary-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#134  TERM#
###########


##########
#FROM SET#
##########
prim-expr  :  constant  %MARK%  
 index is: 652, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prim-expr  :  constant  %MARK%  
 index is: 652, term type: deduce, before: constant, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#135  TERM#
###########


##########
#FROM SET#
##########
prim-expr  :  visit-expr  %MARK%  
 index is: 654, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prim-expr  :  visit-expr  %MARK%  
 index is: 654, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#136  TERM#
###########


##########
#FROM SET#
##########
unary-expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 620, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr@1_decl_1  :  'gcnew'  %MARK%  
 index is: 620, term type: deduce, before: 'gcnew', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#137  TERM#
###########


##########
#FROM SET#
##########
unary-expr@1_decl_1  :  'new'  %MARK%  
 index is: 622, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-expr@1_decl_1  :  'new'  %MARK%  
 index is: 622, term type: deduce, before: 'new', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#138  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  'not'  %MARK%  
 index is: 624, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  'not'  %MARK%  
 index is: 624, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#139  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '!'  %MARK%  
 index is: 626, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '!'  %MARK%  
 index is: 626, term type: deduce, before: '!', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#140  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '-'  %MARK%  
 index is: 628, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '-'  %MARK%  
 index is: 628, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#141  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '&'  %MARK%  
 index is: 630, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '&'  %MARK%  
 index is: 630, term type: deduce, before: '&', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#142  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '*'  %MARK%  
 index is: 632, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '*'  %MARK%  
 index is: 632, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#143  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '--'  %MARK%  
 index is: 634, term type: deduce, before: '--', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#144  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  '++'  %MARK%  
 index is: 636, term type: deduce, before: '++', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#145  TERM#
###########


##########
#FROM SET#
##########
unary-op  :  'typeid'  %MARK%  
 index is: 638, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
unary-op  :  'typeid'  %MARK%  
 index is: 638, term type: deduce, before: 'typeid', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#146  TERM#
###########


##########
#FROM SET#
##########
constant  :  'false'  %MARK%  
 index is: 703, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'false'  %MARK%  
 index is: 703, term type: deduce, before: 'false', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#147  TERM#
###########


##########
#FROM SET#
##########
constant  :  'true'  %MARK%  
 index is: 705, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'true'  %MARK%  
 index is: 705, term type: deduce, before: 'true', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#148  TERM#
###########


##########
#FROM SET#
##########
constant  :  'null'  %MARK%  
 index is: 707, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  'null'  %MARK%  
 index is: 707, term type: deduce, before: 'null', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#149  TERM#
###########


##########
#FROM SET#
##########
constant  :  NUM  %MARK%  
 index is: 709, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
constant  :  NUM  %MARK%  
 index is: 709, term type: deduce, before: NUM, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#150  TERM#
###########


##########
#FROM SET#
##########
visit-expr  :  object  %MARK%  visit-expr@0_opt_2  
 index is: 656, term type: to_deduce, before: object, after: visit-expr@0_opt_2
TARGET LIST: 
target index: 657  , change_value: visit-expr@0_opt_2
target index: 658  , change_value: %NULL%
target index: 659  , change_value: %NULL%

########
#SUBSET#
########
visit-expr  :  object  %MARK%  visit-expr@0_opt_2  
 index is: 656, term type: to_deduce, before: object, after: visit-expr@0_opt_2
TARGET LIST: 
target index: 657  , change_value: visit-expr@0_opt_2
target index: 658  , change_value: %NULL%
target index: 659  , change_value: %NULL%

visit-expr@0_opt_2  :  %MARK%  
 index is: 658, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

visit-expr@0_opt_2  :  %MARK%  visit-expr@0_opt_2@0_decl_1  visit-expr  
 index is: 659, term type: to_deduce, before: %NULL%, after: visit-expr@0_opt_2@0_decl_1
TARGET LIST: 
target index: 660  , change_value: visit-expr@0_opt_2@0_decl_1
target index: 662  , change_value: %NULL%
target index: 664  , change_value: %NULL%

visit-expr@0_opt_2@0_decl_1  :  %MARK%  '.'  
 index is: 662, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 663  , change_value: '.'

visit-expr@0_opt_2@0_decl_1  :  %MARK%  '->'  
 index is: 664, term type: shift, before: %NULL%, after: '->'
TARGET LIST: 
target index: 665  , change_value: '->'

########
#TO SET#
########
index: 151, target_source: visit-expr@0_opt_2

index: 152, target_source: visit-expr@0_opt_2@0_decl_1

index: 194, target_source: '.'

index: 195, target_source: '->'



###########
#151  TERM#
###########


##########
#FROM SET#
##########
visit-expr  :  object  visit-expr@0_opt_2  %MARK%  
 index is: 657, term type: deduce, before: visit-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit-expr  :  object  visit-expr@0_opt_2  %MARK%  
 index is: 657, term type: deduce, before: visit-expr@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#152  TERM#
###########


##########
#FROM SET#
##########
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  %MARK%  visit-expr  
 index is: 660, term type: to_deduce, before: visit-expr@0_opt_2@0_decl_1, after: visit-expr
TARGET LIST: 
target index: 655  , change_value: %NULL%
target index: 661  , change_value: visit-expr

########
#SUBSET#
########
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  %MARK%  visit-expr  
 index is: 660, term type: to_deduce, before: visit-expr@0_opt_2@0_decl_1, after: visit-expr
TARGET LIST: 
target index: 655  , change_value: %NULL%
target index: 661  , change_value: visit-expr

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 153, target_source: visit-expr

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#153  TERM#
###########


##########
#FROM SET#
##########
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  visit-expr  %MARK%  
 index is: 661, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit-expr@0_opt_2  :  visit-expr@0_opt_2@0_decl_1  visit-expr  %MARK%  
 index is: 661, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#154  TERM#
###########


##########
#FROM SET#
##########
object  :  CHAR  %MARK%  
 index is: 667, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  CHAR  %MARK%  
 index is: 667, term type: deduce, before: CHAR, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#155  TERM#
###########


##########
#FROM SET#
##########
object  :  element  %MARK%  
 index is: 669, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  element  %MARK%  
 index is: 669, term type: deduce, before: element, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#156  TERM#
###########


##########
#FROM SET#
##########
object  :  'global'  %MARK%  
 index is: 671, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  'global'  %MARK%  
 index is: 671, term type: deduce, before: 'global', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#157  TERM#
###########


##########
#FROM SET#
##########
object  :  'local'  %MARK%  
 index is: 673, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  'local'  %MARK%  
 index is: 673, term type: deduce, before: 'local', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#158  TERM#
###########


##########
#FROM SET#
##########
object  :  STR  %MARK%  object@1_opt_2  
 index is: 675, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 676  , change_value: object@1_opt_2
target index: 680  , change_value: %NULL%
target index: 681  , change_value: %NULL%

########
#SUBSET#
########
object  :  STR  %MARK%  object@1_opt_2  
 index is: 675, term type: to_deduce, before: STR, after: object@1_opt_2
TARGET LIST: 
target index: 676  , change_value: object@1_opt_2
target index: 680  , change_value: %NULL%
target index: 681  , change_value: %NULL%

object@1_opt_2  :  %MARK%  
 index is: 680, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@1_opt_2  :  %MARK%  index  
 index is: 681, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 682  , change_value: index
target index: 724  , change_value: %NULL%

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

########
#TO SET#
########
index: 159, target_source: object@1_opt_2

index: 160, target_source: index

index: 161, target_source: '['



###########
#159  TERM#
###########


##########
#FROM SET#
##########
object  :  STR  object@1_opt_2  %MARK%  
 index is: 676, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  STR  object@1_opt_2  %MARK%  
 index is: 676, term type: deduce, before: object@1_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#160  TERM#
###########


##########
#FROM SET#
##########
object@1_opt_2  :  index  %MARK%  
 index is: 682, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object@1_opt_2  :  index  %MARK%  
 index is: 682, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#161  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  %MARK%  basic-expr  ']'  
 index is: 725, term type: to_deduce, before: '[', after: basic-expr
TARGET LIST: 
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%
target index: 726  , change_value: basic-expr

########
#SUBSET#
########
index  :  '['  %MARK%  basic-expr  ']'  
 index is: 725, term type: to_deduce, before: '[', after: basic-expr
TARGET LIST: 
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%
target index: 726  , change_value: basic-expr

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 162, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#162  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  basic-expr  %MARK%  ']'  
 index is: 726, term type: shift, before: basic-expr, after: ']'
TARGET LIST: 
target index: 727  , change_value: ']'

########
#SUBSET#
########
index  :  '['  basic-expr  %MARK%  ']'  
 index is: 726, term type: shift, before: basic-expr, after: ']'
TARGET LIST: 
target index: 727  , change_value: ']'

########
#TO SET#
########
index: 163, target_source: ']'



###########
#163  TERM#
###########


##########
#FROM SET#
##########
index  :  '['  basic-expr  ']'  %MARK%  
 index is: 727, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
index  :  '['  basic-expr  ']'  %MARK%  
 index is: 727, term type: deduce, before: ']', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#164  TERM#
###########


##########
#FROM SET#
##########
var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var-bind-list
TARGET LIST: 
target index: 148  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, term type: to_deduce, before: '(', after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 698  , change_value: single-expr

########
#SUBSET#
########
var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var-bind-list
TARGET LIST: 
target index: 148  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, term type: to_deduce, before: '(', after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 698  , change_value: single-expr

var-bind-list  :  %MARK%  var-bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var-bind

var-bind-list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var-bind-list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 165, target_source: var-bind-list

index: 175, target_source: single-expr

index: 177, target_source: var-bind

index: 172, target_source: '...'

index: 178, target_source: ID

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 164, target_source: '('

index: 70, target_source: cond-expr

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'



###########
#165  TERM#
###########


##########
#FROM SET#
##########
var-bind  :  '('  var-bind-list  %MARK%  var-bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var-bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

########
#SUBSET#
########
var-bind  :  '('  var-bind-list  %MARK%  var-bind@0_rep_3  ')'  
 index is: 148, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 149  , change_value: var-bind@0_rep_3
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%

var-bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var-bind@0_rep_3  :  %MARK%  ','  var-bind-list  var-bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 166, target_source: var-bind@0_rep_3

index: 168, target_source: ','



###########
#166  TERM#
###########


##########
#FROM SET#
##########
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var-bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

########
#SUBSET#
########
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  %MARK%  ')'  
 index is: 149, term type: shift, before: var-bind@0_rep_3, after: ')'
TARGET LIST: 
target index: 150  , change_value: ')'

########
#TO SET#
########
index: 167, target_source: ')'



###########
#167  TERM#
###########


##########
#FROM SET#
##########
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind  :  '('  var-bind-list  var-bind@0_rep_3  ')'  %MARK%  
 index is: 150, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#168  TERM#
###########


##########
#FROM SET#
##########
var-bind@0_rep_3  :  ','  %MARK%  var-bind-list  var-bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var-bind-list
TARGET LIST: 
target index: 154  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

########
#SUBSET#
########
var-bind@0_rep_3  :  ','  %MARK%  var-bind-list  var-bind@0_rep_3  
 index is: 153, term type: to_deduce, before: ',', after: var-bind-list
TARGET LIST: 
target index: 154  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var-bind-list  :  %MARK%  var-bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var-bind

var-bind-list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var-bind-list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 169, target_source: var-bind-list

index: 171, target_source: var-bind

index: 172, target_source: '...'

index: 173, target_source: ID

index: 174, target_source: '('



###########
#169  TERM#
###########


##########
#FROM SET#
##########
var-bind@0_rep_3  :  ','  var-bind-list  %MARK%  var-bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var-bind@0_rep_3

########
#SUBSET#
########
var-bind@0_rep_3  :  ','  var-bind-list  %MARK%  var-bind@0_rep_3  
 index is: 154, term type: to_deduce, before: var-bind-list, after: var-bind@0_rep_3
TARGET LIST: 
target index: 151  , change_value: %NULL%
target index: 152  , change_value: %NULL%
target index: 155  , change_value: var-bind@0_rep_3

var-bind@0_rep_3  :  %MARK%  
 index is: 151, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var-bind@0_rep_3  :  %MARK%  ','  var-bind-list  var-bind@0_rep_3  
 index is: 152, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 153  , change_value: ','

########
#TO SET#
########
index: 170, target_source: var-bind@0_rep_3

index: 168, target_source: ','



###########
#170  TERM#
###########


##########
#FROM SET#
##########
var-bind@0_rep_3  :  ','  var-bind-list  var-bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var-bind@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind@0_rep_3  :  ','  var-bind-list  var-bind@0_rep_3  %MARK%  
 index is: 155, term type: deduce, before: var-bind@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#171  TERM#
###########


##########
#FROM SET#
##########
var-bind-list  :  var-bind  %MARK%  
 index is: 157, term type: deduce, before: var-bind, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind-list  :  var-bind  %MARK%  
 index is: 157, term type: deduce, before: var-bind, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#172  TERM#
###########


##########
#FROM SET#
##########
var-bind-list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind-list  :  '...'  %MARK%  
 index is: 159, term type: deduce, before: '...', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#173  TERM#
###########


##########
#FROM SET#
##########
var-bind-list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind-list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#174  TERM#
###########


##########
#FROM SET#
##########
var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var-bind-list
TARGET LIST: 
target index: 148  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

########
#SUBSET#
########
var-bind  :  '('  %MARK%  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 147, term type: to_deduce, before: '(', after: var-bind-list
TARGET LIST: 
target index: 148  , change_value: var-bind-list
target index: 156  , change_value: %NULL%
target index: 158  , change_value: %NULL%
target index: 160  , change_value: %NULL%

var-bind-list  :  %MARK%  var-bind  
 index is: 156, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 157  , change_value: var-bind

var-bind-list  :  %MARK%  '...'  
 index is: 158, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 159  , change_value: '...'

var-bind-list  :  %MARK%  ID  
 index is: 160, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 161  , change_value: ID

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 165, target_source: var-bind-list

index: 171, target_source: var-bind

index: 172, target_source: '...'

index: 173, target_source: ID

index: 174, target_source: '('



###########
#175  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  single-expr  %MARK%  ')'  
 index is: 698, term type: shift, before: single-expr, after: ')'
TARGET LIST: 
target index: 699  , change_value: ')'

########
#SUBSET#
########
element@0_decl_1  :  '('  single-expr  %MARK%  ')'  
 index is: 698, term type: shift, before: single-expr, after: ')'
TARGET LIST: 
target index: 699  , change_value: ')'

########
#TO SET#
########
index: 176, target_source: ')'



###########
#176  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  single-expr  ')'  %MARK%  
 index is: 699, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_decl_1  :  '('  single-expr  ')'  %MARK%  
 index is: 699, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#177  TERM#
###########


##########
#FROM SET#
##########
var-bind-list  :  var-bind  %MARK%  
 index is: 157, term type: deduce, before: var-bind, after: %NULL%
TARGET LIST: 

basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 427  , change_value: '='

########
#SUBSET#
########
var-bind-list  :  var-bind  %MARK%  
 index is: 157, term type: deduce, before: var-bind, after: %NULL%
TARGET LIST: 

basic-expr  :  var-bind  %MARK%  '='  cond-expr  
 index is: 426, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 427  , change_value: '='

########
#TO SET#
########
index: 75, target_source: '='



###########
#178  TERM#
###########


##########
#FROM SET#
##########
var-bind-list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  ID  %MARK%  
 index is: 701, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-bind-list  :  ID  %MARK%  
 index is: 161, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

element@0_decl_1  :  ID  %MARK%  
 index is: 701, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#179  TERM#
###########


##########
#FROM SET#
##########
object  :  array  %MARK%  object@0_opt_2  
 index is: 678, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 679  , change_value: object@0_opt_2
target index: 683  , change_value: %NULL%
target index: 684  , change_value: %NULL%

########
#SUBSET#
########
object  :  array  %MARK%  object@0_opt_2  
 index is: 678, term type: to_deduce, before: array, after: object@0_opt_2
TARGET LIST: 
target index: 679  , change_value: object@0_opt_2
target index: 683  , change_value: %NULL%
target index: 684  , change_value: %NULL%

object@0_opt_2  :  %MARK%  
 index is: 683, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

object@0_opt_2  :  %MARK%  index  
 index is: 684, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 685  , change_value: index
target index: 724  , change_value: %NULL%

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

########
#TO SET#
########
index: 180, target_source: object@0_opt_2

index: 181, target_source: index

index: 161, target_source: '['



###########
#180  TERM#
###########


##########
#FROM SET#
##########
object  :  array  object@0_opt_2  %MARK%  
 index is: 679, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object  :  array  object@0_opt_2  %MARK%  
 index is: 679, term type: deduce, before: object@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#181  TERM#
###########


##########
#FROM SET#
##########
object@0_opt_2  :  index  %MARK%  
 index is: 685, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
object@0_opt_2  :  index  %MARK%  
 index is: 685, term type: deduce, before: index, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#182  TERM#
###########


##########
#FROM SET#
##########
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 687, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 688  , change_value: element@0_rep_2
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%

########
#SUBSET#
########
element  :  element@0_decl_1  %MARK%  element@0_rep_2  
 index is: 687, term type: to_deduce, before: element@0_decl_1, after: element@0_rep_2
TARGET LIST: 
target index: 688  , change_value: element@0_rep_2
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%

element@0_rep_2  :  %MARK%  
 index is: 689, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 690, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 691  , change_value: index
target index: 724  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 693, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 694  , change_value: fcall
target index: 717  , change_value: %NULL%

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 717, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 718  , change_value: '('

########
#TO SET#
########
index: 183, target_source: element@0_rep_2

index: 184, target_source: index

index: 186, target_source: fcall

index: 161, target_source: '['

index: 188, target_source: '('



###########
#183  TERM#
###########


##########
#FROM SET#
##########
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 688, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element  :  element@0_decl_1  element@0_rep_2  %MARK%  
 index is: 688, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#184  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 691, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: element@0_rep_2
target index: 693  , change_value: %NULL%

########
#SUBSET#
########
element@0_rep_2  :  index  %MARK%  element@0_rep_2  
 index is: 691, term type: to_deduce, before: index, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 692  , change_value: element@0_rep_2
target index: 693  , change_value: %NULL%

element@0_rep_2  :  %MARK%  
 index is: 689, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 690, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 691  , change_value: index
target index: 724  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 693, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 694  , change_value: fcall
target index: 717  , change_value: %NULL%

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 717, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 718  , change_value: '('

########
#TO SET#
########
index: 185, target_source: element@0_rep_2

index: 184, target_source: index

index: 186, target_source: fcall

index: 161, target_source: '['

index: 188, target_source: '('



###########
#185  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 692, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_rep_2  :  index  element@0_rep_2  %MARK%  
 index is: 692, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#186  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 694, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%
target index: 695  , change_value: element@0_rep_2

########
#SUBSET#
########
element@0_rep_2  :  fcall  %MARK%  element@0_rep_2  
 index is: 694, term type: to_deduce, before: fcall, after: element@0_rep_2
TARGET LIST: 
target index: 689  , change_value: %NULL%
target index: 690  , change_value: %NULL%
target index: 693  , change_value: %NULL%
target index: 695  , change_value: element@0_rep_2

element@0_rep_2  :  %MARK%  
 index is: 689, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

element@0_rep_2  :  %MARK%  index  element@0_rep_2  
 index is: 690, term type: to_deduce, before: %NULL%, after: index
TARGET LIST: 
target index: 691  , change_value: index
target index: 724  , change_value: %NULL%

element@0_rep_2  :  %MARK%  fcall  element@0_rep_2  
 index is: 693, term type: to_deduce, before: %NULL%, after: fcall
TARGET LIST: 
target index: 694  , change_value: fcall
target index: 717  , change_value: %NULL%

index  :  %MARK%  '['  basic-expr  ']'  
 index is: 724, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 725  , change_value: '['

fcall  :  %MARK%  '('  fcall@0_opt_2  ')'  
 index is: 717, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 718  , change_value: '('

########
#TO SET#
########
index: 187, target_source: element@0_rep_2

index: 184, target_source: index

index: 186, target_source: fcall

index: 161, target_source: '['

index: 188, target_source: '('



###########
#187  TERM#
###########


##########
#FROM SET#
##########
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 695, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_rep_2  :  fcall  element@0_rep_2  %MARK%  
 index is: 695, term type: deduce, before: element@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#188  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 718, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 719  , change_value: fcall@0_opt_2
target index: 721  , change_value: %NULL%
target index: 722  , change_value: %NULL%

########
#SUBSET#
########
fcall  :  '('  %MARK%  fcall@0_opt_2  ')'  
 index is: 718, term type: to_deduce, before: '(', after: fcall@0_opt_2
TARGET LIST: 
target index: 719  , change_value: fcall@0_opt_2
target index: 721  , change_value: %NULL%
target index: 722  , change_value: %NULL%

fcall@0_opt_2  :  %MARK%  
 index is: 721, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

fcall@0_opt_2  :  %MARK%  expr  
 index is: 722, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 411  , change_value: %NULL%
target index: 723  , change_value: expr

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 189, target_source: fcall@0_opt_2

index: 191, target_source: expr

index: 64, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#189  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 719, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 720  , change_value: ')'

########
#SUBSET#
########
fcall  :  '('  fcall@0_opt_2  %MARK%  ')'  
 index is: 719, term type: shift, before: fcall@0_opt_2, after: ')'
TARGET LIST: 
target index: 720  , change_value: ')'

########
#TO SET#
########
index: 190, target_source: ')'



###########
#190  TERM#
###########


##########
#FROM SET#
##########
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 720, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
fcall  :  '('  fcall@0_opt_2  ')'  %MARK%  
 index is: 720, term type: deduce, before: ')', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#191  TERM#
###########


##########
#FROM SET#
##########
fcall@0_opt_2  :  expr  %MARK%  
 index is: 723, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
fcall@0_opt_2  :  expr  %MARK%  
 index is: 723, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#192  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  ID  %MARK%  
 index is: 701, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
element@0_decl_1  :  ID  %MARK%  
 index is: 701, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#193  TERM#
###########


##########
#FROM SET#
##########
element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, term type: to_deduce, before: '(', after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 698  , change_value: single-expr

########
#SUBSET#
########
element@0_decl_1  :  '('  %MARK%  single-expr  ')'  
 index is: 697, term type: to_deduce, before: '(', after: single-expr
TARGET LIST: 
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%
target index: 698  , change_value: single-expr

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 175, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#194  TERM#
###########


##########
#FROM SET#
##########
visit-expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 663, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit-expr@0_opt_2@0_decl_1  :  '.'  %MARK%  
 index is: 663, term type: deduce, before: '.', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#195  TERM#
###########


##########
#FROM SET#
##########
visit-expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 665, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
visit-expr@0_opt_2@0_decl_1  :  '->'  %MARK%  
 index is: 665, term type: deduce, before: '->', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#196  TERM#
###########


##########
#FROM SET#
##########
lambda-body  :  '{'  %MARK%  lambda-body@0_rep_2  '}'  
 index is: 499, term type: to_deduce, before: '{', after: lambda-body@0_rep_2
TARGET LIST: 
target index: 500  , change_value: lambda-body@0_rep_2
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%

########
#SUBSET#
########
lambda-body  :  '{'  %MARK%  lambda-body@0_rep_2  '}'  
 index is: 499, term type: to_deduce, before: '{', after: lambda-body@0_rep_2
TARGET LIST: 
target index: 500  , change_value: lambda-body@0_rep_2
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%

lambda-body@0_rep_2  :  %MARK%  
 index is: 502, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2  :  %MARK%  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 504  , change_value: statement

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 197, target_source: lambda-body@0_rep_2

index: 199, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#197  TERM#
###########


##########
#FROM SET#
##########
lambda-body  :  '{'  lambda-body@0_rep_2  %MARK%  '}'  
 index is: 500, term type: shift, before: lambda-body@0_rep_2, after: '}'
TARGET LIST: 
target index: 501  , change_value: '}'

########
#SUBSET#
########
lambda-body  :  '{'  lambda-body@0_rep_2  %MARK%  '}'  
 index is: 500, term type: shift, before: lambda-body@0_rep_2, after: '}'
TARGET LIST: 
target index: 501  , change_value: '}'

########
#TO SET#
########
index: 198, target_source: '}'



###########
#198  TERM#
###########


##########
#FROM SET#
##########
lambda-body  :  '{'  lambda-body@0_rep_2  '}'  %MARK%  
 index is: 501, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-body  :  '{'  lambda-body@0_rep_2  '}'  %MARK%  
 index is: 501, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#199  TERM#
###########


##########
#FROM SET#
##########
lambda-body@0_rep_2  :  statement  %MARK%  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 504, term type: to_deduce, before: statement, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 505  , change_value: lambda-body@0_rep_2@0_rep_2
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%

########
#SUBSET#
########
lambda-body@0_rep_2  :  statement  %MARK%  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 504, term type: to_deduce, before: statement, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 505  , change_value: lambda-body@0_rep_2@0_rep_2
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%

lambda-body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 507, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda-body@0_rep_2@0_rep_2  
 index is: 508, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 509  , change_value: ENDL

########
#TO SET#
########
index: 200, target_source: lambda-body@0_rep_2@0_rep_2

index: 365, target_source: ENDL



###########
#200  TERM#
###########


##########
#FROM SET#
##########
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  %MARK%  lambda-body@0_rep_2  
 index is: 505, term type: to_deduce, before: lambda-body@0_rep_2@0_rep_2, after: lambda-body@0_rep_2
TARGET LIST: 
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%
target index: 506  , change_value: lambda-body@0_rep_2

########
#SUBSET#
########
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  %MARK%  lambda-body@0_rep_2  
 index is: 505, term type: to_deduce, before: lambda-body@0_rep_2@0_rep_2, after: lambda-body@0_rep_2
TARGET LIST: 
target index: 502  , change_value: %NULL%
target index: 503  , change_value: %NULL%
target index: 506  , change_value: lambda-body@0_rep_2

lambda-body@0_rep_2  :  %MARK%  
 index is: 502, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2  :  %MARK%  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  
 index is: 503, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%
target index: 504  , change_value: statement

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 201, target_source: lambda-body@0_rep_2

index: 199, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#201  TERM#
###########


##########
#FROM SET#
##########
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  %MARK%  
 index is: 506, term type: deduce, before: lambda-body@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-body@0_rep_2  :  statement  lambda-body@0_rep_2@0_rep_2  lambda-body@0_rep_2  %MARK%  
 index is: 506, term type: deduce, before: lambda-body@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#202  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  %MARK%  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 355, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 356  , change_value: ENDL

########
#SUBSET#
########
try-stmt  :  'try'  %MARK%  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 355, term type: shift, before: 'try', after: ENDL
TARGET LIST: 
target index: 356  , change_value: ENDL

########
#TO SET#
########
index: 203, target_source: ENDL



###########
#203  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  ENDL  %MARK%  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 356, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 357  , change_value: stmts

########
#SUBSET#
########
try-stmt  :  'try'  ENDL  %MARK%  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 356, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 357  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 204, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#204  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  ENDL  stmts  %MARK%  try-stmt@0_rep_4  'end'  ENDL  
 index is: 357, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 358  , change_value: try-stmt@0_rep_4
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%

########
#SUBSET#
########
try-stmt  :  'try'  ENDL  stmts  %MARK%  try-stmt@0_rep_4  'end'  ENDL  
 index is: 357, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 358  , change_value: try-stmt@0_rep_4
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%

try-stmt@0_rep_4  :  %MARK%  
 index is: 361, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try-stmt@0_rep_4  :  %MARK%  catch-stmt  stmts  try-stmt@0_rep_4  
 index is: 362, term type: to_deduce, before: %NULL%, after: catch-stmt
TARGET LIST: 
target index: 363  , change_value: catch-stmt
target index: 366  , change_value: %NULL%

catch-stmt  :  %MARK%  'catch'  ID  catch-stmt@0_opt_3  ENDL  
 index is: 366, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 367  , change_value: 'catch'

########
#TO SET#
########
index: 205, target_source: try-stmt@0_rep_4

index: 208, target_source: catch-stmt

index: 211, target_source: 'catch'



###########
#205  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 358, term type: shift, before: try-stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 359  , change_value: 'end'

########
#SUBSET#
########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  %MARK%  'end'  ENDL  
 index is: 358, term type: shift, before: try-stmt@0_rep_4, after: 'end'
TARGET LIST: 
target index: 359  , change_value: 'end'

########
#TO SET#
########
index: 206, target_source: 'end'



###########
#206  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 359, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 360  , change_value: ENDL

########
#SUBSET#
########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  %MARK%  ENDL  
 index is: 359, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 360  , change_value: ENDL

########
#TO SET#
########
index: 207, target_source: ENDL



###########
#207  TERM#
###########


##########
#FROM SET#
##########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 360, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
try-stmt  :  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  %MARK%  
 index is: 360, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#208  TERM#
###########


##########
#FROM SET#
##########
try-stmt@0_rep_4  :  catch-stmt  %MARK%  stmts  try-stmt@0_rep_4  
 index is: 363, term type: to_deduce, before: catch-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 364  , change_value: stmts

########
#SUBSET#
########
try-stmt@0_rep_4  :  catch-stmt  %MARK%  stmts  try-stmt@0_rep_4  
 index is: 363, term type: to_deduce, before: catch-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 364  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 209, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#209  TERM#
###########


##########
#FROM SET#
##########
try-stmt@0_rep_4  :  catch-stmt  stmts  %MARK%  try-stmt@0_rep_4  
 index is: 364, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%
target index: 365  , change_value: try-stmt@0_rep_4

########
#SUBSET#
########
try-stmt@0_rep_4  :  catch-stmt  stmts  %MARK%  try-stmt@0_rep_4  
 index is: 364, term type: to_deduce, before: stmts, after: try-stmt@0_rep_4
TARGET LIST: 
target index: 361  , change_value: %NULL%
target index: 362  , change_value: %NULL%
target index: 365  , change_value: try-stmt@0_rep_4

try-stmt@0_rep_4  :  %MARK%  
 index is: 361, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

try-stmt@0_rep_4  :  %MARK%  catch-stmt  stmts  try-stmt@0_rep_4  
 index is: 362, term type: to_deduce, before: %NULL%, after: catch-stmt
TARGET LIST: 
target index: 363  , change_value: catch-stmt
target index: 366  , change_value: %NULL%

catch-stmt  :  %MARK%  'catch'  ID  catch-stmt@0_opt_3  ENDL  
 index is: 366, term type: shift, before: %NULL%, after: 'catch'
TARGET LIST: 
target index: 367  , change_value: 'catch'

########
#TO SET#
########
index: 210, target_source: try-stmt@0_rep_4

index: 208, target_source: catch-stmt

index: 211, target_source: 'catch'



###########
#210  TERM#
###########


##########
#FROM SET#
##########
try-stmt@0_rep_4  :  catch-stmt  stmts  try-stmt@0_rep_4  %MARK%  
 index is: 365, term type: deduce, before: try-stmt@0_rep_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
try-stmt@0_rep_4  :  catch-stmt  stmts  try-stmt@0_rep_4  %MARK%  
 index is: 365, term type: deduce, before: try-stmt@0_rep_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#211  TERM#
###########


##########
#FROM SET#
##########
catch-stmt  :  'catch'  %MARK%  ID  catch-stmt@0_opt_3  ENDL  
 index is: 367, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 368  , change_value: ID

########
#SUBSET#
########
catch-stmt  :  'catch'  %MARK%  ID  catch-stmt@0_opt_3  ENDL  
 index is: 367, term type: shift, before: 'catch', after: ID
TARGET LIST: 
target index: 368  , change_value: ID

########
#TO SET#
########
index: 212, target_source: ID



###########
#212  TERM#
###########


##########
#FROM SET#
##########
catch-stmt  :  'catch'  ID  %MARK%  catch-stmt@0_opt_3  ENDL  
 index is: 368, term type: to_deduce, before: ID, after: catch-stmt@0_opt_3
TARGET LIST: 
target index: 369  , change_value: catch-stmt@0_opt_3
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

########
#SUBSET#
########
catch-stmt  :  'catch'  ID  %MARK%  catch-stmt@0_opt_3  ENDL  
 index is: 368, term type: to_deduce, before: ID, after: catch-stmt@0_opt_3
TARGET LIST: 
target index: 369  , change_value: catch-stmt@0_opt_3
target index: 371  , change_value: %NULL%
target index: 372  , change_value: %NULL%

catch-stmt@0_opt_3  :  %MARK%  
 index is: 371, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

catch-stmt@0_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 372, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 373  , change_value: ':'

########
#TO SET#
########
index: 213, target_source: catch-stmt@0_opt_3

index: 215, target_source: ':'



###########
#213  TERM#
###########


##########
#FROM SET#
##########
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  %MARK%  ENDL  
 index is: 369, term type: shift, before: catch-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 370  , change_value: ENDL

########
#SUBSET#
########
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  %MARK%  ENDL  
 index is: 369, term type: shift, before: catch-stmt@0_opt_3, after: ENDL
TARGET LIST: 
target index: 370  , change_value: ENDL

########
#TO SET#
########
index: 214, target_source: ENDL



###########
#214  TERM#
###########


##########
#FROM SET#
##########
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  ENDL  %MARK%  
 index is: 370, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
catch-stmt  :  'catch'  ID  catch-stmt@0_opt_3  ENDL  %MARK%  
 index is: 370, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#215  TERM#
###########


##########
#FROM SET#
##########
catch-stmt@0_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 373, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 374  , change_value: visit-expr
target index: 655  , change_value: %NULL%

########
#SUBSET#
########
catch-stmt@0_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 373, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 374  , change_value: visit-expr
target index: 655  , change_value: %NULL%

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 216, target_source: visit-expr

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#216  TERM#
###########


##########
#FROM SET#
##########
catch-stmt@0_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 374, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
catch-stmt@0_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 374, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#217  TERM#
###########


##########
#FROM SET#
##########
return-stmt  :  'return'  %MARK%  return-stmt@0_opt_2  endline  
 index is: 348, term type: to_deduce, before: 'return', after: return-stmt@0_opt_2
TARGET LIST: 
target index: 349  , change_value: return-stmt@0_opt_2
target index: 351  , change_value: %NULL%
target index: 352  , change_value: %NULL%

########
#SUBSET#
########
return-stmt  :  'return'  %MARK%  return-stmt@0_opt_2  endline  
 index is: 348, term type: to_deduce, before: 'return', after: return-stmt@0_opt_2
TARGET LIST: 
target index: 349  , change_value: return-stmt@0_opt_2
target index: 351  , change_value: %NULL%
target index: 352  , change_value: %NULL%

return-stmt@0_opt_2  :  %MARK%  
 index is: 351, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

return-stmt@0_opt_2  :  %MARK%  expr  
 index is: 352, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 353  , change_value: expr
target index: 411  , change_value: %NULL%

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 218, target_source: return-stmt@0_opt_2

index: 220, target_source: expr

index: 64, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#218  TERM#
###########


##########
#FROM SET#
##########
return-stmt  :  'return'  return-stmt@0_opt_2  %MARK%  endline  
 index is: 349, term type: to_deduce, before: return-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 350  , change_value: endline

########
#SUBSET#
########
return-stmt  :  'return'  return-stmt@0_opt_2  %MARK%  endline  
 index is: 349, term type: to_deduce, before: return-stmt@0_opt_2, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 350  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 219, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#219  TERM#
###########


##########
#FROM SET#
##########
return-stmt  :  'return'  return-stmt@0_opt_2  endline  %MARK%  
 index is: 350, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
return-stmt  :  'return'  return-stmt@0_opt_2  endline  %MARK%  
 index is: 350, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#220  TERM#
###########


##########
#FROM SET#
##########
return-stmt@0_opt_2  :  expr  %MARK%  
 index is: 353, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
return-stmt@0_opt_2  :  expr  %MARK%  
 index is: 353, term type: deduce, before: expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#221  TERM#
###########


##########
#FROM SET#
##########
control-stmt  :  control-stmt@0_decl_1  %MARK%  endline  
 index is: 399, term type: to_deduce, before: control-stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 400  , change_value: endline

########
#SUBSET#
########
control-stmt  :  control-stmt@0_decl_1  %MARK%  endline  
 index is: 399, term type: to_deduce, before: control-stmt@0_decl_1, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 400  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 222, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#222  TERM#
###########


##########
#FROM SET#
##########
control-stmt  :  control-stmt@0_decl_1  endline  %MARK%  
 index is: 400, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control-stmt  :  control-stmt@0_decl_1  endline  %MARK%  
 index is: 400, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#223  TERM#
###########


##########
#FROM SET#
##########
foreach-stmt  :  'foreach'  %MARK%  ID  'in'  basic-expr  for-body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

########
#SUBSET#
########
foreach-stmt  :  'foreach'  %MARK%  ID  'in'  basic-expr  for-body  
 index is: 298, term type: shift, before: 'foreach', after: ID
TARGET LIST: 
target index: 299  , change_value: ID

########
#TO SET#
########
index: 224, target_source: ID



###########
#224  TERM#
###########


##########
#FROM SET#
##########
foreach-stmt  :  'foreach'  ID  %MARK%  'in'  basic-expr  for-body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

########
#SUBSET#
########
foreach-stmt  :  'foreach'  ID  %MARK%  'in'  basic-expr  for-body  
 index is: 299, term type: shift, before: ID, after: 'in'
TARGET LIST: 
target index: 300  , change_value: 'in'

########
#TO SET#
########
index: 225, target_source: 'in'



###########
#225  TERM#
###########


##########
#FROM SET#
##########
foreach-stmt  :  'foreach'  ID  'in'  %MARK%  basic-expr  for-body  
 index is: 300, term type: to_deduce, before: 'in', after: basic-expr
TARGET LIST: 
target index: 301  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
foreach-stmt  :  'foreach'  ID  'in'  %MARK%  basic-expr  for-body  
 index is: 300, term type: to_deduce, before: 'in', after: basic-expr
TARGET LIST: 
target index: 301  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 226, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#226  TERM#
###########


##########
#FROM SET#
##########
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  %MARK%  for-body  
 index is: 301, term type: to_deduce, before: basic-expr, after: for-body
TARGET LIST: 
target index: 302  , change_value: for-body
target index: 303  , change_value: %NULL%

########
#SUBSET#
########
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  %MARK%  for-body  
 index is: 301, term type: to_deduce, before: basic-expr, after: for-body
TARGET LIST: 
target index: 302  , change_value: for-body
target index: 303  , change_value: %NULL%

for-body  :  %MARK%  for-body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for-body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for-body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for-body@0_decl_1  :  %MARK%  'do'  basic-expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

########
#TO SET#
########
index: 227, target_source: for-body

index: 228, target_source: for-body@0_decl_1

index: 229, target_source: ENDL

index: 240, target_source: 'do'



###########
#227  TERM#
###########


##########
#FROM SET#
##########
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  for-body  %MARK%  
 index is: 302, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
foreach-stmt  :  'foreach'  ID  'in'  basic-expr  for-body  %MARK%  
 index is: 302, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#228  TERM#
###########


##########
#FROM SET#
##########
for-body  :  for-body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for-body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-body  :  for-body@0_decl_1  %MARK%  
 index is: 304, term type: deduce, before: for-body@0_decl_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#229  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

########
#SUBSET#
########
for-body@0_decl_1  :  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 306, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 307  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 230, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#230  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

########
#SUBSET#
########
for-body@0_decl_1  :  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 307, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 308  , change_value: 'end'

########
#TO SET#
########
index: 231, target_source: 'end'



###########
#231  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

########
#SUBSET#
########
for-body@0_decl_1  :  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 308, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 309  , change_value: ENDL

########
#TO SET#
########
index: 232, target_source: ENDL



###########
#232  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-body@0_decl_1  :  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 309, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#233  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  %MARK%  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 273, term type: to_deduce, before: 'for', after: for-stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for-stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  %MARK%  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 273, term type: to_deduce, before: 'for', after: for-stmt@0_opt_2
TARGET LIST: 
target index: 274  , change_value: for-stmt@0_opt_2
target index: 294  , change_value: %NULL%
target index: 295  , change_value: %NULL%

for-stmt@0_opt_2  :  %MARK%  
 index is: 294, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_2  :  %MARK%  var-def  
 index is: 295, term type: to_deduce, before: %NULL%, after: var-def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 296  , change_value: var-def

var-def  :  %MARK%  var-list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var-list
TARGET LIST: 
target index: 131  , change_value: var-list
target index: 162  , change_value: %NULL%

var-def  :  %MARK%  var-bind  '='  basic-expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 133  , change_value: var-bind
target index: 146  , change_value: %NULL%

var-list  :  %MARK%  ID  '='  single-expr  var-list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 234, target_source: for-stmt@0_opt_2

index: 249, target_source: var-def

index: 250, target_source: var-list

index: 251, target_source: var-bind

index: 254, target_source: ID

index: 174, target_source: '('



###########
#234  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  %MARK%  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 274, term type: to_deduce, before: for-stmt@0_opt_2, after: for-stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for-stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  %MARK%  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 274, term type: to_deduce, before: for-stmt@0_opt_2, after: for-stmt@0_decl_3
TARGET LIST: 
target index: 275  , change_value: for-stmt@0_decl_3
target index: 290  , change_value: %NULL%
target index: 292  , change_value: %NULL%

for-stmt@0_decl_3  :  %MARK%  ','  
 index is: 290, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 291  , change_value: ','

for-stmt@0_decl_3  :  %MARK%  ';'  
 index is: 292, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 293  , change_value: ';'

########
#TO SET#
########
index: 235, target_source: for-stmt@0_decl_3

index: 247, target_source: ','

index: 248, target_source: ';'



###########
#235  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  %MARK%  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 275, term type: to_deduce, before: for-stmt@0_decl_3, after: for-stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for-stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  %MARK%  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 275, term type: to_deduce, before: for-stmt@0_decl_3, after: for-stmt@0_opt_4
TARGET LIST: 
target index: 276  , change_value: for-stmt@0_opt_4
target index: 287  , change_value: %NULL%
target index: 288  , change_value: %NULL%

for-stmt@0_opt_4  :  %MARK%  
 index is: 287, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_4  :  %MARK%  basic-expr  
 index is: 288, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 289  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 236, target_source: for-stmt@0_opt_4

index: 246, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#236  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  %MARK%  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 276, term type: to_deduce, before: for-stmt@0_opt_4, after: for-stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for-stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  %MARK%  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 276, term type: to_deduce, before: for-stmt@0_opt_4, after: for-stmt@0_decl_5
TARGET LIST: 
target index: 277  , change_value: for-stmt@0_decl_5
target index: 283  , change_value: %NULL%
target index: 285  , change_value: %NULL%

for-stmt@0_decl_5  :  %MARK%  ','  
 index is: 283, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 284  , change_value: ','

for-stmt@0_decl_5  :  %MARK%  ';'  
 index is: 285, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 286  , change_value: ';'

########
#TO SET#
########
index: 237, target_source: for-stmt@0_decl_5

index: 244, target_source: ','

index: 245, target_source: ';'



###########
#237  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  %MARK%  for-stmt@0_opt_6  for-body  
 index is: 277, term type: to_deduce, before: for-stmt@0_decl_5, after: for-stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for-stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  %MARK%  for-stmt@0_opt_6  for-body  
 index is: 277, term type: to_deduce, before: for-stmt@0_decl_5, after: for-stmt@0_opt_6
TARGET LIST: 
target index: 278  , change_value: for-stmt@0_opt_6
target index: 280  , change_value: %NULL%
target index: 281  , change_value: %NULL%

for-stmt@0_opt_6  :  %MARK%  
 index is: 280, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

for-stmt@0_opt_6  :  %MARK%  basic-expr  
 index is: 281, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 282  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 238, target_source: for-stmt@0_opt_6

index: 243, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#238  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  %MARK%  for-body  
 index is: 278, term type: to_deduce, before: for-stmt@0_opt_6, after: for-body
TARGET LIST: 
target index: 279  , change_value: for-body
target index: 303  , change_value: %NULL%

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  %MARK%  for-body  
 index is: 278, term type: to_deduce, before: for-stmt@0_opt_6, after: for-body
TARGET LIST: 
target index: 279  , change_value: for-body
target index: 303  , change_value: %NULL%

for-body  :  %MARK%  for-body@0_decl_1  
 index is: 303, term type: to_deduce, before: %NULL%, after: for-body@0_decl_1
TARGET LIST: 
target index: 304  , change_value: for-body@0_decl_1
target index: 305  , change_value: %NULL%
target index: 310  , change_value: %NULL%

for-body@0_decl_1  :  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 305, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 306  , change_value: ENDL

for-body@0_decl_1  :  %MARK%  'do'  basic-expr  endline  
 index is: 310, term type: shift, before: %NULL%, after: 'do'
TARGET LIST: 
target index: 311  , change_value: 'do'

########
#TO SET#
########
index: 239, target_source: for-body

index: 228, target_source: for-body@0_decl_1

index: 229, target_source: ENDL

index: 240, target_source: 'do'



###########
#239  TERM#
###########


##########
#FROM SET#
##########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  %MARK%  
 index is: 279, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt  :  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  %MARK%  
 index is: 279, term type: deduce, before: for-body, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#240  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  'do'  %MARK%  basic-expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic-expr
TARGET LIST: 
target index: 312  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
for-body@0_decl_1  :  'do'  %MARK%  basic-expr  endline  
 index is: 311, term type: to_deduce, before: 'do', after: basic-expr
TARGET LIST: 
target index: 312  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 241, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#241  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  'do'  basic-expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic-expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

########
#SUBSET#
########
for-body@0_decl_1  :  'do'  basic-expr  %MARK%  endline  
 index is: 312, term type: to_deduce, before: basic-expr, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 313  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 242, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#242  TERM#
###########


##########
#FROM SET#
##########
for-body@0_decl_1  :  'do'  basic-expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-body@0_decl_1  :  'do'  basic-expr  endline  %MARK%  
 index is: 313, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#243  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_opt_6  :  basic-expr  %MARK%  
 index is: 282, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_opt_6  :  basic-expr  %MARK%  
 index is: 282, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#244  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_decl_5  :  ','  %MARK%  
 index is: 284, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#245  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_decl_5  :  ';'  %MARK%  
 index is: 286, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#246  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_opt_4  :  basic-expr  %MARK%  
 index is: 289, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_opt_4  :  basic-expr  %MARK%  
 index is: 289, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#247  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_decl_3  :  ','  %MARK%  
 index is: 291, term type: deduce, before: ',', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#248  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_decl_3  :  ';'  %MARK%  
 index is: 293, term type: deduce, before: ';', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#249  TERM#
###########


##########
#FROM SET#
##########
for-stmt@0_opt_2  :  var-def  %MARK%  
 index is: 296, term type: deduce, before: var-def, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
for-stmt@0_opt_2  :  var-def  %MARK%  
 index is: 296, term type: deduce, before: var-def, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#250  TERM#
###########


##########
#FROM SET#
##########
var-def  :  var-list  %MARK%  
 index is: 131, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-def  :  var-list  %MARK%  
 index is: 131, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#251  TERM#
###########


##########
#FROM SET#
##########
var-def  :  var-bind  %MARK%  '='  basic-expr  
 index is: 133, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

########
#SUBSET#
########
var-def  :  var-bind  %MARK%  '='  basic-expr  
 index is: 133, term type: shift, before: var-bind, after: '='
TARGET LIST: 
target index: 134  , change_value: '='

########
#TO SET#
########
index: 252, target_source: '='



###########
#252  TERM#
###########


##########
#FROM SET#
##########
var-def  :  var-bind  '='  %MARK%  basic-expr  
 index is: 134, term type: to_deduce, before: '=', after: basic-expr
TARGET LIST: 
target index: 135  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
var-def  :  var-bind  '='  %MARK%  basic-expr  
 index is: 134, term type: to_deduce, before: '=', after: basic-expr
TARGET LIST: 
target index: 135  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 253, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#253  TERM#
###########


##########
#FROM SET#
##########
var-def  :  var-bind  '='  basic-expr  %MARK%  
 index is: 135, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-def  :  var-bind  '='  basic-expr  %MARK%  
 index is: 135, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#254  TERM#
###########


##########
#FROM SET#
##########
var-list  :  ID  %MARK%  '='  single-expr  var-list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

########
#SUBSET#
########
var-list  :  ID  %MARK%  '='  single-expr  var-list@0_opt_4  
 index is: 163, term type: shift, before: ID, after: '='
TARGET LIST: 
target index: 164  , change_value: '='

########
#TO SET#
########
index: 255, target_source: '='



###########
#255  TERM#
###########


##########
#FROM SET#
##########
var-list  :  ID  '='  %MARK%  single-expr  var-list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single-expr
TARGET LIST: 
target index: 165  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

########
#SUBSET#
########
var-list  :  ID  '='  %MARK%  single-expr  var-list@0_opt_4  
 index is: 164, term type: to_deduce, before: '=', after: single-expr
TARGET LIST: 
target index: 165  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 256, target_source: single-expr

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#256  TERM#
###########


##########
#FROM SET#
##########
var-list  :  ID  '='  single-expr  %MARK%  var-list@0_opt_4  
 index is: 165, term type: to_deduce, before: single-expr, after: var-list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var-list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

########
#SUBSET#
########
var-list  :  ID  '='  single-expr  %MARK%  var-list@0_opt_4  
 index is: 165, term type: to_deduce, before: single-expr, after: var-list@0_opt_4
TARGET LIST: 
target index: 166  , change_value: var-list@0_opt_4
target index: 167  , change_value: %NULL%
target index: 168  , change_value: %NULL%

var-list@0_opt_4  :  %MARK%  
 index is: 167, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

var-list@0_opt_4  :  %MARK%  ','  var-list  
 index is: 168, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 169  , change_value: ','

########
#TO SET#
########
index: 257, target_source: var-list@0_opt_4

index: 258, target_source: ','



###########
#257  TERM#
###########


##########
#FROM SET#
##########
var-list  :  ID  '='  single-expr  var-list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var-list@0_opt_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-list  :  ID  '='  single-expr  var-list@0_opt_4  %MARK%  
 index is: 166, term type: deduce, before: var-list@0_opt_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#258  TERM#
###########


##########
#FROM SET#
##########
var-list@0_opt_4  :  ','  %MARK%  var-list  
 index is: 169, term type: to_deduce, before: ',', after: var-list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var-list

########
#SUBSET#
########
var-list@0_opt_4  :  ','  %MARK%  var-list  
 index is: 169, term type: to_deduce, before: ',', after: var-list
TARGET LIST: 
target index: 162  , change_value: %NULL%
target index: 170  , change_value: var-list

var-list  :  %MARK%  ID  '='  single-expr  var-list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

########
#TO SET#
########
index: 259, target_source: var-list

index: 254, target_source: ID



###########
#259  TERM#
###########


##########
#FROM SET#
##########
var-list@0_opt_4  :  ','  var-list  %MARK%  
 index is: 170, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-list@0_opt_4  :  ','  var-list  %MARK%  
 index is: 170, term type: deduce, before: var-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#260  TERM#
###########


##########
#FROM SET#
##########
loop-stmt  :  'loop'  %MARK%  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

########
#SUBSET#
########
loop-stmt  :  'loop'  %MARK%  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 258, term type: shift, before: 'loop', after: ENDL
TARGET LIST: 
target index: 259  , change_value: ENDL

########
#TO SET#
########
index: 261, target_source: ENDL



###########
#261  TERM#
###########


##########
#FROM SET#
##########
loop-stmt  :  'loop'  ENDL  %MARK%  stmts  loop-stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

########
#SUBSET#
########
loop-stmt  :  'loop'  ENDL  %MARK%  stmts  loop-stmt@0_decl_4  
 index is: 259, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 260  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 262, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#262  TERM#
###########


##########
#FROM SET#
##########
loop-stmt  :  'loop'  ENDL  stmts  %MARK%  loop-stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop-stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop-stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

########
#SUBSET#
########
loop-stmt  :  'loop'  ENDL  stmts  %MARK%  loop-stmt@0_decl_4  
 index is: 260, term type: to_deduce, before: stmts, after: loop-stmt@0_decl_4
TARGET LIST: 
target index: 261  , change_value: loop-stmt@0_decl_4
target index: 262  , change_value: %NULL%
target index: 264  , change_value: %NULL%
target index: 266  , change_value: %NULL%

loop-stmt@0_decl_4  :  %MARK%  ENDL  
 index is: 262, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 263  , change_value: ENDL

loop-stmt@0_decl_4  :  %MARK%  'end'  
 index is: 264, term type: shift, before: %NULL%, after: 'end'
TARGET LIST: 
target index: 265  , change_value: 'end'

loop-stmt@0_decl_4  :  %MARK%  until-stmt  
 index is: 266, term type: to_deduce, before: %NULL%, after: until-stmt
TARGET LIST: 
target index: 267  , change_value: until-stmt
target index: 268  , change_value: %NULL%

until-stmt  :  %MARK%  'until'  basic-expr  ENDL  
 index is: 268, term type: shift, before: %NULL%, after: 'until'
TARGET LIST: 
target index: 269  , change_value: 'until'

########
#TO SET#
########
index: 263, target_source: loop-stmt@0_decl_4

index: 264, target_source: ENDL

index: 265, target_source: 'end'

index: 266, target_source: until-stmt

index: 267, target_source: 'until'



###########
#263  TERM#
###########


##########
#FROM SET#
##########
loop-stmt  :  'loop'  ENDL  stmts  loop-stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop-stmt@0_decl_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop-stmt  :  'loop'  ENDL  stmts  loop-stmt@0_decl_4  %MARK%  
 index is: 261, term type: deduce, before: loop-stmt@0_decl_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#264  TERM#
###########


##########
#FROM SET#
##########
loop-stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop-stmt@0_decl_4  :  ENDL  %MARK%  
 index is: 263, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#265  TERM#
###########


##########
#FROM SET#
##########
loop-stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop-stmt@0_decl_4  :  'end'  %MARK%  
 index is: 265, term type: deduce, before: 'end', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#266  TERM#
###########


##########
#FROM SET#
##########
loop-stmt@0_decl_4  :  until-stmt  %MARK%  
 index is: 267, term type: deduce, before: until-stmt, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
loop-stmt@0_decl_4  :  until-stmt  %MARK%  
 index is: 267, term type: deduce, before: until-stmt, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#267  TERM#
###########


##########
#FROM SET#
##########
until-stmt  :  'until'  %MARK%  basic-expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic-expr
TARGET LIST: 
target index: 270  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
until-stmt  :  'until'  %MARK%  basic-expr  ENDL  
 index is: 269, term type: to_deduce, before: 'until', after: basic-expr
TARGET LIST: 
target index: 270  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 268, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#268  TERM#
###########


##########
#FROM SET#
##########
until-stmt  :  'until'  basic-expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

########
#SUBSET#
########
until-stmt  :  'until'  basic-expr  %MARK%  ENDL  
 index is: 270, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 271  , change_value: ENDL

########
#TO SET#
########
index: 269, target_source: ENDL



###########
#269  TERM#
###########


##########
#FROM SET#
##########
until-stmt  :  'until'  basic-expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
until-stmt  :  'until'  basic-expr  ENDL  %MARK%  
 index is: 271, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#270  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  %MARK%  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic-expr
TARGET LIST: 
target index: 252  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
while-stmt  :  'while'  %MARK%  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 251, term type: to_deduce, before: 'while', after: basic-expr
TARGET LIST: 
target index: 252  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 271, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#271  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  basic-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

########
#SUBSET#
########
while-stmt  :  'while'  basic-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 252, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 253  , change_value: ENDL

########
#TO SET#
########
index: 272, target_source: ENDL



###########
#272  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  basic-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

########
#SUBSET#
########
while-stmt  :  'while'  basic-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 253, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 254  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 273, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#273  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  basic-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

########
#SUBSET#
########
while-stmt  :  'while'  basic-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 254, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 255  , change_value: 'end'

########
#TO SET#
########
index: 274, target_source: 'end'



###########
#274  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

########
#SUBSET#
########
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 255, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 256  , change_value: ENDL

########
#TO SET#
########
index: 275, target_source: ENDL



###########
#275  TERM#
###########


##########
#FROM SET#
##########
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
while-stmt  :  'while'  basic-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 256, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#276  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  %MARK%  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic-expr
TARGET LIST: 
target index: 218  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
switch-stmt  :  'switch'  %MARK%  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 217, term type: to_deduce, before: 'switch', after: basic-expr
TARGET LIST: 
target index: 218  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 277, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#277  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  basic-expr  %MARK%  ENDL  switch-stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

########
#SUBSET#
########
switch-stmt  :  'switch'  basic-expr  %MARK%  ENDL  switch-stmts  'end'  ENDL  
 index is: 218, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 219  , change_value: ENDL

########
#TO SET#
########
index: 278, target_source: ENDL



###########
#278  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  basic-expr  ENDL  %MARK%  switch-stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch-stmts
TARGET LIST: 
target index: 220  , change_value: switch-stmts
target index: 223  , change_value: %NULL%

########
#SUBSET#
########
switch-stmt  :  'switch'  basic-expr  ENDL  %MARK%  switch-stmts  'end'  ENDL  
 index is: 219, term type: to_deduce, before: ENDL, after: switch-stmts
TARGET LIST: 
target index: 220  , change_value: switch-stmts
target index: 223  , change_value: %NULL%

switch-stmts  :  %MARK%  switch-stmts@0_rep_1  switch-stmts@0_rep_2  
 index is: 223, term type: to_deduce, before: %NULL%, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 224  , change_value: switch-stmts@0_rep_1
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%

switch-stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  switch-default  switch-stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch-default
TARGET LIST: 
target index: 232  , change_value: switch-default
target index: 244  , change_value: %NULL%

switch-stmts@0_rep_1  :  %MARK%  switch-case  switch-stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch-case
TARGET LIST: 
target index: 235  , change_value: switch-case
target index: 237  , change_value: %NULL%

switch-default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch-case  :  %MARK%  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 279, target_source: switch-stmts

index: 282, target_source: switch-stmts@0_rep_1

index: 286, target_source: switch-default

index: 288, target_source: switch-case

index: 290, target_source: 'default'

index: 359, target_source: 'case'



###########
#279  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch-stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

########
#SUBSET#
########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  %MARK%  'end'  ENDL  
 index is: 220, term type: shift, before: switch-stmts, after: 'end'
TARGET LIST: 
target index: 221  , change_value: 'end'

########
#TO SET#
########
index: 280, target_source: 'end'



###########
#280  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

########
#SUBSET#
########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  %MARK%  ENDL  
 index is: 221, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 222  , change_value: ENDL

########
#TO SET#
########
index: 281, target_source: ENDL



###########
#281  TERM#
###########


##########
#FROM SET#
##########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-stmt  :  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  %MARK%  
 index is: 222, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#282  TERM#
###########


##########
#FROM SET#
##########
switch-stmts  :  switch-stmts@0_rep_1  %MARK%  switch-stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch-stmts@0_rep_1, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch-stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

########
#SUBSET#
########
switch-stmts  :  switch-stmts@0_rep_1  %MARK%  switch-stmts@0_rep_2  
 index is: 224, term type: to_deduce, before: switch-stmts@0_rep_1, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 225  , change_value: switch-stmts@0_rep_2
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%

switch-stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_2  :  %MARK%  ENDL  switch-stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

########
#TO SET#
########
index: 283, target_source: switch-stmts@0_rep_2

index: 284, target_source: ENDL



###########
#283  TERM#
###########


##########
#FROM SET#
##########
switch-stmts  :  switch-stmts@0_rep_1  switch-stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-stmts  :  switch-stmts@0_rep_1  switch-stmts@0_rep_2  %MARK%  
 index is: 225, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#284  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_2  :  ENDL  %MARK%  switch-stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch-stmts@0_rep_2

########
#SUBSET#
########
switch-stmts@0_rep_2  :  ENDL  %MARK%  switch-stmts@0_rep_2  
 index is: 228, term type: to_deduce, before: ENDL, after: switch-stmts@0_rep_2
TARGET LIST: 
target index: 226  , change_value: %NULL%
target index: 227  , change_value: %NULL%
target index: 229  , change_value: switch-stmts@0_rep_2

switch-stmts@0_rep_2  :  %MARK%  
 index is: 226, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_2  :  %MARK%  ENDL  switch-stmts@0_rep_2  
 index is: 227, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 228  , change_value: ENDL

########
#TO SET#
########
index: 285, target_source: switch-stmts@0_rep_2

index: 284, target_source: ENDL



###########
#285  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_2  :  ENDL  switch-stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-stmts@0_rep_2  :  ENDL  switch-stmts@0_rep_2  %MARK%  
 index is: 229, term type: deduce, before: switch-stmts@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#286  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_1  :  switch-default  %MARK%  switch-stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch-default, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch-stmts@0_rep_1
target index: 234  , change_value: %NULL%

########
#SUBSET#
########
switch-stmts@0_rep_1  :  switch-default  %MARK%  switch-stmts@0_rep_1  
 index is: 232, term type: to_deduce, before: switch-default, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 233  , change_value: switch-stmts@0_rep_1
target index: 234  , change_value: %NULL%

switch-stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  switch-default  switch-stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch-default
TARGET LIST: 
target index: 232  , change_value: switch-default
target index: 244  , change_value: %NULL%

switch-stmts@0_rep_1  :  %MARK%  switch-case  switch-stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch-case
TARGET LIST: 
target index: 235  , change_value: switch-case
target index: 237  , change_value: %NULL%

switch-default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch-case  :  %MARK%  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 287, target_source: switch-stmts@0_rep_1

index: 286, target_source: switch-default

index: 288, target_source: switch-case

index: 290, target_source: 'default'

index: 359, target_source: 'case'



###########
#287  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_1  :  switch-default  switch-stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-stmts@0_rep_1  :  switch-default  switch-stmts@0_rep_1  %MARK%  
 index is: 233, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#288  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_1  :  switch-case  %MARK%  switch-stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch-case, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch-stmts@0_rep_1

########
#SUBSET#
########
switch-stmts@0_rep_1  :  switch-case  %MARK%  switch-stmts@0_rep_1  
 index is: 235, term type: to_deduce, before: switch-case, after: switch-stmts@0_rep_1
TARGET LIST: 
target index: 230  , change_value: %NULL%
target index: 231  , change_value: %NULL%
target index: 234  , change_value: %NULL%
target index: 236  , change_value: switch-stmts@0_rep_1

switch-stmts@0_rep_1  :  %MARK%  
 index is: 230, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

switch-stmts@0_rep_1  :  %MARK%  switch-default  switch-stmts@0_rep_1  
 index is: 231, term type: to_deduce, before: %NULL%, after: switch-default
TARGET LIST: 
target index: 232  , change_value: switch-default
target index: 244  , change_value: %NULL%

switch-stmts@0_rep_1  :  %MARK%  switch-case  switch-stmts@0_rep_1  
 index is: 234, term type: to_deduce, before: %NULL%, after: switch-case
TARGET LIST: 
target index: 235  , change_value: switch-case
target index: 237  , change_value: %NULL%

switch-default  :  %MARK%  'default'  ENDL  stmts  'end'  ENDL  
 index is: 244, term type: shift, before: %NULL%, after: 'default'
TARGET LIST: 
target index: 245  , change_value: 'default'

switch-case  :  %MARK%  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 237, term type: shift, before: %NULL%, after: 'case'
TARGET LIST: 
target index: 238  , change_value: 'case'

########
#TO SET#
########
index: 289, target_source: switch-stmts@0_rep_1

index: 286, target_source: switch-default

index: 288, target_source: switch-case

index: 290, target_source: 'default'

index: 359, target_source: 'case'



###########
#289  TERM#
###########


##########
#FROM SET#
##########
switch-stmts@0_rep_1  :  switch-case  switch-stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-stmts@0_rep_1  :  switch-case  switch-stmts@0_rep_1  %MARK%  
 index is: 236, term type: deduce, before: switch-stmts@0_rep_1, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#290  TERM#
###########


##########
#FROM SET#
##########
switch-default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

########
#SUBSET#
########
switch-default  :  'default'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 245, term type: shift, before: 'default', after: ENDL
TARGET LIST: 
target index: 246  , change_value: ENDL

########
#TO SET#
########
index: 291, target_source: ENDL



###########
#291  TERM#
###########


##########
#FROM SET#
##########
switch-default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

########
#SUBSET#
########
switch-default  :  'default'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 246, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 247  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 292, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#292  TERM#
###########


##########
#FROM SET#
##########
switch-default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

########
#SUBSET#
########
switch-default  :  'default'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 247, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 248  , change_value: 'end'

########
#TO SET#
########
index: 293, target_source: 'end'



###########
#293  TERM#
###########


##########
#FROM SET#
##########
switch-default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

########
#SUBSET#
########
switch-default  :  'default'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 248, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 249  , change_value: ENDL

########
#TO SET#
########
index: 294, target_source: ENDL



###########
#294  TERM#
###########


##########
#FROM SET#
##########
switch-default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-default  :  'default'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 249, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#295  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  %MARK%  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 196, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 197  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
if-stmt  :  'if'  %MARK%  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 196, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 197  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 296, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#296  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  %MARK%  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 197, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  %MARK%  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 197, term type: shift, before: basic-expr, after: ENDL
TARGET LIST: 
target index: 198  , change_value: ENDL

########
#TO SET#
########
index: 297, target_source: ENDL



###########
#297  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  ENDL  %MARK%  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  ENDL  %MARK%  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 198, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 199  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 298, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#298  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  ENDL  stmts  %MARK%  if-stmt@0_rep_5  'end'  ENDL  
 index is: 199, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if-stmt@0_rep_5
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  ENDL  stmts  %MARK%  if-stmt@0_rep_5  'end'  ENDL  
 index is: 199, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 200  , change_value: if-stmt@0_rep_5
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%

if-stmt@0_rep_5  :  %MARK%  
 index is: 203, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if-stmt@0_rep_5  :  %MARK%  else-stmt  stmts  if-stmt@0_rep_5  
 index is: 204, term type: to_deduce, before: %NULL%, after: else-stmt
TARGET LIST: 
target index: 205  , change_value: else-stmt
target index: 208  , change_value: %NULL%

else-stmt  :  %MARK%  'else'  else-stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

########
#TO SET#
########
index: 299, target_source: if-stmt@0_rep_5

index: 302, target_source: else-stmt

index: 305, target_source: 'else'



###########
#299  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  %MARK%  'end'  ENDL  
 index is: 200, term type: shift, before: if-stmt@0_rep_5, after: 'end'
TARGET LIST: 
target index: 201  , change_value: 'end'

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  %MARK%  'end'  ENDL  
 index is: 200, term type: shift, before: if-stmt@0_rep_5, after: 'end'
TARGET LIST: 
target index: 201  , change_value: 'end'

########
#TO SET#
########
index: 300, target_source: 'end'



###########
#300  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  %MARK%  ENDL  
 index is: 201, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 202  , change_value: ENDL

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  %MARK%  ENDL  
 index is: 201, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 202  , change_value: ENDL

########
#TO SET#
########
index: 301, target_source: ENDL



###########
#301  TERM#
###########


##########
#FROM SET#
##########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  %MARK%  
 index is: 202, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
if-stmt  :  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  %MARK%  
 index is: 202, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#302  TERM#
###########


##########
#FROM SET#
##########
if-stmt@0_rep_5  :  else-stmt  %MARK%  stmts  if-stmt@0_rep_5  
 index is: 205, term type: to_deduce, before: else-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 206  , change_value: stmts

########
#SUBSET#
########
if-stmt@0_rep_5  :  else-stmt  %MARK%  stmts  if-stmt@0_rep_5  
 index is: 205, term type: to_deduce, before: else-stmt, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 206  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 303, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#303  TERM#
###########


##########
#FROM SET#
##########
if-stmt@0_rep_5  :  else-stmt  stmts  %MARK%  if-stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%
target index: 207  , change_value: if-stmt@0_rep_5

########
#SUBSET#
########
if-stmt@0_rep_5  :  else-stmt  stmts  %MARK%  if-stmt@0_rep_5  
 index is: 206, term type: to_deduce, before: stmts, after: if-stmt@0_rep_5
TARGET LIST: 
target index: 203  , change_value: %NULL%
target index: 204  , change_value: %NULL%
target index: 207  , change_value: if-stmt@0_rep_5

if-stmt@0_rep_5  :  %MARK%  
 index is: 203, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

if-stmt@0_rep_5  :  %MARK%  else-stmt  stmts  if-stmt@0_rep_5  
 index is: 204, term type: to_deduce, before: %NULL%, after: else-stmt
TARGET LIST: 
target index: 205  , change_value: else-stmt
target index: 208  , change_value: %NULL%

else-stmt  :  %MARK%  'else'  else-stmt@0_opt_2  ENDL  
 index is: 208, term type: shift, before: %NULL%, after: 'else'
TARGET LIST: 
target index: 209  , change_value: 'else'

########
#TO SET#
########
index: 304, target_source: if-stmt@0_rep_5

index: 302, target_source: else-stmt

index: 305, target_source: 'else'



###########
#304  TERM#
###########


##########
#FROM SET#
##########
if-stmt@0_rep_5  :  else-stmt  stmts  if-stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if-stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
if-stmt@0_rep_5  :  else-stmt  stmts  if-stmt@0_rep_5  %MARK%  
 index is: 207, term type: deduce, before: if-stmt@0_rep_5, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#305  TERM#
###########


##########
#FROM SET#
##########
else-stmt  :  'else'  %MARK%  else-stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else-stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else-stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

########
#SUBSET#
########
else-stmt  :  'else'  %MARK%  else-stmt@0_opt_2  ENDL  
 index is: 209, term type: to_deduce, before: 'else', after: else-stmt@0_opt_2
TARGET LIST: 
target index: 210  , change_value: else-stmt@0_opt_2
target index: 212  , change_value: %NULL%
target index: 213  , change_value: %NULL%

else-stmt@0_opt_2  :  %MARK%  
 index is: 212, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

else-stmt@0_opt_2  :  %MARK%  'if'  basic-expr  
 index is: 213, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 214  , change_value: 'if'

########
#TO SET#
########
index: 306, target_source: else-stmt@0_opt_2

index: 308, target_source: 'if'



###########
#306  TERM#
###########


##########
#FROM SET#
##########
else-stmt  :  'else'  else-stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else-stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

########
#SUBSET#
########
else-stmt  :  'else'  else-stmt@0_opt_2  %MARK%  ENDL  
 index is: 210, term type: shift, before: else-stmt@0_opt_2, after: ENDL
TARGET LIST: 
target index: 211  , change_value: ENDL

########
#TO SET#
########
index: 307, target_source: ENDL



###########
#307  TERM#
###########


##########
#FROM SET#
##########
else-stmt  :  'else'  else-stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
else-stmt  :  'else'  else-stmt@0_opt_2  ENDL  %MARK%  
 index is: 211, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#308  TERM#
###########


##########
#FROM SET#
##########
else-stmt@0_opt_2  :  'if'  %MARK%  basic-expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 215  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

########
#SUBSET#
########
else-stmt@0_opt_2  :  'if'  %MARK%  basic-expr  
 index is: 214, term type: to_deduce, before: 'if', after: basic-expr
TARGET LIST: 
target index: 215  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 309, target_source: basic-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#309  TERM#
###########


##########
#FROM SET#
##########
else-stmt@0_opt_2  :  'if'  basic-expr  %MARK%  
 index is: 215, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
else-stmt@0_opt_2  :  'if'  basic-expr  %MARK%  
 index is: 215, term type: deduce, before: basic-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#310  TERM#
###########


##########
#FROM SET#
##########
using-stmt  :  'using'  %MARK%  using-list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using-list
TARGET LIST: 
target index: 186  , change_value: using-list
target index: 188  , change_value: %NULL%

########
#SUBSET#
########
using-stmt  :  'using'  %MARK%  using-list  endline  
 index is: 185, term type: to_deduce, before: 'using', after: using-list
TARGET LIST: 
target index: 186  , change_value: using-list
target index: 188  , change_value: %NULL%

using-list  :  %MARK%  module-list  using-list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module-list

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 311, target_source: using-list

index: 313, target_source: module-list

index: 317, target_source: ID



###########
#311  TERM#
###########


##########
#FROM SET#
##########
using-stmt  :  'using'  using-list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

########
#SUBSET#
########
using-stmt  :  'using'  using-list  %MARK%  endline  
 index is: 186, term type: to_deduce, before: using-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 187  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 312, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#312  TERM#
###########


##########
#FROM SET#
##########
using-stmt  :  'using'  using-list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using-stmt  :  'using'  using-list  endline  %MARK%  
 index is: 187, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#313  TERM#
###########


##########
#FROM SET#
##########
using-list  :  module-list  %MARK%  using-list@0_opt_2  
 index is: 189, term type: to_deduce, before: module-list, after: using-list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using-list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

########
#SUBSET#
########
using-list  :  module-list  %MARK%  using-list@0_opt_2  
 index is: 189, term type: to_deduce, before: module-list, after: using-list@0_opt_2
TARGET LIST: 
target index: 190  , change_value: using-list@0_opt_2
target index: 191  , change_value: %NULL%
target index: 192  , change_value: %NULL%

using-list@0_opt_2  :  %MARK%  
 index is: 191, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

using-list@0_opt_2  :  %MARK%  ','  using-list  
 index is: 192, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 193  , change_value: ','

########
#TO SET#
########
index: 314, target_source: using-list@0_opt_2

index: 315, target_source: ','



###########
#314  TERM#
###########


##########
#FROM SET#
##########
using-list  :  module-list  using-list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using-list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using-list  :  module-list  using-list@0_opt_2  %MARK%  
 index is: 190, term type: deduce, before: using-list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#315  TERM#
###########


##########
#FROM SET#
##########
using-list@0_opt_2  :  ','  %MARK%  using-list  
 index is: 193, term type: to_deduce, before: ',', after: using-list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using-list

########
#SUBSET#
########
using-list@0_opt_2  :  ','  %MARK%  using-list  
 index is: 193, term type: to_deduce, before: ',', after: using-list
TARGET LIST: 
target index: 188  , change_value: %NULL%
target index: 194  , change_value: using-list

using-list  :  %MARK%  module-list  using-list@0_opt_2  
 index is: 188, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 189  , change_value: module-list

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 316, target_source: using-list

index: 313, target_source: module-list

index: 317, target_source: ID



###########
#316  TERM#
###########


##########
#FROM SET#
##########
using-list@0_opt_2  :  ','  using-list  %MARK%  
 index is: 194, term type: deduce, before: using-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
using-list@0_opt_2  :  ','  using-list  %MARK%  
 index is: 194, term type: deduce, before: using-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#317  TERM#
###########


##########
#FROM SET#
##########
module-list  :  ID  %MARK%  module-list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module-list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module-list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

########
#SUBSET#
########
module-list  :  ID  %MARK%  module-list@0_opt_2  
 index is: 108, term type: to_deduce, before: ID, after: module-list@0_opt_2
TARGET LIST: 
target index: 109  , change_value: module-list@0_opt_2
target index: 110  , change_value: %NULL%
target index: 111  , change_value: %NULL%

module-list@0_opt_2  :  %MARK%  
 index is: 110, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

module-list@0_opt_2  :  %MARK%  '.'  module-list@0_opt_2@0_decl_2  
 index is: 111, term type: shift, before: %NULL%, after: '.'
TARGET LIST: 
target index: 112  , change_value: '.'

########
#TO SET#
########
index: 318, target_source: module-list@0_opt_2

index: 319, target_source: '.'



###########
#318  TERM#
###########


##########
#FROM SET#
##########
module-list  :  ID  module-list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module-list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module-list  :  ID  module-list@0_opt_2  %MARK%  
 index is: 109, term type: deduce, before: module-list@0_opt_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#319  TERM#
###########


##########
#FROM SET#
##########
module-list@0_opt_2  :  '.'  %MARK%  module-list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module-list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module-list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

########
#SUBSET#
########
module-list@0_opt_2  :  '.'  %MARK%  module-list@0_opt_2@0_decl_2  
 index is: 112, term type: to_deduce, before: '.', after: module-list@0_opt_2@0_decl_2
TARGET LIST: 
target index: 113  , change_value: module-list@0_opt_2@0_decl_2
target index: 114  , change_value: %NULL%
target index: 116  , change_value: %NULL%

module-list@0_opt_2@0_decl_2  :  %MARK%  module-list  
 index is: 114, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 115  , change_value: module-list

module-list@0_opt_2@0_decl_2  :  %MARK%  '*'  
 index is: 116, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 117  , change_value: '*'

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 320, target_source: module-list@0_opt_2@0_decl_2

index: 321, target_source: module-list

index: 322, target_source: '*'

index: 317, target_source: ID



###########
#320  TERM#
###########


##########
#FROM SET#
##########
module-list@0_opt_2  :  '.'  module-list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module-list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module-list@0_opt_2  :  '.'  module-list@0_opt_2@0_decl_2  %MARK%  
 index is: 113, term type: deduce, before: module-list@0_opt_2@0_decl_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#321  TERM#
###########


##########
#FROM SET#
##########
module-list@0_opt_2@0_decl_2  :  module-list  %MARK%  
 index is: 115, term type: deduce, before: module-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module-list@0_opt_2@0_decl_2  :  module-list  %MARK%  
 index is: 115, term type: deduce, before: module-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#322  TERM#
###########


##########
#FROM SET#
##########
module-list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
module-list@0_opt_2@0_decl_2  :  '*'  %MARK%  
 index is: 117, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#323  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  %MARK%  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

########
#SUBSET#
########
namespace-stmt  :  'namespace'  %MARK%  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 178, term type: shift, before: 'namespace', after: ID
TARGET LIST: 
target index: 179  , change_value: ID

########
#TO SET#
########
index: 324, target_source: ID



###########
#324  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  ID  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

########
#SUBSET#
########
namespace-stmt  :  'namespace'  ID  %MARK%  ENDL  decl-stmts  'end'  ENDL  
 index is: 179, term type: shift, before: ID, after: ENDL
TARGET LIST: 
target index: 180  , change_value: ENDL

########
#TO SET#
########
index: 325, target_source: ENDL



###########
#325  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  ID  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl-stmts

########
#SUBSET#
########
namespace-stmt  :  'namespace'  ID  ENDL  %MARK%  decl-stmts  'end'  ENDL  
 index is: 180, term type: to_deduce, before: ENDL, after: decl-stmts
TARGET LIST: 
target index: 25  , change_value: %NULL%
target index: 181  , change_value: decl-stmts

decl-stmts  :  %MARK%  decl-stmts@0_rep_1  
 index is: 25, term type: to_deduce, before: %NULL%, after: decl-stmts@0_rep_1
TARGET LIST: 
target index: 26  , change_value: decl-stmts@0_rep_1
target index: 27  , change_value: %NULL%
target index: 28  , change_value: %NULL%

decl-stmts@0_rep_1  :  %MARK%  
 index is: 27, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1  :  %MARK%  declaration  decl-stmts@0_rep_1@0_rep_2  decl-stmts@0_rep_1  
 index is: 28, term type: to_deduce, before: %NULL%, after: declaration
TARGET LIST: 
target index: 29  , change_value: declaration
target index: 84  , change_value: %NULL%
target index: 86  , change_value: %NULL%
target index: 88  , change_value: %NULL%
target index: 90  , change_value: %NULL%
target index: 92  , change_value: %NULL%
target index: 94  , change_value: %NULL%

declaration  :  %MARK%  class-stmt  
 index is: 84, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 85  , change_value: class-stmt
target index: 382  , change_value: %NULL%

declaration  :  %MARK%  function-stmt  
 index is: 86, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 87  , change_value: function-stmt
target index: 314  , change_value: %NULL%

declaration  :  %MARK%  using-stmt  
 index is: 88, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 89  , change_value: using-stmt
target index: 184  , change_value: %NULL%

declaration  :  %MARK%  var-stmt  
 index is: 90, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 91  , change_value: var-stmt
target index: 136  , change_value: %NULL%

declaration  :  %MARK%  namespace-stmt  
 index is: 92, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 93  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

declaration  :  %MARK%  prep-stmt  
 index is: 94, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 95  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

########
#TO SET#
########
index: 326, target_source: decl-stmts

index: 38, target_source: decl-stmts@0_rep_1

index: 39, target_source: declaration

index: 42, target_source: class-stmt

index: 43, target_source: function-stmt

index: 44, target_source: using-stmt

index: 45, target_source: var-stmt

index: 46, target_source: namespace-stmt

index: 47, target_source: prep-stmt

index: 31, target_source: class-stmt@0_decl_1

index: 48, target_source: 'function'

index: 310, target_source: 'using'

index: 329, target_source: var-stmt@0_decl_1

index: 323, target_source: 'namespace'

index: 332, target_source: PREP

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'



###########
#326  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

########
#SUBSET#
########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  %MARK%  'end'  ENDL  
 index is: 181, term type: shift, before: decl-stmts, after: 'end'
TARGET LIST: 
target index: 182  , change_value: 'end'

########
#TO SET#
########
index: 327, target_source: 'end'



###########
#327  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

########
#SUBSET#
########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  %MARK%  ENDL  
 index is: 182, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 183  , change_value: ENDL

########
#TO SET#
########
index: 328, target_source: ENDL



###########
#328  TERM#
###########


##########
#FROM SET#
##########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
namespace-stmt  :  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  %MARK%  
 index is: 183, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#329  TERM#
###########


##########
#FROM SET#
##########
var-stmt  :  var-stmt@0_decl_1  %MARK%  var-def  endline  
 index is: 137, term type: to_deduce, before: var-stmt@0_decl_1, after: var-def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var-def

########
#SUBSET#
########
var-stmt  :  var-stmt@0_decl_1  %MARK%  var-def  endline  
 index is: 137, term type: to_deduce, before: var-stmt@0_decl_1, after: var-def
TARGET LIST: 
target index: 130  , change_value: %NULL%
target index: 132  , change_value: %NULL%
target index: 138  , change_value: var-def

var-def  :  %MARK%  var-list  
 index is: 130, term type: to_deduce, before: %NULL%, after: var-list
TARGET LIST: 
target index: 131  , change_value: var-list
target index: 162  , change_value: %NULL%

var-def  :  %MARK%  var-bind  '='  basic-expr  
 index is: 132, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 133  , change_value: var-bind
target index: 146  , change_value: %NULL%

var-list  :  %MARK%  ID  '='  single-expr  var-list@0_opt_4  
 index is: 162, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 163  , change_value: ID

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

########
#TO SET#
########
index: 330, target_source: var-def

index: 250, target_source: var-list

index: 251, target_source: var-bind

index: 254, target_source: ID

index: 174, target_source: '('



###########
#330  TERM#
###########


##########
#FROM SET#
##########
var-stmt  :  var-stmt@0_decl_1  var-def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var-def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

########
#SUBSET#
########
var-stmt  :  var-stmt@0_decl_1  var-def  %MARK%  endline  
 index is: 138, term type: to_deduce, before: var-def, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 139  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 331, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#331  TERM#
###########


##########
#FROM SET#
##########
var-stmt  :  var-stmt@0_decl_1  var-def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-stmt  :  var-stmt@0_decl_1  var-def  endline  %MARK%  
 index is: 139, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#332  TERM#
###########


##########
#FROM SET#
##########
prep-stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

########
#SUBSET#
########
prep-stmt  :  PREP  %MARK%  ENDL  
 index is: 97, term type: shift, before: PREP, after: ENDL
TARGET LIST: 
target index: 98  , change_value: ENDL

########
#TO SET#
########
index: 333, target_source: ENDL



###########
#333  TERM#
###########


##########
#FROM SET#
##########
prep-stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
prep-stmt  :  PREP  ENDL  %MARK%  
 index is: 98, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#334  TERM#
###########


##########
#FROM SET#
##########
class-stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 395, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class-stmt@0_decl_1  :  'struct'  %MARK%  
 index is: 395, term type: deduce, before: 'struct', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#335  TERM#
###########


##########
#FROM SET#
##########
class-stmt@0_decl_1  :  'class'  %MARK%  
 index is: 397, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class-stmt@0_decl_1  :  'class'  %MARK%  
 index is: 397, term type: deduce, before: 'class', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#336  TERM#
###########


##########
#FROM SET#
##########
var-stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-stmt@0_decl_1  :  'constant'  %MARK%  
 index is: 141, term type: deduce, before: 'constant', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#337  TERM#
###########


##########
#FROM SET#
##########
var-stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-stmt@0_decl_1  :  'link'  %MARK%  
 index is: 143, term type: deduce, before: 'link', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#338  TERM#
###########


##########
#FROM SET#
##########
var-stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
var-stmt@0_decl_1  :  'var'  %MARK%  
 index is: 145, term type: deduce, before: 'var', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#339  TERM#
###########


##########
#FROM SET#
##########
block-stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

########
#SUBSET#
########
block-stmt  :  'block'  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 172, term type: shift, before: 'block', after: ENDL
TARGET LIST: 
target index: 173  , change_value: ENDL

########
#TO SET#
########
index: 340, target_source: ENDL



###########
#340  TERM#
###########


##########
#FROM SET#
##########
block-stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

########
#SUBSET#
########
block-stmt  :  'block'  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 173, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 174  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 341, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#341  TERM#
###########


##########
#FROM SET#
##########
block-stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

########
#SUBSET#
########
block-stmt  :  'block'  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 174, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 175  , change_value: 'end'

########
#TO SET#
########
index: 342, target_source: 'end'



###########
#342  TERM#
###########


##########
#FROM SET#
##########
block-stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

########
#SUBSET#
########
block-stmt  :  'block'  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 175, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 176  , change_value: ENDL

########
#TO SET#
########
index: 343, target_source: ENDL



###########
#343  TERM#
###########


##########
#FROM SET#
##########
block-stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
block-stmt  :  'block'  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 176, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#344  TERM#
###########


##########
#FROM SET#
##########
import-stmt  :  'import'  %MARK%  import-list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import-list
TARGET LIST: 
target index: 105  , change_value: import-list
target index: 118  , change_value: %NULL%

########
#SUBSET#
########
import-stmt  :  'import'  %MARK%  import-list  endline  
 index is: 104, term type: to_deduce, before: 'import', after: import-list
TARGET LIST: 
target index: 105  , change_value: import-list
target index: 118  , change_value: %NULL%

import-list  :  %MARK%  module-list  import-list@0_opt_2  import-list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module-list

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 345, target_source: import-list

index: 347, target_source: module-list

index: 317, target_source: ID



###########
#345  TERM#
###########


##########
#FROM SET#
##########
import-stmt  :  'import'  import-list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

########
#SUBSET#
########
import-stmt  :  'import'  import-list  %MARK%  endline  
 index is: 105, term type: to_deduce, before: import-list, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 106  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 346, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#346  TERM#
###########


##########
#FROM SET#
##########
import-stmt  :  'import'  import-list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import-stmt  :  'import'  import-list  endline  %MARK%  
 index is: 106, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#347  TERM#
###########


##########
#FROM SET#
##########
import-list  :  module-list  %MARK%  import-list@0_opt_2  import-list@0_opt_3  
 index is: 119, term type: to_deduce, before: module-list, after: import-list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import-list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

########
#SUBSET#
########
import-list  :  module-list  %MARK%  import-list@0_opt_2  import-list@0_opt_3  
 index is: 119, term type: to_deduce, before: module-list, after: import-list@0_opt_2
TARGET LIST: 
target index: 120  , change_value: import-list@0_opt_2
target index: 126  , change_value: %NULL%
target index: 127  , change_value: %NULL%

import-list@0_opt_2  :  %MARK%  
 index is: 126, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import-list@0_opt_2  :  %MARK%  'as'  ID  
 index is: 127, term type: shift, before: %NULL%, after: 'as'
TARGET LIST: 
target index: 128  , change_value: 'as'

########
#TO SET#
########
index: 348, target_source: import-list@0_opt_2

index: 352, target_source: 'as'



###########
#348  TERM#
###########


##########
#FROM SET#
##########
import-list  :  module-list  import-list@0_opt_2  %MARK%  import-list@0_opt_3  
 index is: 120, term type: to_deduce, before: import-list@0_opt_2, after: import-list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import-list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

########
#SUBSET#
########
import-list  :  module-list  import-list@0_opt_2  %MARK%  import-list@0_opt_3  
 index is: 120, term type: to_deduce, before: import-list@0_opt_2, after: import-list@0_opt_3
TARGET LIST: 
target index: 121  , change_value: import-list@0_opt_3
target index: 122  , change_value: %NULL%
target index: 123  , change_value: %NULL%

import-list@0_opt_3  :  %MARK%  
 index is: 122, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

import-list@0_opt_3  :  %MARK%  ','  import-list  
 index is: 123, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 124  , change_value: ','

########
#TO SET#
########
index: 349, target_source: import-list@0_opt_3

index: 350, target_source: ','



###########
#349  TERM#
###########


##########
#FROM SET#
##########
import-list  :  module-list  import-list@0_opt_2  import-list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import-list@0_opt_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import-list  :  module-list  import-list@0_opt_2  import-list@0_opt_3  %MARK%  
 index is: 121, term type: deduce, before: import-list@0_opt_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#350  TERM#
###########


##########
#FROM SET#
##########
import-list@0_opt_3  :  ','  %MARK%  import-list  
 index is: 124, term type: to_deduce, before: ',', after: import-list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import-list

########
#SUBSET#
########
import-list@0_opt_3  :  ','  %MARK%  import-list  
 index is: 124, term type: to_deduce, before: ',', after: import-list
TARGET LIST: 
target index: 118  , change_value: %NULL%
target index: 125  , change_value: import-list

import-list  :  %MARK%  module-list  import-list@0_opt_2  import-list@0_opt_3  
 index is: 118, term type: to_deduce, before: %NULL%, after: module-list
TARGET LIST: 
target index: 107  , change_value: %NULL%
target index: 119  , change_value: module-list

module-list  :  %MARK%  ID  module-list@0_opt_2  
 index is: 107, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 108  , change_value: ID

########
#TO SET#
########
index: 351, target_source: import-list

index: 347, target_source: module-list

index: 317, target_source: ID



###########
#351  TERM#
###########


##########
#FROM SET#
##########
import-list@0_opt_3  :  ','  import-list  %MARK%  
 index is: 125, term type: deduce, before: import-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import-list@0_opt_3  :  ','  import-list  %MARK%  
 index is: 125, term type: deduce, before: import-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#352  TERM#
###########


##########
#FROM SET#
##########
import-list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

########
#SUBSET#
########
import-list@0_opt_2  :  'as'  %MARK%  ID  
 index is: 128, term type: shift, before: 'as', after: ID
TARGET LIST: 
target index: 129  , change_value: ID

########
#TO SET#
########
index: 353, target_source: ID



###########
#353  TERM#
###########


##########
#FROM SET#
##########
import-list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
import-list@0_opt_2  :  'as'  ID  %MARK%  
 index is: 129, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#354  TERM#
###########


##########
#FROM SET#
##########
package-stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

########
#SUBSET#
########
package-stmt  :  'package'  %MARK%  ID  endline  
 index is: 100, term type: shift, before: 'package', after: ID
TARGET LIST: 
target index: 101  , change_value: ID

########
#TO SET#
########
index: 355, target_source: ID



###########
#355  TERM#
###########


##########
#FROM SET#
##########
package-stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

########
#SUBSET#
########
package-stmt  :  'package'  ID  %MARK%  endline  
 index is: 101, term type: to_deduce, before: ID, after: endline
TARGET LIST: 
target index: 10  , change_value: %NULL%
target index: 12  , change_value: %NULL%
target index: 102  , change_value: endline

endline  :  %MARK%  ';'  
 index is: 10, term type: shift, before: %NULL%, after: ';'
TARGET LIST: 
target index: 11  , change_value: ';'

endline  :  %MARK%  ENDL  
 index is: 12, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 13  , change_value: ENDL

########
#TO SET#
########
index: 356, target_source: endline

index: 29, target_source: ';'

index: 30, target_source: ENDL



###########
#356  TERM#
###########


##########
#FROM SET#
##########
package-stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
package-stmt  :  'package'  ID  endline  %MARK%  
 index is: 102, term type: deduce, before: endline, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#357  TERM#
###########


##########
#FROM SET#
##########
control-stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 402, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control-stmt@0_decl_1  :  'continue'  %MARK%  
 index is: 402, term type: deduce, before: 'continue', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#358  TERM#
###########


##########
#FROM SET#
##########
control-stmt@0_decl_1  :  'break'  %MARK%  
 index is: 404, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
control-stmt@0_decl_1  :  'break'  %MARK%  
 index is: 404, term type: deduce, before: 'break', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#359  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  %MARK%  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic-or-expr
TARGET LIST: 
target index: 239  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

########
#SUBSET#
########
switch-case  :  'case'  %MARK%  logic-or-expr  ENDL  stmts  'end'  ENDL  
 index is: 238, term type: to_deduce, before: 'case', after: logic-or-expr
TARGET LIST: 
target index: 239  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 360, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#360  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  logic-or-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic-or-expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

########
#SUBSET#
########
switch-case  :  'case'  logic-or-expr  %MARK%  ENDL  stmts  'end'  ENDL  
 index is: 239, term type: shift, before: logic-or-expr, after: ENDL
TARGET LIST: 
target index: 240  , change_value: ENDL

########
#TO SET#
########
index: 361, target_source: ENDL



###########
#361  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  logic-or-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

########
#SUBSET#
########
switch-case  :  'case'  logic-or-expr  ENDL  %MARK%  stmts  'end'  ENDL  
 index is: 240, term type: to_deduce, before: ENDL, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 241  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 362, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#362  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

########
#SUBSET#
########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  %MARK%  'end'  ENDL  
 index is: 241, term type: shift, before: stmts, after: 'end'
TARGET LIST: 
target index: 242  , change_value: 'end'

########
#TO SET#
########
index: 363, target_source: 'end'



###########
#363  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

########
#SUBSET#
########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  %MARK%  ENDL  
 index is: 242, term type: shift, before: 'end', after: ENDL
TARGET LIST: 
target index: 243  , change_value: ENDL

########
#TO SET#
########
index: 364, target_source: ENDL



###########
#364  TERM#
###########


##########
#FROM SET#
##########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
switch-case  :  'case'  logic-or-expr  ENDL  stmts  'end'  ENDL  %MARK%  
 index is: 243, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#365  TERM#
###########


##########
#FROM SET#
##########
lambda-body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda-body@0_rep_2@0_rep_2  
 index is: 509, term type: to_deduce, before: ENDL, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%
target index: 510  , change_value: lambda-body@0_rep_2@0_rep_2

########
#SUBSET#
########
lambda-body@0_rep_2@0_rep_2  :  ENDL  %MARK%  lambda-body@0_rep_2@0_rep_2  
 index is: 509, term type: to_deduce, before: ENDL, after: lambda-body@0_rep_2@0_rep_2
TARGET LIST: 
target index: 507  , change_value: %NULL%
target index: 508  , change_value: %NULL%
target index: 510  , change_value: lambda-body@0_rep_2@0_rep_2

lambda-body@0_rep_2@0_rep_2  :  %MARK%  
 index is: 507, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

lambda-body@0_rep_2@0_rep_2  :  %MARK%  ENDL  lambda-body@0_rep_2@0_rep_2  
 index is: 508, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 509  , change_value: ENDL

########
#TO SET#
########
index: 366, target_source: lambda-body@0_rep_2@0_rep_2

index: 365, target_source: ENDL



###########
#366  TERM#
###########


##########
#FROM SET#
##########
lambda-body@0_rep_2@0_rep_2  :  ENDL  lambda-body@0_rep_2@0_rep_2  %MARK%  
 index is: 510, term type: deduce, before: lambda-body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-body@0_rep_2@0_rep_2  :  ENDL  lambda-body@0_rep_2@0_rep_2  %MARK%  
 index is: 510, term type: deduce, before: lambda-body@0_rep_2@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#367  TERM#
###########


##########
#FROM SET#
##########
lambda-expr@0_opt_5  :  argument-list  %MARK%  
 index is: 459, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-expr@0_opt_5  :  argument-list  %MARK%  
 index is: 459, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#368  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  argument-list@1_opt_1  %MARK%  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 476, term type: shift, before: argument-list@1_opt_1, after: ID
TARGET LIST: 
target index: 477  , change_value: ID

########
#SUBSET#
########
argument-list  :  argument-list@1_opt_1  %MARK%  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 476, term type: shift, before: argument-list@1_opt_1, after: ID
TARGET LIST: 
target index: 477  , change_value: ID

########
#TO SET#
########
index: 369, target_source: ID



###########
#369  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  argument-list@1_opt_1  ID  %MARK%  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 477, term type: to_deduce, before: ID, after: argument-list@1_opt_3
TARGET LIST: 
target index: 478  , change_value: argument-list@1_opt_3
target index: 488  , change_value: %NULL%
target index: 489  , change_value: %NULL%

########
#SUBSET#
########
argument-list  :  argument-list@1_opt_1  ID  %MARK%  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 477, term type: to_deduce, before: ID, after: argument-list@1_opt_3
TARGET LIST: 
target index: 478  , change_value: argument-list@1_opt_3
target index: 488  , change_value: %NULL%
target index: 489  , change_value: %NULL%

argument-list@1_opt_3  :  %MARK%  
 index is: 488, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_3  :  %MARK%  ':'  visit-expr  
 index is: 489, term type: shift, before: %NULL%, after: ':'
TARGET LIST: 
target index: 490  , change_value: ':'

########
#TO SET#
########
index: 370, target_source: argument-list@1_opt_3

index: 378, target_source: ':'



###########
#370  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  %MARK%  argument-list@1_rep_4  
 index is: 478, term type: to_deduce, before: argument-list@1_opt_3, after: argument-list@1_rep_4
TARGET LIST: 
target index: 479  , change_value: argument-list@1_rep_4
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%

########
#SUBSET#
########
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  %MARK%  argument-list@1_rep_4  
 index is: 478, term type: to_deduce, before: argument-list@1_opt_3, after: argument-list@1_rep_4
TARGET LIST: 
target index: 479  , change_value: argument-list@1_rep_4
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%

argument-list@1_rep_4  :  %MARK%  
 index is: 483, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_rep_4  :  %MARK%  ','  argument-list  argument-list@1_rep_4  
 index is: 484, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 485  , change_value: ','

########
#TO SET#
########
index: 371, target_source: argument-list@1_rep_4

index: 372, target_source: ','



###########
#371  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  %MARK%  
 index is: 479, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument-list  :  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  %MARK%  
 index is: 479, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#372  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_rep_4  :  ','  %MARK%  argument-list  argument-list@1_rep_4  
 index is: 485, term type: to_deduce, before: ',', after: argument-list
TARGET LIST: 
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%
target index: 486  , change_value: argument-list

########
#SUBSET#
########
argument-list@1_rep_4  :  ','  %MARK%  argument-list  argument-list@1_rep_4  
 index is: 485, term type: to_deduce, before: ',', after: argument-list
TARGET LIST: 
target index: 475  , change_value: %NULL%
target index: 480  , change_value: %NULL%
target index: 486  , change_value: argument-list

argument-list  :  %MARK%  argument-list@1_opt_1  ID  argument-list@1_opt_3  argument-list@1_rep_4  
 index is: 475, term type: to_deduce, before: %NULL%, after: argument-list@1_opt_1
TARGET LIST: 
target index: 476  , change_value: argument-list@1_opt_1
target index: 492  , change_value: %NULL%
target index: 493  , change_value: %NULL%

argument-list  :  %MARK%  '...'  ID  
 index is: 480, term type: shift, before: %NULL%, after: '...'
TARGET LIST: 
target index: 481  , change_value: '...'

argument-list@1_opt_1  :  %MARK%  
 index is: 492, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_opt_1  :  %MARK%  '='  
 index is: 493, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 494  , change_value: '='

########
#TO SET#
########
index: 373, target_source: argument-list

index: 368, target_source: argument-list@1_opt_1

index: 375, target_source: '...'

index: 377, target_source: '='



###########
#373  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_rep_4  :  ','  argument-list  %MARK%  argument-list@1_rep_4  
 index is: 486, term type: to_deduce, before: argument-list, after: argument-list@1_rep_4
TARGET LIST: 
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%
target index: 487  , change_value: argument-list@1_rep_4

########
#SUBSET#
########
argument-list@1_rep_4  :  ','  argument-list  %MARK%  argument-list@1_rep_4  
 index is: 486, term type: to_deduce, before: argument-list, after: argument-list@1_rep_4
TARGET LIST: 
target index: 483  , change_value: %NULL%
target index: 484  , change_value: %NULL%
target index: 487  , change_value: argument-list@1_rep_4

argument-list@1_rep_4  :  %MARK%  
 index is: 483, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

argument-list@1_rep_4  :  %MARK%  ','  argument-list  argument-list@1_rep_4  
 index is: 484, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 485  , change_value: ','

########
#TO SET#
########
index: 374, target_source: argument-list@1_rep_4

index: 372, target_source: ','



###########
#374  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_rep_4  :  ','  argument-list  argument-list@1_rep_4  %MARK%  
 index is: 487, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument-list@1_rep_4  :  ','  argument-list  argument-list@1_rep_4  %MARK%  
 index is: 487, term type: deduce, before: argument-list@1_rep_4, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#375  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  '...'  %MARK%  ID  
 index is: 481, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 482  , change_value: ID

########
#SUBSET#
########
argument-list  :  '...'  %MARK%  ID  
 index is: 481, term type: shift, before: '...', after: ID
TARGET LIST: 
target index: 482  , change_value: ID

########
#TO SET#
########
index: 376, target_source: ID



###########
#376  TERM#
###########


##########
#FROM SET#
##########
argument-list  :  '...'  ID  %MARK%  
 index is: 482, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument-list  :  '...'  ID  %MARK%  
 index is: 482, term type: deduce, before: ID, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#377  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_opt_1  :  '='  %MARK%  
 index is: 494, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument-list@1_opt_1  :  '='  %MARK%  
 index is: 494, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#378  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 490, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 491  , change_value: visit-expr
target index: 655  , change_value: %NULL%

########
#SUBSET#
########
argument-list@1_opt_3  :  ':'  %MARK%  visit-expr  
 index is: 490, term type: to_deduce, before: ':', after: visit-expr
TARGET LIST: 
target index: 491  , change_value: visit-expr
target index: 655  , change_value: %NULL%

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 379, target_source: visit-expr

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#379  TERM#
###########


##########
#FROM SET#
##########
argument-list@1_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 491, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
argument-list@1_opt_3  :  ':'  visit-expr  %MARK%  
 index is: 491, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#380  TERM#
###########


##########
#FROM SET#
##########
lambda-expr@0_opt_2  :  capture-list  %MARK%  
 index is: 462, term type: deduce, before: capture-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
lambda-expr@0_opt_2  :  capture-list  %MARK%  
 index is: 462, term type: deduce, before: capture-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#381  TERM#
###########


##########
#FROM SET#
##########
capture-list  :  capture-list@0_opt_1  %MARK%  ID  capture-list@0_rep_3  
 index is: 464, term type: shift, before: capture-list@0_opt_1, after: ID
TARGET LIST: 
target index: 465  , change_value: ID

########
#SUBSET#
########
capture-list  :  capture-list@0_opt_1  %MARK%  ID  capture-list@0_rep_3  
 index is: 464, term type: shift, before: capture-list@0_opt_1, after: ID
TARGET LIST: 
target index: 465  , change_value: ID

########
#TO SET#
########
index: 382, target_source: ID



###########
#382  TERM#
###########


##########
#FROM SET#
##########
capture-list  :  capture-list@0_opt_1  ID  %MARK%  capture-list@0_rep_3  
 index is: 465, term type: to_deduce, before: ID, after: capture-list@0_rep_3
TARGET LIST: 
target index: 466  , change_value: capture-list@0_rep_3
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%

########
#SUBSET#
########
capture-list  :  capture-list@0_opt_1  ID  %MARK%  capture-list@0_rep_3  
 index is: 465, term type: to_deduce, before: ID, after: capture-list@0_rep_3
TARGET LIST: 
target index: 466  , change_value: capture-list@0_rep_3
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%

capture-list@0_rep_3  :  %MARK%  
 index is: 467, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_rep_3  :  %MARK%  ','  capture-list  capture-list@0_rep_3  
 index is: 468, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 469  , change_value: ','

########
#TO SET#
########
index: 383, target_source: capture-list@0_rep_3

index: 384, target_source: ','



###########
#383  TERM#
###########


##########
#FROM SET#
##########
capture-list  :  capture-list@0_opt_1  ID  capture-list@0_rep_3  %MARK%  
 index is: 466, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture-list  :  capture-list@0_opt_1  ID  capture-list@0_rep_3  %MARK%  
 index is: 466, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#384  TERM#
###########


##########
#FROM SET#
##########
capture-list@0_rep_3  :  ','  %MARK%  capture-list  capture-list@0_rep_3  
 index is: 469, term type: to_deduce, before: ',', after: capture-list
TARGET LIST: 
target index: 463  , change_value: %NULL%
target index: 470  , change_value: capture-list

########
#SUBSET#
########
capture-list@0_rep_3  :  ','  %MARK%  capture-list  capture-list@0_rep_3  
 index is: 469, term type: to_deduce, before: ',', after: capture-list
TARGET LIST: 
target index: 463  , change_value: %NULL%
target index: 470  , change_value: capture-list

capture-list  :  %MARK%  capture-list@0_opt_1  ID  capture-list@0_rep_3  
 index is: 463, term type: to_deduce, before: %NULL%, after: capture-list@0_opt_1
TARGET LIST: 
target index: 464  , change_value: capture-list@0_opt_1
target index: 472  , change_value: %NULL%
target index: 473  , change_value: %NULL%

capture-list@0_opt_1  :  %MARK%  
 index is: 472, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_opt_1  :  %MARK%  '='  
 index is: 473, term type: shift, before: %NULL%, after: '='
TARGET LIST: 
target index: 474  , change_value: '='

########
#TO SET#
########
index: 385, target_source: capture-list

index: 381, target_source: capture-list@0_opt_1

index: 387, target_source: '='



###########
#385  TERM#
###########


##########
#FROM SET#
##########
capture-list@0_rep_3  :  ','  capture-list  %MARK%  capture-list@0_rep_3  
 index is: 470, term type: to_deduce, before: capture-list, after: capture-list@0_rep_3
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%
target index: 471  , change_value: capture-list@0_rep_3

########
#SUBSET#
########
capture-list@0_rep_3  :  ','  capture-list  %MARK%  capture-list@0_rep_3  
 index is: 470, term type: to_deduce, before: capture-list, after: capture-list@0_rep_3
TARGET LIST: 
target index: 467  , change_value: %NULL%
target index: 468  , change_value: %NULL%
target index: 471  , change_value: capture-list@0_rep_3

capture-list@0_rep_3  :  %MARK%  
 index is: 467, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

capture-list@0_rep_3  :  %MARK%  ','  capture-list  capture-list@0_rep_3  
 index is: 468, term type: shift, before: %NULL%, after: ','
TARGET LIST: 
target index: 469  , change_value: ','

########
#TO SET#
########
index: 386, target_source: capture-list@0_rep_3

index: 384, target_source: ','



###########
#386  TERM#
###########


##########
#FROM SET#
##########
capture-list@0_rep_3  :  ','  capture-list  capture-list@0_rep_3  %MARK%  
 index is: 471, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture-list@0_rep_3  :  ','  capture-list  capture-list@0_rep_3  %MARK%  
 index is: 471, term type: deduce, before: capture-list@0_rep_3, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#387  TERM#
###########


##########
#FROM SET#
##########
capture-list@0_opt_1  :  '='  %MARK%  
 index is: 474, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
capture-list@0_opt_1  :  '='  %MARK%  
 index is: 474, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#388  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 596, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr@0_opt_2@0_decl_1  :  '^'  %MARK%  
 index is: 596, term type: deduce, before: '^', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#389  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 598, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr@0_opt_2@0_decl_1  :  '%'  %MARK%  
 index is: 598, term type: deduce, before: '%', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#390  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 600, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr@0_opt_2@0_decl_1  :  '/'  %MARK%  
 index is: 600, term type: deduce, before: '/', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#391  TERM#
###########


##########
#FROM SET#
##########
mul-expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 602, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
mul-expr@0_opt_2@0_decl_1  :  '*'  %MARK%  
 index is: 602, term type: deduce, before: '*', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#392  TERM#
###########


##########
#FROM SET#
##########
add-expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 585, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add-expr@0_opt_2@0_decl_1  :  '-'  %MARK%  
 index is: 585, term type: deduce, before: '-', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#393  TERM#
###########


##########
#FROM SET#
##########
add-expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 587, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
add-expr@0_opt_2@0_decl_1  :  '+'  %MARK%  
 index is: 587, term type: deduce, before: '+', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#394  TERM#
###########


##########
#FROM SET#
##########
relat-expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 570, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr@0_opt_2@0_decl_1  :  '<='  %MARK%  
 index is: 570, term type: deduce, before: '<=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#395  TERM#
###########


##########
#FROM SET#
##########
relat-expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 572, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr@0_opt_2@0_decl_1  :  '>='  %MARK%  
 index is: 572, term type: deduce, before: '>=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#396  TERM#
###########


##########
#FROM SET#
##########
relat-expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 574, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr@0_opt_2@0_decl_1  :  '<'  %MARK%  
 index is: 574, term type: deduce, before: '<', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#397  TERM#
###########


##########
#FROM SET#
##########
relat-expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 576, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
relat-expr@0_opt_2@0_decl_1  :  '>'  %MARK%  
 index is: 576, term type: deduce, before: '>', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#398  TERM#
###########


##########
#FROM SET#
##########
equal-expr@0_opt_2@0_decl_1  :  'not'  %MARK%  
 index is: 555, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr@0_opt_2@0_decl_1  :  'not'  %MARK%  
 index is: 555, term type: deduce, before: 'not', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#399  TERM#
###########


##########
#FROM SET#
##########
equal-expr@0_opt_2@0_decl_1  :  'is'  %MARK%  
 index is: 557, term type: deduce, before: 'is', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr@0_opt_2@0_decl_1  :  'is'  %MARK%  
 index is: 557, term type: deduce, before: 'is', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#400  TERM#
###########


##########
#FROM SET#
##########
equal-expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 559, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr@0_opt_2@0_decl_1  :  '!='  %MARK%  
 index is: 559, term type: deduce, before: '!=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#401  TERM#
###########


##########
#FROM SET#
##########
equal-expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 561, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
equal-expr@0_opt_2@0_decl_1  :  '=='  %MARK%  
 index is: 561, term type: deduce, before: '==', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#402  TERM#
###########


##########
#FROM SET#
##########
logic-and-expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 544, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-and-expr@0_opt_2@0_decl_1  :  'and'  %MARK%  
 index is: 544, term type: deduce, before: 'and', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#403  TERM#
###########


##########
#FROM SET#
##########
logic-and-expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 546, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-and-expr@0_opt_2@0_decl_1  :  '&&'  %MARK%  
 index is: 546, term type: deduce, before: '&&', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#404  TERM#
###########


##########
#FROM SET#
##########
logic-or-expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 533, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-or-expr@0_opt_2@0_decl_1  :  'or'  %MARK%  
 index is: 533, term type: deduce, before: 'or', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#405  TERM#
###########


##########
#FROM SET#
##########
logic-or-expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 535, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
logic-or-expr@0_opt_2@0_decl_1  :  '||'  %MARK%  
 index is: 535, term type: deduce, before: '||', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#406  TERM#
###########


##########
#FROM SET#
##########
cond-postfix  :  '?'  %MARK%  logic-or-expr  ':'  cond-expr  
 index is: 521, term type: to_deduce, before: '?', after: logic-or-expr
TARGET LIST: 
target index: 522  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

########
#SUBSET#
########
cond-postfix  :  '?'  %MARK%  logic-or-expr  ':'  cond-expr  
 index is: 521, term type: to_deduce, before: '?', after: logic-or-expr
TARGET LIST: 
target index: 522  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 407, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#407  TERM#
###########


##########
#FROM SET#
##########
cond-postfix  :  '?'  logic-or-expr  %MARK%  ':'  cond-expr  
 index is: 522, term type: shift, before: logic-or-expr, after: ':'
TARGET LIST: 
target index: 523  , change_value: ':'

########
#SUBSET#
########
cond-postfix  :  '?'  logic-or-expr  %MARK%  ':'  cond-expr  
 index is: 522, term type: shift, before: logic-or-expr, after: ':'
TARGET LIST: 
target index: 523  , change_value: ':'

########
#TO SET#
########
index: 408, target_source: ':'



###########
#408  TERM#
###########


##########
#FROM SET#
##########
cond-postfix  :  '?'  logic-or-expr  ':'  %MARK%  cond-expr  
 index is: 523, term type: to_deduce, before: ':', after: cond-expr
TARGET LIST: 
target index: 511  , change_value: %NULL%
target index: 524  , change_value: cond-expr

########
#SUBSET#
########
cond-postfix  :  '?'  logic-or-expr  ':'  %MARK%  cond-expr  
 index is: 523, term type: to_deduce, before: ':', after: cond-expr
TARGET LIST: 
target index: 511  , change_value: %NULL%
target index: 524  , change_value: cond-expr

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 409, target_source: cond-expr

index: 77, target_source: logic-or-expr

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#409  TERM#
###########


##########
#FROM SET#
##########
cond-postfix  :  '?'  logic-or-expr  ':'  cond-expr  %MARK%  
 index is: 524, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
cond-postfix  :  '?'  logic-or-expr  ':'  cond-expr  %MARK%  
 index is: 524, term type: deduce, before: cond-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#410  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '^='  %MARK%  
 index is: 434, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '^='  %MARK%  
 index is: 434, term type: deduce, before: '^=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#411  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '%='  %MARK%  
 index is: 436, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '%='  %MARK%  
 index is: 436, term type: deduce, before: '%=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#412  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '/='  %MARK%  
 index is: 438, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '/='  %MARK%  
 index is: 438, term type: deduce, before: '/=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#413  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '*='  %MARK%  
 index is: 440, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '*='  %MARK%  
 index is: 440, term type: deduce, before: '*=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#414  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '-='  %MARK%  
 index is: 442, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '-='  %MARK%  
 index is: 442, term type: deduce, before: '-=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#415  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '+='  %MARK%  
 index is: 444, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '+='  %MARK%  
 index is: 444, term type: deduce, before: '+=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#416  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  ':='  %MARK%  
 index is: 446, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  ':='  %MARK%  
 index is: 446, term type: deduce, before: ':=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#417  TERM#
###########


##########
#FROM SET#
##########
asi-op  :  '='  %MARK%  
 index is: 448, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
asi-op  :  '='  %MARK%  
 index is: 448, term type: deduce, before: '=', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#418  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  %MARK%  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 336, term type: shift, before: function-body@0_decl_1@0_opt_1, after: '{'
TARGET LIST: 
target index: 337  , change_value: '{'

########
#SUBSET#
########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  %MARK%  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 336, term type: shift, before: function-body@0_decl_1@0_opt_1, after: '{'
TARGET LIST: 
target index: 337  , change_value: '{'

########
#TO SET#
########
index: 419, target_source: '{'



###########
#419  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  %MARK%  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 337, term type: to_deduce, before: '{', after: function-body@0_decl_1@0_opt_3
TARGET LIST: 
target index: 338  , change_value: function-body@0_decl_1@0_opt_3
target index: 341  , change_value: %NULL%
target index: 342  , change_value: %NULL%

########
#SUBSET#
########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  %MARK%  function-body@0_decl_1@0_opt_3  stmts  '}'  
 index is: 337, term type: to_deduce, before: '{', after: function-body@0_decl_1@0_opt_3
TARGET LIST: 
target index: 338  , change_value: function-body@0_decl_1@0_opt_3
target index: 341  , change_value: %NULL%
target index: 342  , change_value: %NULL%

function-body@0_decl_1@0_opt_3  :  %MARK%  
 index is: 341, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

function-body@0_decl_1@0_opt_3  :  %MARK%  ENDL  
 index is: 342, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 343  , change_value: ENDL

########
#TO SET#
########
index: 420, target_source: function-body@0_decl_1@0_opt_3

index: 423, target_source: ENDL



###########
#420  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  %MARK%  stmts  '}'  
 index is: 338, term type: to_deduce, before: function-body@0_decl_1@0_opt_3, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 339  , change_value: stmts

########
#SUBSET#
########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  %MARK%  stmts  '}'  
 index is: 338, term type: to_deduce, before: function-body@0_decl_1@0_opt_3, after: stmts
TARGET LIST: 
target index: 14  , change_value: %NULL%
target index: 339  , change_value: stmts

stmts  :  %MARK%  stmts@0_rep_1  
 index is: 14, term type: to_deduce, before: %NULL%, after: stmts@0_rep_1
TARGET LIST: 
target index: 15  , change_value: stmts@0_rep_1
target index: 16  , change_value: %NULL%
target index: 17  , change_value: %NULL%

stmts@0_rep_1  :  %MARK%  
 index is: 16, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1  :  %MARK%  statement  stmts@0_rep_1@0_rep_2  stmts@0_rep_1  
 index is: 17, term type: to_deduce, before: %NULL%, after: statement
TARGET LIST: 
target index: 18  , change_value: statement
target index: 44  , change_value: %NULL%
target index: 46  , change_value: %NULL%
target index: 48  , change_value: %NULL%
target index: 50  , change_value: %NULL%
target index: 52  , change_value: %NULL%
target index: 54  , change_value: %NULL%
target index: 56  , change_value: %NULL%
target index: 58  , change_value: %NULL%
target index: 60  , change_value: %NULL%
target index: 62  , change_value: %NULL%
target index: 64  , change_value: %NULL%
target index: 66  , change_value: %NULL%
target index: 68  , change_value: %NULL%
target index: 70  , change_value: %NULL%
target index: 72  , change_value: %NULL%
target index: 74  , change_value: %NULL%
target index: 76  , change_value: %NULL%
target index: 78  , change_value: %NULL%
target index: 80  , change_value: %NULL%
target index: 82  , change_value: %NULL%

statement  :  %MARK%  expr-stmt  
 index is: 44, term type: to_deduce, before: %NULL%, after: expr-stmt
TARGET LIST: 
target index: 45  , change_value: expr-stmt
target index: 405  , change_value: %NULL%

statement  :  %MARK%  class-stmt  
 index is: 46, term type: to_deduce, before: %NULL%, after: class-stmt
TARGET LIST: 
target index: 47  , change_value: class-stmt
target index: 382  , change_value: %NULL%

statement  :  %MARK%  throw-stmt  
 index is: 48, term type: to_deduce, before: %NULL%, after: throw-stmt
TARGET LIST: 
target index: 49  , change_value: throw-stmt
target index: 375  , change_value: %NULL%

statement  :  %MARK%  try-stmt  
 index is: 50, term type: to_deduce, before: %NULL%, after: try-stmt
TARGET LIST: 
target index: 51  , change_value: try-stmt
target index: 354  , change_value: %NULL%

statement  :  %MARK%  return-stmt  
 index is: 52, term type: to_deduce, before: %NULL%, after: return-stmt
TARGET LIST: 
target index: 53  , change_value: return-stmt
target index: 347  , change_value: %NULL%

statement  :  %MARK%  function-stmt  
 index is: 54, term type: to_deduce, before: %NULL%, after: function-stmt
TARGET LIST: 
target index: 55  , change_value: function-stmt
target index: 314  , change_value: %NULL%

statement  :  %MARK%  control-stmt  
 index is: 56, term type: to_deduce, before: %NULL%, after: control-stmt
TARGET LIST: 
target index: 57  , change_value: control-stmt
target index: 398  , change_value: %NULL%

statement  :  %MARK%  foreach-stmt  
 index is: 58, term type: to_deduce, before: %NULL%, after: foreach-stmt
TARGET LIST: 
target index: 59  , change_value: foreach-stmt
target index: 297  , change_value: %NULL%

statement  :  %MARK%  for-stmt  
 index is: 60, term type: to_deduce, before: %NULL%, after: for-stmt
TARGET LIST: 
target index: 61  , change_value: for-stmt
target index: 272  , change_value: %NULL%

statement  :  %MARK%  loop-stmt  
 index is: 62, term type: to_deduce, before: %NULL%, after: loop-stmt
TARGET LIST: 
target index: 63  , change_value: loop-stmt
target index: 257  , change_value: %NULL%

statement  :  %MARK%  while-stmt  
 index is: 64, term type: to_deduce, before: %NULL%, after: while-stmt
TARGET LIST: 
target index: 65  , change_value: while-stmt
target index: 250  , change_value: %NULL%

statement  :  %MARK%  switch-stmt  
 index is: 66, term type: to_deduce, before: %NULL%, after: switch-stmt
TARGET LIST: 
target index: 67  , change_value: switch-stmt
target index: 216  , change_value: %NULL%

statement  :  %MARK%  if-stmt  
 index is: 68, term type: to_deduce, before: %NULL%, after: if-stmt
TARGET LIST: 
target index: 69  , change_value: if-stmt
target index: 195  , change_value: %NULL%

statement  :  %MARK%  using-stmt  
 index is: 70, term type: to_deduce, before: %NULL%, after: using-stmt
TARGET LIST: 
target index: 71  , change_value: using-stmt
target index: 184  , change_value: %NULL%

statement  :  %MARK%  namespace-stmt  
 index is: 72, term type: to_deduce, before: %NULL%, after: namespace-stmt
TARGET LIST: 
target index: 73  , change_value: namespace-stmt
target index: 177  , change_value: %NULL%

statement  :  %MARK%  block-stmt  
 index is: 74, term type: to_deduce, before: %NULL%, after: block-stmt
TARGET LIST: 
target index: 75  , change_value: block-stmt
target index: 171  , change_value: %NULL%

statement  :  %MARK%  var-stmt  
 index is: 76, term type: to_deduce, before: %NULL%, after: var-stmt
TARGET LIST: 
target index: 77  , change_value: var-stmt
target index: 136  , change_value: %NULL%

statement  :  %MARK%  import-stmt  
 index is: 78, term type: to_deduce, before: %NULL%, after: import-stmt
TARGET LIST: 
target index: 79  , change_value: import-stmt
target index: 103  , change_value: %NULL%

statement  :  %MARK%  package-stmt  
 index is: 80, term type: to_deduce, before: %NULL%, after: package-stmt
TARGET LIST: 
target index: 81  , change_value: package-stmt
target index: 99  , change_value: %NULL%

statement  :  %MARK%  prep-stmt  
 index is: 82, term type: to_deduce, before: %NULL%, after: prep-stmt
TARGET LIST: 
target index: 83  , change_value: prep-stmt
target index: 96  , change_value: %NULL%

expr-stmt  :  %MARK%  expr  endline  
 index is: 405, term type: to_deduce, before: %NULL%, after: expr
TARGET LIST: 
target index: 406  , change_value: expr
target index: 411  , change_value: %NULL%

class-stmt  :  %MARK%  class-stmt@0_decl_1  ID  class-stmt@0_opt_3  ENDL  decl-stmts  'end'  ENDL  
 index is: 382, term type: to_deduce, before: %NULL%, after: class-stmt@0_decl_1
TARGET LIST: 
target index: 383  , change_value: class-stmt@0_decl_1
target index: 394  , change_value: %NULL%
target index: 396  , change_value: %NULL%

throw-stmt  :  %MARK%  'throw'  throw-stmt@0_opt_2  endline  
 index is: 375, term type: shift, before: %NULL%, after: 'throw'
TARGET LIST: 
target index: 376  , change_value: 'throw'

try-stmt  :  %MARK%  'try'  ENDL  stmts  try-stmt@0_rep_4  'end'  ENDL  
 index is: 354, term type: shift, before: %NULL%, after: 'try'
TARGET LIST: 
target index: 355  , change_value: 'try'

return-stmt  :  %MARK%  'return'  return-stmt@0_opt_2  endline  
 index is: 347, term type: shift, before: %NULL%, after: 'return'
TARGET LIST: 
target index: 348  , change_value: 'return'

function-stmt  :  %MARK%  'function'  ID  '('  function-stmt@0_opt_4  ')'  function-stmt@0_opt_6  function-body  
 index is: 314, term type: shift, before: %NULL%, after: 'function'
TARGET LIST: 
target index: 315  , change_value: 'function'

control-stmt  :  %MARK%  control-stmt@0_decl_1  endline  
 index is: 398, term type: to_deduce, before: %NULL%, after: control-stmt@0_decl_1
TARGET LIST: 
target index: 399  , change_value: control-stmt@0_decl_1
target index: 401  , change_value: %NULL%
target index: 403  , change_value: %NULL%

foreach-stmt  :  %MARK%  'foreach'  ID  'in'  basic-expr  for-body  
 index is: 297, term type: shift, before: %NULL%, after: 'foreach'
TARGET LIST: 
target index: 298  , change_value: 'foreach'

for-stmt  :  %MARK%  'for'  for-stmt@0_opt_2  for-stmt@0_decl_3  for-stmt@0_opt_4  for-stmt@0_decl_5  for-stmt@0_opt_6  for-body  
 index is: 272, term type: shift, before: %NULL%, after: 'for'
TARGET LIST: 
target index: 273  , change_value: 'for'

loop-stmt  :  %MARK%  'loop'  ENDL  stmts  loop-stmt@0_decl_4  
 index is: 257, term type: shift, before: %NULL%, after: 'loop'
TARGET LIST: 
target index: 258  , change_value: 'loop'

while-stmt  :  %MARK%  'while'  basic-expr  ENDL  stmts  'end'  ENDL  
 index is: 250, term type: shift, before: %NULL%, after: 'while'
TARGET LIST: 
target index: 251  , change_value: 'while'

switch-stmt  :  %MARK%  'switch'  basic-expr  ENDL  switch-stmts  'end'  ENDL  
 index is: 216, term type: shift, before: %NULL%, after: 'switch'
TARGET LIST: 
target index: 217  , change_value: 'switch'

if-stmt  :  %MARK%  'if'  basic-expr  ENDL  stmts  if-stmt@0_rep_5  'end'  ENDL  
 index is: 195, term type: shift, before: %NULL%, after: 'if'
TARGET LIST: 
target index: 196  , change_value: 'if'

using-stmt  :  %MARK%  'using'  using-list  endline  
 index is: 184, term type: shift, before: %NULL%, after: 'using'
TARGET LIST: 
target index: 185  , change_value: 'using'

namespace-stmt  :  %MARK%  'namespace'  ID  ENDL  decl-stmts  'end'  ENDL  
 index is: 177, term type: shift, before: %NULL%, after: 'namespace'
TARGET LIST: 
target index: 178  , change_value: 'namespace'

block-stmt  :  %MARK%  'block'  ENDL  stmts  'end'  ENDL  
 index is: 171, term type: shift, before: %NULL%, after: 'block'
TARGET LIST: 
target index: 172  , change_value: 'block'

var-stmt  :  %MARK%  var-stmt@0_decl_1  var-def  endline  
 index is: 136, term type: to_deduce, before: %NULL%, after: var-stmt@0_decl_1
TARGET LIST: 
target index: 137  , change_value: var-stmt@0_decl_1
target index: 140  , change_value: %NULL%
target index: 142  , change_value: %NULL%
target index: 144  , change_value: %NULL%

import-stmt  :  %MARK%  'import'  import-list  endline  
 index is: 103, term type: shift, before: %NULL%, after: 'import'
TARGET LIST: 
target index: 104  , change_value: 'import'

package-stmt  :  %MARK%  'package'  ID  endline  
 index is: 99, term type: shift, before: %NULL%, after: 'package'
TARGET LIST: 
target index: 100  , change_value: 'package'

prep-stmt  :  %MARK%  PREP  ENDL  
 index is: 96, term type: shift, before: %NULL%, after: PREP
TARGET LIST: 
target index: 97  , change_value: PREP

expr  :  %MARK%  single-expr  expr@0_opt_2  
 index is: 411, term type: to_deduce, before: %NULL%, after: single-expr
TARGET LIST: 
target index: 412  , change_value: single-expr
target index: 418  , change_value: %NULL%
target index: 420  , change_value: %NULL%

class-stmt@0_decl_1  :  %MARK%  'struct'  
 index is: 394, term type: shift, before: %NULL%, after: 'struct'
TARGET LIST: 
target index: 395  , change_value: 'struct'

class-stmt@0_decl_1  :  %MARK%  'class'  
 index is: 396, term type: shift, before: %NULL%, after: 'class'
TARGET LIST: 
target index: 397  , change_value: 'class'

control-stmt@0_decl_1  :  %MARK%  'continue'  
 index is: 401, term type: shift, before: %NULL%, after: 'continue'
TARGET LIST: 
target index: 402  , change_value: 'continue'

control-stmt@0_decl_1  :  %MARK%  'break'  
 index is: 403, term type: shift, before: %NULL%, after: 'break'
TARGET LIST: 
target index: 404  , change_value: 'break'

var-stmt@0_decl_1  :  %MARK%  'constant'  
 index is: 140, term type: shift, before: %NULL%, after: 'constant'
TARGET LIST: 
target index: 141  , change_value: 'constant'

var-stmt@0_decl_1  :  %MARK%  'link'  
 index is: 142, term type: shift, before: %NULL%, after: 'link'
TARGET LIST: 
target index: 143  , change_value: 'link'

var-stmt@0_decl_1  :  %MARK%  'var'  
 index is: 144, term type: shift, before: %NULL%, after: 'var'
TARGET LIST: 
target index: 145  , change_value: 'var'

single-expr  :  %MARK%  basic-expr  
 index is: 418, term type: to_deduce, before: %NULL%, after: basic-expr
TARGET LIST: 
target index: 419  , change_value: basic-expr
target index: 422  , change_value: %NULL%
target index: 425  , change_value: %NULL%

single-expr  :  %MARK%  lambda-expr  
 index is: 420, term type: to_deduce, before: %NULL%, after: lambda-expr
TARGET LIST: 
target index: 421  , change_value: lambda-expr
target index: 449  , change_value: %NULL%

basic-expr  :  %MARK%  cond-expr  basic-expr@1_opt_2  
 index is: 422, term type: to_deduce, before: %NULL%, after: cond-expr
TARGET LIST: 
target index: 423  , change_value: cond-expr
target index: 511  , change_value: %NULL%

basic-expr  :  %MARK%  var-bind  '='  cond-expr  
 index is: 425, term type: to_deduce, before: %NULL%, after: var-bind
TARGET LIST: 
target index: 146  , change_value: %NULL%
target index: 426  , change_value: var-bind

lambda-expr  :  %MARK%  '['  lambda-expr@0_opt_2  ']'  '('  lambda-expr@0_opt_5  ')'  lambda-body  
 index is: 449, term type: shift, before: %NULL%, after: '['
TARGET LIST: 
target index: 450  , change_value: '['

cond-expr  :  %MARK%  logic-or-expr  cond-expr@0_opt_2  
 index is: 511, term type: to_deduce, before: %NULL%, after: logic-or-expr
TARGET LIST: 
target index: 512  , change_value: logic-or-expr
target index: 525  , change_value: %NULL%

var-bind  :  %MARK%  '('  var-bind-list  var-bind@0_rep_3  ')'  
 index is: 146, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 147  , change_value: '('

logic-or-expr  :  %MARK%  logic-and-expr  logic-or-expr@0_opt_2  
 index is: 525, term type: to_deduce, before: %NULL%, after: logic-and-expr
TARGET LIST: 
target index: 526  , change_value: logic-and-expr
target index: 536  , change_value: %NULL%

logic-and-expr  :  %MARK%  equal-expr  logic-and-expr@0_opt_2  
 index is: 536, term type: to_deduce, before: %NULL%, after: equal-expr
TARGET LIST: 
target index: 537  , change_value: equal-expr
target index: 547  , change_value: %NULL%

equal-expr  :  %MARK%  relat-expr  equal-expr@0_opt_2  
 index is: 547, term type: to_deduce, before: %NULL%, after: relat-expr
TARGET LIST: 
target index: 548  , change_value: relat-expr
target index: 562  , change_value: %NULL%

relat-expr  :  %MARK%  add-expr  relat-expr@0_opt_2  
 index is: 562, term type: to_deduce, before: %NULL%, after: add-expr
TARGET LIST: 
target index: 563  , change_value: add-expr
target index: 577  , change_value: %NULL%

add-expr  :  %MARK%  mul-expr  add-expr@0_opt_2  
 index is: 577, term type: to_deduce, before: %NULL%, after: mul-expr
TARGET LIST: 
target index: 578  , change_value: mul-expr
target index: 588  , change_value: %NULL%

mul-expr  :  %MARK%  unary-expr  mul-expr@0_opt_2  
 index is: 588, term type: to_deduce, before: %NULL%, after: unary-expr
TARGET LIST: 
target index: 589  , change_value: unary-expr
target index: 603  , change_value: %NULL%
target index: 606  , change_value: %NULL%
target index: 610  , change_value: %NULL%

unary-expr  :  %MARK%  prim-expr  unary-expr@2_opt_2  
 index is: 603, term type: to_deduce, before: %NULL%, after: prim-expr
TARGET LIST: 
target index: 604  , change_value: prim-expr
target index: 651  , change_value: %NULL%
target index: 653  , change_value: %NULL%

unary-expr  :  %MARK%  unary-expr@1_decl_1  unary-expr  unary-expr@1_opt_3  
 index is: 606, term type: to_deduce, before: %NULL%, after: unary-expr@1_decl_1
TARGET LIST: 
target index: 607  , change_value: unary-expr@1_decl_1
target index: 619  , change_value: %NULL%
target index: 621  , change_value: %NULL%

unary-expr  :  %MARK%  unary-op  unary-expr  
 index is: 610, term type: to_deduce, before: %NULL%, after: unary-op
TARGET LIST: 
target index: 611  , change_value: unary-op
target index: 623  , change_value: %NULL%
target index: 625  , change_value: %NULL%
target index: 627  , change_value: %NULL%
target index: 629  , change_value: %NULL%
target index: 631  , change_value: %NULL%
target index: 633  , change_value: %NULL%
target index: 635  , change_value: %NULL%
target index: 637  , change_value: %NULL%

prim-expr  :  %MARK%  constant  
 index is: 651, term type: to_deduce, before: %NULL%, after: constant
TARGET LIST: 
target index: 652  , change_value: constant
target index: 702  , change_value: %NULL%
target index: 704  , change_value: %NULL%
target index: 706  , change_value: %NULL%
target index: 708  , change_value: %NULL%

prim-expr  :  %MARK%  visit-expr  
 index is: 653, term type: to_deduce, before: %NULL%, after: visit-expr
TARGET LIST: 
target index: 654  , change_value: visit-expr
target index: 655  , change_value: %NULL%

unary-expr@1_decl_1  :  %MARK%  'gcnew'  
 index is: 619, term type: shift, before: %NULL%, after: 'gcnew'
TARGET LIST: 
target index: 620  , change_value: 'gcnew'

unary-expr@1_decl_1  :  %MARK%  'new'  
 index is: 621, term type: shift, before: %NULL%, after: 'new'
TARGET LIST: 
target index: 622  , change_value: 'new'

unary-op  :  %MARK%  'not'  
 index is: 623, term type: shift, before: %NULL%, after: 'not'
TARGET LIST: 
target index: 624  , change_value: 'not'

unary-op  :  %MARK%  '!'  
 index is: 625, term type: shift, before: %NULL%, after: '!'
TARGET LIST: 
target index: 626  , change_value: '!'

unary-op  :  %MARK%  '-'  
 index is: 627, term type: shift, before: %NULL%, after: '-'
TARGET LIST: 
target index: 628  , change_value: '-'

unary-op  :  %MARK%  '&'  
 index is: 629, term type: shift, before: %NULL%, after: '&'
TARGET LIST: 
target index: 630  , change_value: '&'

unary-op  :  %MARK%  '*'  
 index is: 631, term type: shift, before: %NULL%, after: '*'
TARGET LIST: 
target index: 632  , change_value: '*'

unary-op  :  %MARK%  '--'  
 index is: 633, term type: shift, before: %NULL%, after: '--'
TARGET LIST: 
target index: 634  , change_value: '--'

unary-op  :  %MARK%  '++'  
 index is: 635, term type: shift, before: %NULL%, after: '++'
TARGET LIST: 
target index: 636  , change_value: '++'

unary-op  :  %MARK%  'typeid'  
 index is: 637, term type: shift, before: %NULL%, after: 'typeid'
TARGET LIST: 
target index: 638  , change_value: 'typeid'

constant  :  %MARK%  'false'  
 index is: 702, term type: shift, before: %NULL%, after: 'false'
TARGET LIST: 
target index: 703  , change_value: 'false'

constant  :  %MARK%  'true'  
 index is: 704, term type: shift, before: %NULL%, after: 'true'
TARGET LIST: 
target index: 705  , change_value: 'true'

constant  :  %MARK%  'null'  
 index is: 706, term type: shift, before: %NULL%, after: 'null'
TARGET LIST: 
target index: 707  , change_value: 'null'

constant  :  %MARK%  NUM  
 index is: 708, term type: shift, before: %NULL%, after: NUM
TARGET LIST: 
target index: 709  , change_value: NUM

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 421, target_source: stmts

index: 3, target_source: stmts@0_rep_1

index: 4, target_source: statement

index: 7, target_source: expr-stmt

index: 8, target_source: class-stmt

index: 9, target_source: throw-stmt

index: 10, target_source: try-stmt

index: 11, target_source: return-stmt

index: 12, target_source: function-stmt

index: 13, target_source: control-stmt

index: 14, target_source: foreach-stmt

index: 15, target_source: for-stmt

index: 16, target_source: loop-stmt

index: 17, target_source: while-stmt

index: 18, target_source: switch-stmt

index: 19, target_source: if-stmt

index: 20, target_source: using-stmt

index: 21, target_source: namespace-stmt

index: 22, target_source: block-stmt

index: 23, target_source: var-stmt

index: 24, target_source: import-stmt

index: 25, target_source: package-stmt

index: 26, target_source: prep-stmt

index: 27, target_source: expr

index: 31, target_source: class-stmt@0_decl_1

index: 60, target_source: 'throw'

index: 202, target_source: 'try'

index: 217, target_source: 'return'

index: 48, target_source: 'function'

index: 221, target_source: control-stmt@0_decl_1

index: 223, target_source: 'foreach'

index: 233, target_source: 'for'

index: 260, target_source: 'loop'

index: 270, target_source: 'while'

index: 276, target_source: 'switch'

index: 295, target_source: 'if'

index: 310, target_source: 'using'

index: 323, target_source: 'namespace'

index: 339, target_source: 'block'

index: 329, target_source: var-stmt@0_decl_1

index: 344, target_source: 'import'

index: 354, target_source: 'package'

index: 332, target_source: PREP

index: 64, target_source: single-expr

index: 334, target_source: 'struct'

index: 335, target_source: 'class'

index: 357, target_source: 'continue'

index: 358, target_source: 'break'

index: 336, target_source: 'constant'

index: 337, target_source: 'link'

index: 338, target_source: 'var'

index: 68, target_source: basic-expr

index: 69, target_source: lambda-expr

index: 70, target_source: cond-expr

index: 74, target_source: var-bind

index: 123, target_source: '['

index: 77, target_source: logic-or-expr

index: 164, target_source: '('

index: 82, target_source: logic-and-expr

index: 86, target_source: equal-expr

index: 90, target_source: relat-expr

index: 94, target_source: add-expr

index: 98, target_source: mul-expr

index: 102, target_source: unary-expr

index: 106, target_source: prim-expr

index: 115, target_source: unary-expr@1_decl_1

index: 132, target_source: unary-op

index: 134, target_source: constant

index: 135, target_source: visit-expr

index: 136, target_source: 'gcnew'

index: 137, target_source: 'new'

index: 138, target_source: 'not'

index: 139, target_source: '!'

index: 140, target_source: '-'

index: 141, target_source: '&'

index: 142, target_source: '*'

index: 143, target_source: '--'

index: 144, target_source: '++'

index: 145, target_source: 'typeid'

index: 146, target_source: 'false'

index: 147, target_source: 'true'

index: 148, target_source: 'null'

index: 149, target_source: NUM

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 192, target_source: ID



###########
#421  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  %MARK%  '}'  
 index is: 339, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 340  , change_value: '}'

########
#SUBSET#
########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  %MARK%  '}'  
 index is: 339, term type: shift, before: stmts, after: '}'
TARGET LIST: 
target index: 340  , change_value: '}'

########
#TO SET#
########
index: 422, target_source: '}'



###########
#422  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  %MARK%  
 index is: 340, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-body@0_decl_1  :  function-body@0_decl_1@0_opt_1  '{'  function-body@0_decl_1@0_opt_3  stmts  '}'  %MARK%  
 index is: 340, term type: deduce, before: '}', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#423  TERM#
###########


##########
#FROM SET#
##########
function-body@0_decl_1@0_opt_3  :  ENDL  %MARK%  
 index is: 343, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-body@0_decl_1@0_opt_3  :  ENDL  %MARK%  
 index is: 343, term type: deduce, before: ENDL, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#424  TERM#
###########


##########
#FROM SET#
##########
function-stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-stmt@0_opt_6  :  'override'  %MARK%  
 index is: 324, term type: deduce, before: 'override', after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#425  TERM#
###########


##########
#FROM SET#
##########
function-stmt@0_opt_4  :  argument-list  %MARK%  
 index is: 327, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
function-stmt@0_opt_4  :  argument-list  %MARK%  
 index is: 327, term type: deduce, before: argument-list, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#426  TERM#
###########


##########
#FROM SET#
##########
decl-stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl-stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl-stmts@0_rep_1@0_rep_2

########
#SUBSET#
########
decl-stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  decl-stmts@0_rep_1@0_rep_2  
 index is: 34, term type: to_deduce, before: ENDL, after: decl-stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 32  , change_value: %NULL%
target index: 33  , change_value: %NULL%
target index: 35  , change_value: decl-stmts@0_rep_1@0_rep_2

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 32, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

decl-stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  decl-stmts@0_rep_1@0_rep_2  
 index is: 33, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 34  , change_value: ENDL

########
#TO SET#
########
index: 427, target_source: decl-stmts@0_rep_1@0_rep_2

index: 426, target_source: ENDL



###########
#427  TERM#
###########


##########
#FROM SET#
##########
decl-stmts@0_rep_1@0_rep_2  :  ENDL  decl-stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl-stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
decl-stmts@0_rep_1@0_rep_2  :  ENDL  decl-stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 35, term type: deduce, before: decl-stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#428  TERM#
###########


##########
#FROM SET#
##########
class-stmt@0_opt_3  :  'extends'  %MARK%  visit-expr  
 index is: 392, term type: to_deduce, before: 'extends', after: visit-expr
TARGET LIST: 
target index: 393  , change_value: visit-expr
target index: 655  , change_value: %NULL%

########
#SUBSET#
########
class-stmt@0_opt_3  :  'extends'  %MARK%  visit-expr  
 index is: 392, term type: to_deduce, before: 'extends', after: visit-expr
TARGET LIST: 
target index: 393  , change_value: visit-expr
target index: 655  , change_value: %NULL%

visit-expr  :  %MARK%  object  visit-expr@0_opt_2  
 index is: 655, term type: to_deduce, before: %NULL%, after: object
TARGET LIST: 
target index: 656  , change_value: object
target index: 666  , change_value: %NULL%
target index: 668  , change_value: %NULL%
target index: 670  , change_value: %NULL%
target index: 672  , change_value: %NULL%
target index: 674  , change_value: %NULL%
target index: 677  , change_value: %NULL%

object  :  %MARK%  CHAR  
 index is: 666, term type: shift, before: %NULL%, after: CHAR
TARGET LIST: 
target index: 667  , change_value: CHAR

object  :  %MARK%  element  
 index is: 668, term type: to_deduce, before: %NULL%, after: element
TARGET LIST: 
target index: 669  , change_value: element
target index: 686  , change_value: %NULL%

object  :  %MARK%  'global'  
 index is: 670, term type: shift, before: %NULL%, after: 'global'
TARGET LIST: 
target index: 671  , change_value: 'global'

object  :  %MARK%  'local'  
 index is: 672, term type: shift, before: %NULL%, after: 'local'
TARGET LIST: 
target index: 673  , change_value: 'local'

object  :  %MARK%  STR  object@1_opt_2  
 index is: 674, term type: shift, before: %NULL%, after: STR
TARGET LIST: 
target index: 675  , change_value: STR

object  :  %MARK%  array  object@0_opt_2  
 index is: 677, term type: to_deduce, before: %NULL%, after: array
TARGET LIST: 
target index: 678  , change_value: array
target index: 710  , change_value: %NULL%

element  :  %MARK%  element@0_decl_1  element@0_rep_2  
 index is: 686, term type: to_deduce, before: %NULL%, after: element@0_decl_1
TARGET LIST: 
target index: 687  , change_value: element@0_decl_1
target index: 696  , change_value: %NULL%
target index: 700  , change_value: %NULL%

array  :  %MARK%  '{'  array@0_opt_2  '}'  
 index is: 710, term type: shift, before: %NULL%, after: '{'
TARGET LIST: 
target index: 711  , change_value: '{'

element@0_decl_1  :  %MARK%  '('  single-expr  ')'  
 index is: 696, term type: shift, before: %NULL%, after: '('
TARGET LIST: 
target index: 697  , change_value: '('

element@0_decl_1  :  %MARK%  ID  
 index is: 700, term type: shift, before: %NULL%, after: ID
TARGET LIST: 
target index: 701  , change_value: ID

########
#TO SET#
########
index: 429, target_source: visit-expr

index: 150, target_source: object

index: 154, target_source: CHAR

index: 155, target_source: element

index: 156, target_source: 'global'

index: 157, target_source: 'local'

index: 158, target_source: STR

index: 179, target_source: array

index: 182, target_source: element@0_decl_1

index: 119, target_source: '{'

index: 193, target_source: '('

index: 192, target_source: ID



###########
#429  TERM#
###########


##########
#FROM SET#
##########
class-stmt@0_opt_3  :  'extends'  visit-expr  %MARK%  
 index is: 393, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
class-stmt@0_opt_3  :  'extends'  visit-expr  %MARK%  
 index is: 393, term type: deduce, before: visit-expr, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


###########
#430  TERM#
###########


##########
#FROM SET#
##########
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

########
#SUBSET#
########
stmts@0_rep_1@0_rep_2  :  ENDL  %MARK%  stmts@0_rep_1@0_rep_2  
 index is: 23, term type: to_deduce, before: ENDL, after: stmts@0_rep_1@0_rep_2
TARGET LIST: 
target index: 21  , change_value: %NULL%
target index: 22  , change_value: %NULL%
target index: 24  , change_value: stmts@0_rep_1@0_rep_2

stmts@0_rep_1@0_rep_2  :  %MARK%  
 index is: 21, term type: deduce, before: %NULL%, after: %NULL%
TARGET LIST: 

stmts@0_rep_1@0_rep_2  :  %MARK%  ENDL  stmts@0_rep_1@0_rep_2  
 index is: 22, term type: shift, before: %NULL%, after: ENDL
TARGET LIST: 
target index: 23  , change_value: ENDL

########
#TO SET#
########
index: 431, target_source: stmts@0_rep_1@0_rep_2

index: 430, target_source: ENDL



###########
#431  TERM#
###########


##########
#FROM SET#
##########
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#SUBSET#
########
stmts@0_rep_1@0_rep_2  :  ENDL  stmts@0_rep_1@0_rep_2  %MARK%  
 index is: 24, term type: deduce, before: stmts@0_rep_1@0_rep_2, after: %NULL%
TARGET LIST: 

########
#TO SET#
########


