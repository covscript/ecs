@require: 210601
@charset: utf8

import codec.*

struct my_except
    var xxxx = null
    function construct(str)
        xxxx = "My Except: " + str
    end
end

var a = 0, b = 2
var func = [a, =b](=n:number)
{
    if n < 0
        throw new my_except{"Hello"}
    end
    --n
    a += n
    b -= n
    return a + b
}

function call(f:function, args)
    return f(args...)
end

var n = 10
system.out.println("n = " + n)
([](n)->++n)(n)
system.out.println("n = " + n)
system.out.println("f = " + call(func, {n}))
system.out.println("n = " + n)
system.out.println("a = " + a)
system.out.println("b = " + b)

try
    func(system.in.input())
catch em:my_except
    system.out.println(em.xxxx)
catch er:exception
    system.out.println(er.what)
end